DIGEST 10148b23442b0c06e3825a3a5513726d
FLogic
R116:122 Tactics <> <> lib
R131:135 Basics <> evenb def
R1023:1025 Coq.Init.Logic <> :type_scope:x_'='_x not
R1065:1067 Coq.Init.Datatypes <> nat ind
R1075:1077 Coq.Init.Logic <> :type_scope:x_'='_x not
R1071:1073 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1070:1070 Logic <> n var
R1074:1074 Logic <> m var
R1079:1081 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1078:1078 Logic <> m var
R1082:1082 Logic <> n var
R1329:1331 Coq.Init.Logic <> :type_scope:x_'='_x not
R1369:1371 Coq.Init.Datatypes <> nat ind
R1375:1377 Coq.Init.Logic <> :type_scope:x_'='_x not
R1374:1374 Logic <> n var
R1405:1407 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 1740:1752 <> plus_2_2_is_4
R1763:1765 Coq.Init.Logic <> :type_scope:x_'='_x not
R1759:1761 Coq.Init.Peano <> :nat_scope:x_'+'_x not
def 2003:2011 <> plus_fact
R2028:2030 Coq.Init.Logic <> :type_scope:x_'='_x not
R2024:2026 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R2040:2048 Logic <> plus_fact def
prf 2233:2249 <> plus_fact_is_true
R2255:2263 Logic <> plus_fact def
def 2588:2595 <> is_three
R2602:2604 Coq.Init.Datatypes <> nat ind
R2620:2622 Coq.Init.Logic <> :type_scope:x_'='_x not
R2619:2619 Logic <> n var
R2632:2639 Logic <> is_three def
def 2896:2904 <> injective
R2918:2921 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2922:2922 Logic <> B var
R2917:2917 Logic <> A var
R2943:2943 Logic <> A var
R2955:2958 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2960:2962 Coq.Init.Logic <> :type_scope:x_'='_x not
R2959:2959 Logic <> x var
R2963:2963 Logic <> y var
R2949:2951 Coq.Init.Logic <> :type_scope:x_'='_x not
R2946:2946 Logic <> f var
R2948:2948 Logic <> x var
R2952:2952 Logic <> f var
R2954:2954 Logic <> y var
prf 2973:2980 <> succ_inj
R2984:2992 Logic <> injective def
R2994:2994 Coq.Init.Datatypes <> S constr
R3327:3328 Coq.Init.Logic <> eq ind
def 3926:3936 <> and_example
R3949:3952 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3945:3947 Coq.Init.Logic <> :type_scope:x_'='_x not
R3941:3943 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3958:3960 Coq.Init.Logic <> :type_scope:x_'='_x not
R3954:3956 Coq.Init.Peano <> :nat_scope:x_'*'_x not
prf 4367:4375 <> and_intro
R4399:4402 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4404:4407 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4409:4412 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4408:4408 Logic <> A var
R4413:4413 Logic <> B var
R4403:4403 Logic <> B var
R4398:4398 Logic <> A var
def 4718:4729 <> and_example'
R4742:4745 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4738:4740 Coq.Init.Logic <> :type_scope:x_'='_x not
R4734:4736 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4751:4753 Coq.Init.Logic <> :type_scope:x_'='_x not
R4747:4749 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4772:4780 Logic <> and_intro thm
R4772:4780 Logic <> and_intro thm
prf 4863:4870 <> plus_n_O
R4882:4884 Coq.Init.Datatypes <> nat ind
R4892:4894 Coq.Init.Logic <> :type_scope:x_'='_x not
R4888:4890 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4887:4887 Logic <> n var
R4895:4895 Logic <> n var
def 5055:5066 <> and_exercise
R5085:5087 Coq.Init.Datatypes <> nat ind
R5099:5102 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5108:5111 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5104:5106 Coq.Init.Logic <> :type_scope:x_'='_x not
R5103:5103 Logic <> n var
R5113:5115 Coq.Init.Logic <> :type_scope:x_'='_x not
R5112:5112 Logic <> m var
R5095:5097 Coq.Init.Logic <> :type_scope:x_'='_x not
R5091:5093 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5090:5090 Logic <> n var
R5094:5094 Logic <> m var
R5181:5188 Logic <> plus_n_O thm
R5181:5188 Logic <> plus_n_O thm
R5181:5188 Logic <> plus_n_O thm
R5228:5236 Induction <> plus_n_Sm thm
R5228:5236 Induction <> plus_n_Sm thm
R5228:5236 Induction <> plus_n_Sm thm
prf 5810:5821 <> and_example2
R5840:5842 Coq.Init.Datatypes <> nat ind
R5859:5862 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5868:5870 Coq.Init.Logic <> :type_scope:x_'='_x not
R5864:5866 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5863:5863 Logic <> n var
R5867:5867 Logic <> m var
R5850:5853 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5846:5848 Coq.Init.Logic <> :type_scope:x_'='_x not
R5845:5845 Logic <> n var
R5855:5857 Coq.Init.Logic <> :type_scope:x_'='_x not
R5854:5854 Logic <> m var
prf 6122:6134 <> and_example2'
R6153:6155 Coq.Init.Datatypes <> nat ind
R6172:6175 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6181:6183 Coq.Init.Logic <> :type_scope:x_'='_x not
R6177:6179 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6176:6176 Logic <> n var
R6180:6180 Logic <> m var
R6163:6166 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6159:6161 Coq.Init.Logic <> :type_scope:x_'='_x not
R6158:6158 Logic <> n var
R6168:6170 Coq.Init.Logic <> :type_scope:x_'='_x not
R6167:6167 Logic <> m var
prf 6462:6475 <> and_example2''
R6494:6496 Coq.Init.Datatypes <> nat ind
R6504:6507 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6513:6516 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6522:6524 Coq.Init.Logic <> :type_scope:x_'='_x not
R6518:6520 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6517:6517 Logic <> n var
R6521:6521 Logic <> m var
R6509:6511 Coq.Init.Logic <> :type_scope:x_'='_x not
R6508:6508 Logic <> m var
R6500:6502 Coq.Init.Logic <> :type_scope:x_'='_x not
R6499:6499 Logic <> n var
prf 6877:6888 <> and_example3
R6907:6909 Coq.Init.Datatypes <> nat ind
R6921:6924 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6930:6932 Coq.Init.Logic <> :type_scope:x_'='_x not
R6926:6928 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R6925:6925 Logic <> n var
R6929:6929 Logic <> m var
R6917:6919 Coq.Init.Logic <> :type_scope:x_'='_x not
R6913:6915 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6912:6912 Logic <> n var
R6916:6916 Logic <> m var
R7003:7006 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6999:7001 Coq.Init.Logic <> :type_scope:x_'='_x not
R7008:7010 Coq.Init.Logic <> :type_scope:x_'='_x not
R7003:7006 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6999:7001 Coq.Init.Logic <> :type_scope:x_'='_x not
R7008:7010 Coq.Init.Logic <> :type_scope:x_'='_x not
R7025:7036 Logic <> and_exercise ex
R7025:7036 Logic <> and_exercise ex
prf 7298:7302 <> proj1
R7333:7336 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7337:7337 Logic <> P var
R7328:7331 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7327:7327 Logic <> P var
R7332:7332 Logic <> Q var
prf 7442:7446 <> proj2
R7477:7480 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7481:7481 Logic <> Q var
R7472:7475 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7471:7471 Logic <> P var
R7476:7476 Logic <> Q var
prf 7763:7772 <> and_commut
R7803:7806 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7808:7811 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7807:7807 Logic <> Q var
R7812:7812 Logic <> P var
R7798:7801 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7797:7797 Logic <> P var
R7802:7802 Logic <> Q var
prf 8186:8194 <> and_assoc
R8234:8237 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8238:8238 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8245:8249 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8240:8243 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8239:8239 Logic <> P var
R8244:8244 Logic <> Q var
R8250:8250 Logic <> R var
R8222:8226 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8233:8233 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8221:8221 Logic <> P var
R8228:8231 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8227:8227 Logic <> Q var
R8232:8232 Logic <> R var
R8570:8572 Coq.Init.Logic <> and ind
prf 9136:9145 <> or_example
R9164:9166 Coq.Init.Datatypes <> nat ind
R9183:9186 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9192:9194 Coq.Init.Logic <> :type_scope:x_'='_x not
R9188:9190 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R9187:9187 Logic <> n var
R9191:9191 Logic <> m var
R9174:9177 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9170:9172 Coq.Init.Logic <> :type_scope:x_'='_x not
R9169:9169 Logic <> n var
R9179:9181 Coq.Init.Logic <> :type_scope:x_'='_x not
R9178:9178 Logic <> m var
R9409:9416 Coq.Init.Peano <> mult_n_O thm
R9409:9416 Coq.Init.Peano <> mult_n_O thm
R9409:9416 Coq.Init.Peano <> mult_n_O thm
prf 9776:9783 <> or_intro
R9807:9810 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9812:9815 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9811:9811 Logic <> A var
R9816:9816 Logic <> B var
R9806:9806 Logic <> A var
prf 9966:9977 <> zero_or_succ
R9994:9996 Coq.Init.Datatypes <> nat ind
R10004:10007 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10000:10002 Coq.Init.Logic <> :type_scope:x_'='_x not
R9999:9999 Logic <> n var
R10009:10011 Coq.Init.Logic <> :type_scope:x_'='_x not
R10008:10008 Logic <> n var
R10012:10012 Coq.Init.Datatypes <> S constr
R10015:10018 Coq.Init.Peano <> pred syndef
R10020:10020 Logic <> n var
prf 10171:10179 <> mult_eq_0
R10206:10209 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10215:10218 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10211:10213 Coq.Init.Logic <> :type_scope:x_'='_x not
R10210:10210 Logic <> n var
R10220:10222 Coq.Init.Logic <> :type_scope:x_'='_x not
R10219:10219 Logic <> m var
R10202:10204 Coq.Init.Logic <> :type_scope:x_'='_x not
R10198:10200 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R10197:10197 Logic <> n var
R10201:10201 Logic <> m var
prf 10409:10417 <> or_commut
R10448:10452 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10454:10457 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10453:10453 Logic <> Q var
R10458:10458 Logic <> P var
R10443:10446 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10442:10442 Logic <> P var
R10447:10447 Logic <> Q var
mod 11509:11513 <> MyNot
def 11528:11530 MyNot not
R11545:11548 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11549:11553 Coq.Init.Logic <> False ind
R11544:11544 Logic <> P var
R11576:11578 Logic MyNot not def
not 11566:11566 MyNot :type_scope:'~'_x
R11604:11606 Logic MyNot not def
R11638:11642 Logic MyNot <> mod
prf 11876:11893 <> ex_falso_quodlibet
R11921:11924 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11925:11925 Logic <> P var
R11916:11920 Coq.Init.Logic <> False ind
prf 12335:12353 <> not_implies_our_not
R12379:12383 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12407:12407 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12402:12405 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12406:12406 Logic <> Q var
R12401:12401 Logic <> P var
R12376:12377 Coq.Init.Logic <> :type_scope:'~'_x not
R12378:12378 Logic <> P var
prf 12586:12597 <> zero_not_one
R12601:12602 Coq.Init.Logic <> :type_scope:'~'_x not
R12608:12608 Coq.Init.Logic <> :type_scope:'~'_x not
R12604:12606 Coq.Init.Logic <> :type_scope:x_'='_x not
R12767:12770 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 12800:12812 <> zero_not_one'
R12817:12820 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 13226:13234 <> not_False
R13240:13241 Coq.Init.Logic <> :type_scope:'~'_x not
R13242:13246 Coq.Init.Logic <> False ind
R13265:13267 Coq.Init.Logic <> not def
prf 13306:13335 <> contradiction_implies_anything
R13360:13360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13368:13372 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13373:13373 Logic <> Q var
R13362:13365 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13361:13361 Logic <> P var
R13366:13366 Coq.Init.Logic <> :type_scope:'~'_x not
R13367:13367 Logic <> P var
R13437:13439 Coq.Init.Logic <> not def
prf 13496:13505 <> double_neg
R13529:13532 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13533:13533 Coq.Init.Logic <> :type_scope:'~'_x not
R13534:13534 Coq.Init.Logic <> :type_scope:'~'_x not
R13535:13535 Logic <> P var
R13528:13528 Logic <> P var
R13590:13592 Coq.Init.Logic <> not def
prf 13908:13921 <> contrapositive
R13948:13948 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13955:13960 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13969:13969 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13963:13966 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13967:13967 Coq.Init.Logic <> :type_scope:'~'_x not
R13968:13968 Logic <> P var
R13961:13961 Coq.Init.Logic <> :type_scope:'~'_x not
R13962:13962 Logic <> Q var
R13950:13953 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13954:13954 Logic <> Q var
R13949:13949 Logic <> P var
R14035:14037 Coq.Init.Logic <> not def
prf 14153:14175 <> not_both_true_and_false
R14198:14200 Coq.Init.Logic <> :type_scope:'~'_x not
R14208:14208 Coq.Init.Logic <> :type_scope:'~'_x not
R14202:14205 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14201:14201 Logic <> P var
R14206:14206 Coq.Init.Logic <> :type_scope:'~'_x not
R14207:14207 Logic <> P var
R14277:14279 Coq.Init.Logic <> not def
def 14406:14426 <> informal_not_PNP_TODO
R15047:15064 Logic <> ex_falso_quodlibet thm
prf 15075:15091 <> not_true_is_false
R15106:15109 Basics <> bool ind
R15123:15126 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15128:15130 Coq.Init.Logic <> :type_scope:x_'='_x not
R15127:15127 Logic <> b var
R15131:15135 Basics <> false constr
R15115:15118 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R15114:15114 Logic <> b var
R15119:15122 Basics <> true constr
R15190:15192 Coq.Init.Logic <> not def
R15210:15227 Logic <> ex_falso_quodlibet thm
R15210:15227 Logic <> ex_falso_quodlibet thm
prf 15438:15455 <> not_true_is_false'
R15470:15473 Basics <> bool ind
R15487:15490 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15492:15494 Coq.Init.Logic <> :type_scope:x_'='_x not
R15491:15491 Logic <> b var
R15495:15499 Basics <> false constr
R15479:15482 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R15478:15478 Logic <> b var
R15483:15486 Basics <> true constr
R15555:15557 Coq.Init.Logic <> not def
prf 15934:15945 <> True_is_true
R15949:15952 Coq.Init.Logic <> True ind
R15968:15968 Coq.Init.Logic <> I constr
R15968:15968 Coq.Init.Logic <> I constr
mod 16651:16655 <> MyIff
def 16670:16672 MyIff iff
R16690:16690 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16697:16702 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16709:16709 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16692:16695 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16696:16696 Logic <> Q var
R16691:16691 Logic <> P var
R16704:16707 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16708:16708 Logic <> P var
R16703:16703 Logic <> Q var
R16736:16738 Logic MyIff iff def
not 16722:16722 MyIff :type_scope:x_'<->'_x
R16840:16844 Logic MyIff <> mod
prf 16856:16862 <> iff_sym
R16887:16887 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16895:16900 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16908:16908 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16902:16906 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16901:16901 Logic <> Q var
R16907:16907 Logic <> P var
R16889:16893 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16888:16888 Logic <> P var
R16894:16894 Logic <> Q var
prf 17036:17053 <> not_true_iff_false
R17078:17082 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17070:17073 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17069:17069 Logic <> b var
R17074:17077 Basics <> true constr
R17084:17086 Coq.Init.Logic <> :type_scope:x_'='_x not
R17083:17083 Logic <> b var
R17087:17091 Basics <> false constr
R17163:17179 Logic <> not_true_is_false thm
R17163:17179 Logic <> not_true_is_false thm
prf 17446:17453 <> iff_refl
R17477:17481 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17476:17476 Logic <> P var
R17482:17482 Logic <> P var
prf 17568:17576 <> iff_trans
R17603:17603 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17611:17615 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17616:17616 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17624:17629 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17637:17637 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17631:17635 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17630:17630 Logic <> P var
R17636:17636 Logic <> R var
R17618:17622 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17617:17617 Logic <> Q var
R17623:17623 Logic <> R var
R17605:17609 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17604:17604 Logic <> P var
R17610:17610 Logic <> Q var
prf 17870:17892 <> or_distributes_over_and
R17932:17936 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17920:17924 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17931:17931 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17919:17919 Logic <> P var
R17926:17929 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17925:17925 Logic <> Q var
R17930:17930 Logic <> R var
R17937:17937 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17944:17949 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17956:17956 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17939:17942 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17938:17938 Logic <> P var
R17943:17943 Logic <> Q var
R17951:17954 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17950:17950 Logic <> P var
R17955:17955 Logic <> R var
R18596:18613 Coq.Setoids.Setoid <> <> lib
prf 18767:18772 <> mult_0
R18797:18801 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18793:18795 Coq.Init.Logic <> :type_scope:x_'='_x not
R18789:18791 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R18788:18788 Logic <> n var
R18792:18792 Logic <> m var
R18807:18810 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18803:18805 Coq.Init.Logic <> :type_scope:x_'='_x not
R18802:18802 Logic <> n var
R18812:18814 Coq.Init.Logic <> :type_scope:x_'='_x not
R18811:18811 Logic <> m var
R18844:18852 Logic <> mult_eq_0 thm
R18844:18852 Logic <> mult_eq_0 thm
R18865:18874 Logic <> or_example thm
R18865:18874 Logic <> or_example thm
prf 18889:18896 <> or_assoc
R18936:18940 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18924:18928 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18935:18935 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18923:18923 Logic <> P var
R18930:18933 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18929:18929 Logic <> Q var
R18934:18934 Logic <> R var
R18941:18941 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18948:18952 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18943:18946 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18942:18942 Logic <> P var
R18947:18947 Logic <> Q var
R18953:18953 Logic <> R var
prf 19401:19408 <> mult_0_3
R19441:19445 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19437:19439 Coq.Init.Logic <> :type_scope:x_'='_x not
R19433:19435 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R19429:19431 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R19428:19428 Logic <> n var
R19432:19432 Logic <> m var
R19436:19436 Logic <> p var
R19451:19454 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19447:19449 Coq.Init.Logic <> :type_scope:x_'='_x not
R19446:19446 Logic <> n var
R19460:19463 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19456:19458 Coq.Init.Logic <> :type_scope:x_'='_x not
R19455:19455 Logic <> m var
R19465:19467 Coq.Init.Logic <> :type_scope:x_'='_x not
R19464:19464 Logic <> p var
R19504:19509 Logic <> mult_0 thm
R19504:19509 Logic <> mult_0 thm
R19504:19509 Logic <> mult_0 thm
R19520:19525 Logic <> mult_0 thm
R19520:19525 Logic <> mult_0 thm
R19520:19525 Logic <> mult_0 thm
R19536:19543 Logic <> or_assoc thm
R19536:19543 Logic <> or_assoc thm
R19536:19543 Logic <> or_assoc thm
prf 19741:19757 <> apply_iff_example
R19776:19778 Coq.Init.Datatypes <> nat ind
R19790:19793 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19799:19802 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19795:19797 Coq.Init.Logic <> :type_scope:x_'='_x not
R19794:19794 Logic <> n var
R19804:19806 Coq.Init.Logic <> :type_scope:x_'='_x not
R19803:19803 Logic <> m var
R19786:19788 Coq.Init.Logic <> :type_scope:x_'='_x not
R19782:19784 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R19781:19781 Logic <> n var
R19785:19785 Logic <> m var
R19839:19844 Logic <> mult_0 thm
R19839:19844 Logic <> mult_0 thm
prf 20718:20729 <> four_is_even
R20733:20739 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20747:20748 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20744:20746 Coq.Init.Datatypes <> nat ind
R20750:20752 Coq.Init.Logic <> :type_scope:x_'='_x not
R20754:20756 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R20753:20753 Logic <> n var
R20757:20757 Logic <> n var
prf 20992:21007 <> exists_example_2
R21023:21023 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21043:21050 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21070:21070 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21051:21057 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21059:21060 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21062:21064 Coq.Init.Logic <> :type_scope:x_'='_x not
R21061:21061 Logic <> n var
R21066:21068 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21069:21069 Logic <> o var
R21024:21030 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21032:21033 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21035:21037 Coq.Init.Logic <> :type_scope:x_'='_x not
R21034:21034 Logic <> n var
R21039:21041 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21042:21042 Logic <> m var
R21170:21172 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21170:21172 Coq.Init.Peano <> :nat_scope:x_'+'_x not
prf 21437:21451 <> dist_not_exists
R21477:21480 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21476:21476 Logic <> X var
R21490:21490 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21504:21508 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21509:21511 Coq.Init.Logic <> :type_scope:'~'_x not
R21527:21527 Coq.Init.Logic <> :type_scope:'~'_x not
R21512:21518 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21520:21521 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21522:21523 Coq.Init.Logic <> :type_scope:'~'_x not
R21524:21524 Logic <> P var
R21526:21526 Logic <> x var
R21501:21501 Logic <> P var
R21503:21503 Logic <> x var
R21605:21607 Coq.Init.Logic <> not def
prf 21785:21798 <> dist_exists_or
R21826:21829 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21825:21825 Logic <> X var
R21839:21839 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21860:21865 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21840:21846 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21848:21849 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21853:21856 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21850:21850 Logic <> P var
R21852:21852 Logic <> x var
R21857:21857 Logic <> Q var
R21859:21859 Logic <> x var
R21866:21866 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21880:21885 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21899:21899 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21867:21873 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21875:21876 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21877:21877 Logic <> P var
R21879:21879 Logic <> x var
R21886:21892 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21894:21895 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21896:21896 Logic <> Q var
R21898:21898 Logic <> x var
def 23049:23050 <> In
R23068:23068 Logic <> A var
R23076:23079 Poly <> list ind
R23081:23081 Logic <> A var
R23102:23102 Logic <> l var
R23113:23114 Poly <> ::'['_']' not
R23119:23123 Coq.Init.Logic <> False ind
R23131:23134 Poly <> ::x_'::'_x not
R23147:23150 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R23143:23145 Coq.Init.Logic <> :type_scope:x_'='_x not
R23146:23146 Logic <> x var
R23151:23152 Logic <> In def
R23154:23154 Logic <> x var
def 23288:23299 <> In_example_1
R23303:23304 Logic <> In def
R23308:23308 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23310:23311 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23313:23314 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23316:23317 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23319:23320 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23322:23322 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23419:23430 <> In_example_2
R23457:23462 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23463:23469 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23472:23473 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23475:23477 Coq.Init.Logic <> :type_scope:x_'='_x not
R23474:23474 Logic <> n var
R23479:23481 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23482:23483 Logic <> n' var
R23446:23447 Logic <> In def
R23451:23451 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23453:23454 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23456:23456 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23449:23449 Logic <> n var
prf 23945:23950 <> In_map
R23982:23985 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23986:23986 Logic <> B var
R23981:23981 Logic <> A var
R23994:23997 Poly <> list ind
R23999:23999 Logic <> A var
R24007:24007 Logic <> A var
R24021:24028 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24029:24030 Logic <> In def
R24039:24041 Poly <> map def
R24045:24045 Logic <> l var
R24043:24043 Logic <> f var
R24033:24033 Logic <> f var
R24035:24035 Logic <> x var
R24015:24016 Logic <> In def
R24020:24020 Logic <> l var
R24018:24018 Logic <> x var
prf 24788:24797 <> In_map_iff
R24829:24832 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24833:24833 Logic <> B var
R24828:24828 Logic <> A var
R24841:24844 Poly <> list ind
R24846:24846 Logic <> A var
R24854:24854 Logic <> B var
R24876:24884 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24862:24863 Logic <> In def
R24868:24870 Poly <> map def
R24874:24874 Logic <> l var
R24872:24872 Logic <> f var
R24865:24865 Logic <> y var
R24885:24891 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24893:24894 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24902:24905 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24898:24900 Coq.Init.Logic <> :type_scope:x_'='_x not
R24895:24895 Logic <> f var
R24897:24897 Logic <> x var
R24901:24901 Logic <> y var
R24906:24907 Logic <> In def
R24911:24911 Logic <> l var
R24909:24909 Logic <> x var
R25539:25540 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25542:25543 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25545:25546 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25557:25565 Logic <> and_intro thm
R25557:25565 Logic <> and_intro thm
prf 25673:25682 <> In_app_iff
R25703:25703 Logic <> A var
R25721:25725 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R25709:25710 Logic <> In def
R25716:25717 Poly <> ::x_'++'_x not
R25715:25715 Logic <> l var
R25718:25719 Logic <> l' var
R25712:25712 Logic <> a var
R25732:25735 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25726:25727 Logic <> In def
R25731:25731 Logic <> l var
R25729:25729 Logic <> a var
R25736:25737 Logic <> In def
R25741:25742 Logic <> l' var
R25739:25739 Logic <> a var
def 26884:26886 <> All
R26905:26908 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26904:26904 Logic <> T var
R26920:26923 Poly <> list ind
R26925:26925 Logic <> T var
R26949:26949 Logic <> l var
R26965:26966 Poly <> ::'['_']' not
R26971:26974 Coq.Init.Logic <> True ind
R26985:26988 Poly <> ::x_'::'_x not
R26998:27001 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26995:26995 Logic <> P var
R27002:27004 Logic <> All def
R27006:27006 Logic <> P var
prf 27027:27032 <> All_In
R27053:27056 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27052:27052 Logic <> T var
R27068:27071 Poly <> list ind
R27073:27073 Logic <> T var
R27081:27081 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27105:27114 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27098:27101 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27102:27102 Logic <> P var
R27104:27104 Logic <> x var
R27092:27093 Logic <> In def
R27097:27097 Logic <> l var
R27095:27095 Logic <> x var
R27115:27117 Logic <> All def
R27121:27121 Logic <> l var
R27119:27119 Logic <> P var
R27219:27219 Coq.Init.Logic <> I constr
R27219:27219 Coq.Init.Logic <> I constr
def 28037:28052 <> combine_odd_even
R28071:28074 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28068:28070 Coq.Init.Datatypes <> nat ind
R28086:28089 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28083:28085 Coq.Init.Datatypes <> nat ind
R28109:28111 Coq.Init.Datatypes <> nat ind
R28121:28124 Basics <> oddb def
R28126:28126 Logic <> n var
R28146:28150 Logic <> Peven var
R28152:28152 Logic <> n var
R28134:28137 Logic <> Podd var
R28139:28139 Logic <> n var
prf 28224:28245 <> combine_odd_even_intro
R28275:28278 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28272:28274 Coq.Init.Datatypes <> nat ind
R28290:28292 Coq.Init.Datatypes <> nat ind
R28300:28300 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28324:28332 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28333:28333 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28359:28367 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28368:28383 Logic <> combine_odd_even def
R28396:28396 Logic <> n var
R28390:28394 Logic <> Peven var
R28385:28388 Logic <> Podd var
R28348:28351 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28352:28356 Logic <> Peven var
R28358:28358 Logic <> n var
R28340:28342 Coq.Init.Logic <> :type_scope:x_'='_x not
R28334:28337 Basics <> oddb def
R28339:28339 Logic <> n var
R28343:28347 Basics <> false constr
R28314:28317 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28318:28321 Logic <> Podd var
R28323:28323 Logic <> n var
R28307:28309 Coq.Init.Logic <> :type_scope:x_'='_x not
R28301:28304 Basics <> oddb def
R28306:28306 Logic <> n var
R28310:28313 Basics <> true constr
R28449:28464 Logic <> combine_odd_even def
R28479:28482 Basics <> oddb def
R28479:28482 Basics <> oddb def
prf 28573:28597 <> combine_odd_even_elim_odd
R28627:28630 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28624:28626 Coq.Init.Datatypes <> nat ind
R28642:28644 Coq.Init.Datatypes <> nat ind
R28681:28688 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28702:28709 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28710:28713 Logic <> Podd var
R28715:28715 Logic <> n var
R28695:28697 Coq.Init.Logic <> :type_scope:x_'='_x not
R28689:28692 Basics <> oddb def
R28694:28694 Logic <> n var
R28698:28701 Basics <> true constr
R28652:28667 Logic <> combine_odd_even def
R28680:28680 Logic <> n var
R28674:28678 Logic <> Peven var
R28669:28672 Logic <> Podd var
R28764:28779 Logic <> combine_odd_even def
prf 28836:28861 <> combine_odd_even_elim_even
R28891:28894 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28888:28890 Coq.Init.Datatypes <> nat ind
R28906:28908 Coq.Init.Datatypes <> nat ind
R28945:28952 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28967:28974 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28975:28979 Logic <> Peven var
R28981:28981 Logic <> n var
R28959:28961 Coq.Init.Logic <> :type_scope:x_'='_x not
R28953:28956 Basics <> oddb def
R28958:28958 Logic <> n var
R28962:28966 Basics <> false constr
R28916:28931 Logic <> combine_odd_even def
R28944:28944 Logic <> n var
R28938:28942 Logic <> Peven var
R28933:28936 Logic <> Podd var
R29030:29045 Logic <> combine_odd_even def
R29824:29832 Induction <> plus_comm thm
prf 31152:31161 <> plus_comm3
R31192:31194 Coq.Init.Logic <> :type_scope:x_'='_x not
R31182:31185 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31191:31191 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31181:31181 Logic <> x var
R31187:31189 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31186:31186 Logic <> y var
R31190:31190 Logic <> z var
R31195:31195 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31201:31204 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31197:31199 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31196:31196 Logic <> z var
R31200:31200 Logic <> y var
R31205:31205 Logic <> x var
R31478:31486 Induction <> plus_comm thm
R31478:31486 Induction <> plus_comm thm
R31478:31486 Induction <> plus_comm thm
R31499:31507 Induction <> plus_comm thm
R31499:31507 Induction <> plus_comm thm
R31499:31507 Induction <> plus_comm thm
prf 31779:31794 <> plus_comm3_take2
R31825:31827 Coq.Init.Logic <> :type_scope:x_'='_x not
R31815:31818 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31824:31824 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31814:31814 Logic <> x var
R31820:31822 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31819:31819 Logic <> y var
R31823:31823 Logic <> z var
R31828:31828 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31834:31837 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31830:31832 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31829:31829 Logic <> z var
R31833:31833 Logic <> y var
R31838:31838 Logic <> x var
R31874:31882 Induction <> plus_comm thm
R31874:31882 Induction <> plus_comm thm
R31874:31882 Induction <> plus_comm thm
R31904:31906 Coq.Init.Logic <> :type_scope:x_'='_x not
R31900:31902 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31908:31910 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31904:31906 Coq.Init.Logic <> :type_scope:x_'='_x not
R31900:31902 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31908:31910 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31927:31935 Induction <> plus_comm thm
R31927:31935 Induction <> plus_comm thm
R31927:31935 Induction <> plus_comm thm
prf 32194:32209 <> plus_comm3_take3
R32240:32242 Coq.Init.Logic <> :type_scope:x_'='_x not
R32230:32233 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32239:32239 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32229:32229 Logic <> x var
R32235:32237 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32234:32234 Logic <> y var
R32238:32238 Logic <> z var
R32243:32243 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32249:32252 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32245:32247 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R32244:32244 Logic <> z var
R32248:32248 Logic <> y var
R32253:32253 Logic <> x var
R32289:32297 Induction <> plus_comm thm
R32289:32297 Induction <> plus_comm thm
R32289:32297 Induction <> plus_comm thm
R32311:32319 Induction <> plus_comm thm
R32311:32319 Induction <> plus_comm thm
R32311:32319 Induction <> plus_comm thm
def 32800:32819 <> lemma_application_ex
R32837:32839 Coq.Init.Datatypes <> nat ind
R32848:32851 Poly <> list ind
R32853:32855 Coq.Init.Datatypes <> nat ind
R32893:32900 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32902:32904 Coq.Init.Logic <> :type_scope:x_'='_x not
R32901:32901 Logic <> n var
R32863:32864 Logic <> In def
R32869:32871 Poly <> map def
R32890:32891 Logic <> ns var
R32884:32886 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R32883:32883 Logic <> m var
R32866:32866 Logic <> n var
R32944:32948 Logic <> proj1 thm
R32955:32964 Logic <> In_map_iff thm
R32944:32948 Logic <> proj1 thm
R32955:32964 Logic <> In_map_iff thm
R33016:33023 Induction <> mult_0_r thm
R33016:33023 Induction <> mult_0_r thm
R33016:33023 Induction <> mult_0_r thm
def 34950:34970 <> function_equality_ex1
R34980:34982 Coq.Init.Logic <> :type_scope:x_'='_x not
R34974:34977 Coq.Init.Peano <> plus syndef
R34983:34986 Coq.Init.Peano <> plus syndef
R34989:34992 Coq.Init.Peano <> pred syndef
def 35722:35742 <> function_equality_ex2
R35748:35748 Coq.Init.Logic <> :type_scope:x_'='_x not
R35766:35770 Coq.Init.Logic <> :type_scope:x_'='_x not
R35788:35788 Coq.Init.Logic <> :type_scope:x_'='_x not
R35758:35761 Coq.Init.Peano <> plus syndef
R35763:35763 Logic <> x var
R35780:35783 Coq.Init.Peano <> plus syndef
R35787:35787 Logic <> x var
ax 35932:35956 <> functional_extensionality
R36023:36026 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36027:36027 Logic <> Y var
R36022:36022 Logic <> X var
R36033:36033 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36057:36061 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36063:36065 Coq.Init.Logic <> :type_scope:x_'='_x not
R36062:36062 Logic <> f var
R36066:36066 Logic <> g var
R36044:36044 Logic <> X var
R36051:36053 Coq.Init.Logic <> :type_scope:x_'='_x not
R36048:36048 Logic <> f var
R36050:36050 Logic <> x var
R36054:36054 Logic <> g var
R36056:36056 Logic <> x var
def 36357:36377 <> function_equality_ex2
R36383:36383 Coq.Init.Logic <> :type_scope:x_'='_x not
R36401:36405 Coq.Init.Logic <> :type_scope:x_'='_x not
R36423:36423 Coq.Init.Logic <> :type_scope:x_'='_x not
R36393:36396 Coq.Init.Peano <> plus syndef
R36398:36398 Logic <> x var
R36415:36418 Coq.Init.Peano <> plus syndef
R36422:36422 Logic <> x var
R36441:36465 Logic <> functional_extensionality prfax
R36441:36465 Logic <> functional_extensionality prfax
R36486:36494 Induction <> plus_comm thm
R36486:36494 Induction <> plus_comm thm
R37151:37171 Logic <> function_equality_ex2 ex
def 37715:37724 <> rev_append
R37739:37742 Poly <> list ind
R37744:37744 Logic <> X var
R37749:37752 Poly <> list ind
R37754:37754 Logic <> X var
R37767:37768 Logic <> l1 var
R37779:37780 Poly <> ::'['_']' not
R37785:37786 Logic <> l2 var
R37793:37796 Poly <> ::x_'::'_x not
R37804:37813 Logic <> rev_append def
R37821:37822 Poly <> ::x_'::'_x not
R37823:37824 Logic <> l2 var
R37844:37853 Logic <> rev_append def
R37865:37866 Poly <> ::'['_']' not
R37855:37855 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37857:37857 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37859:37859 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37861:37861 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37863:37863 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 37881:37886 <> tr_rev
R37897:37900 Poly <> list ind
R37902:37902 Logic <> X var
R37907:37910 Poly <> list ind
R37912:37912 Logic <> X var
R37919:37928 Logic <> rev_append def
R37932:37933 Poly <> ::'['_']' not
R37930:37930 Logic <> l var
prf 37944:37956 <> rev_distr_lrz
R37975:37978 Poly <> list ind
R37980:37980 Logic <> X var
R38000:38003 Coq.Init.Logic <> :type_scope:x_'='_x not
R37984:37993 Logic <> rev_append def
R37998:37999 Logic <> l2 var
R37995:37996 Logic <> l1 var
R38010:38013 Poly <> ::x_'++'_x not
R38004:38006 Poly <> rev def
R38008:38009 Logic <> l1 var
R38014:38015 Logic <> l2 var
R38139:38140 Poly <> ::x_'::'_x not
R38139:38140 Poly <> ::x_'::'_x not
R38139:38140 Poly <> ::x_'::'_x not
R38159:38162 Poly <> ::x_'++'_x not
R38178:38186 Poly <> app_assoc thm
R38178:38186 Poly <> app_assoc thm
R38178:38186 Poly <> app_assoc thm
prf 38566:38579 <> tr_rev_correct
R38602:38604 Coq.Init.Logic <> :type_scope:x_'='_x not
R38594:38599 Logic <> tr_rev def
R38601:38601 Logic <> X var
R38606:38608 Poly <> rev def
R38610:38610 Logic <> X var
R38640:38664 Logic <> functional_extensionality prfax
R38640:38664 Logic <> functional_extensionality prfax
R38746:38751 Logic <> tr_rev def
R38769:38781 Logic <> rev_distr_lrz thm
R38769:38781 Logic <> rev_distr_lrz thm
R38769:38781 Logic <> rev_distr_lrz thm
prf 39640:39651 <> evenb_double
R39681:39683 Coq.Init.Logic <> :type_scope:x_'='_x not
R39665:39669 Basics <> evenb def
R39672:39677 Induction <> double def
R39679:39679 Logic <> k var
R39684:39687 Basics <> true constr
prf 39841:39857 <> evenb_double_conv
R39873:39879 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39881:39882 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39884:39886 Coq.Init.Logic <> :type_scope:x_'='_x not
R39883:39883 Logic <> n var
R39890:39894 Basics <> evenb def
R39896:39896 Logic <> n var
R39933:39933 Coq.Init.Datatypes <> S constr
R39936:39941 Induction <> double def
R39943:39943 Logic <> k var
R39903:39908 Induction <> double def
R39910:39910 Logic <> k var
R40043:40047 Basics <> evenb def
R40043:40047 Basics <> evenb def
R40111:40115 Basics <> evenb def
R40127:40133 Induction <> evenb_S thm
R40127:40133 Induction <> evenb_S thm
R40127:40133 Induction <> evenb_S thm
R40218:40224 Induction <> evenb_S thm
R40218:40224 Induction <> evenb_S thm
R40218:40224 Induction <> evenb_S thm
R40289:40289 Coq.Init.Datatypes <> S constr
R40289:40289 Coq.Init.Datatypes <> S constr
prf 40343:40356 <> even_bool_prop
R40386:40390 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R40379:40381 Coq.Init.Logic <> :type_scope:x_'='_x not
R40372:40376 Basics <> evenb def
R40378:40378 Logic <> n var
R40382:40385 Basics <> true constr
R40391:40397 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40399:40400 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40402:40404 Coq.Init.Logic <> :type_scope:x_'='_x not
R40401:40401 Logic <> n var
R40405:40410 Induction <> double def
R40412:40412 Logic <> k var
R40465:40481 Logic <> evenb_double_conv thm
R40465:40481 Logic <> evenb_double_conv thm
R40584:40595 Logic <> evenb_double thm
R40584:40595 Logic <> evenb_double thm
prf 40955:40970 <> beq_nat_true_iff
R40989:40991 Coq.Init.Datatypes <> nat ind
R41016:41020 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R41009:41011 Coq.Init.Logic <> :type_scope:x_'='_x not
R40996:41002 Basics <> beq_nat def
R41007:41008 Logic <> n2 var
R41004:41005 Logic <> n1 var
R41012:41015 Basics <> true constr
R41023:41025 Coq.Init.Logic <> :type_scope:x_'='_x not
R41021:41022 Logic <> n1 var
R41026:41027 Logic <> n2 var
R41070:41081 Tactics <> beq_nat_true thm
R41070:41081 Tactics <> beq_nat_true thm
R41120:41131 Induction <> beq_nat_refl thm
R41120:41131 Induction <> beq_nat_refl thm
R41120:41131 Induction <> beq_nat_refl thm
def 42366:42378 <> is_even_prime
R42391:42393 Coq.Init.Logic <> :type_scope:x_'='_x not
R42390:42390 Logic <> n var
R42413:42417 Basics <> false constr
R42401:42404 Basics <> true constr
def 43949:43957 <> even_1000
R43961:43967 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43969:43970 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43975:43977 Coq.Init.Logic <> :type_scope:x_'='_x not
R43978:43983 Induction <> double def
R43985:43985 Logic <> k var
def 44219:44228 <> even_1000'
R44242:44244 Coq.Init.Logic <> :type_scope:x_'='_x not
R44232:44236 Basics <> evenb def
R44245:44248 Basics <> true constr
def 44471:44481 <> even_1000''
R44485:44491 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44493:44494 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44499:44501 Coq.Init.Logic <> :type_scope:x_'='_x not
R44502:44507 Induction <> double def
R44509:44509 Logic <> k var
R44525:44538 Logic <> even_bool_prop thm
R44525:44538 Logic <> even_bool_prop thm
prf 45254:45266 <> andb_true_iff
R45283:45286 Basics <> bool ind
R45306:45310 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45299:45301 Coq.Init.Logic <> :type_scope:x_'='_x not
R45293:45296 Basics <> ::x_'&&'_x not
R45291:45292 Logic <> b1 var
R45297:45298 Logic <> b2 var
R45302:45305 Basics <> true constr
R45320:45323 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R45313:45315 Coq.Init.Logic <> :type_scope:x_'='_x not
R45311:45312 Logic <> b1 var
R45316:45319 Basics <> true constr
R45326:45328 Coq.Init.Logic <> :type_scope:x_'='_x not
R45324:45325 Logic <> b2 var
R45329:45332 Basics <> true constr
prf 45633:45644 <> orb_true_iff
R45679:45683 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45672:45674 Coq.Init.Logic <> :type_scope:x_'='_x not
R45666:45669 Basics <> ::x_'||'_x not
R45664:45665 Logic <> b1 var
R45670:45671 Logic <> b2 var
R45675:45678 Basics <> true constr
R45693:45696 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R45686:45688 Coq.Init.Logic <> :type_scope:x_'='_x not
R45684:45685 Logic <> b1 var
R45689:45692 Basics <> true constr
R45699:45701 Coq.Init.Logic <> :type_scope:x_'='_x not
R45697:45698 Logic <> b2 var
R45702:45705 Basics <> true constr
prf 46243:46259 <> beq_nat_false_iff
R46276:46278 Coq.Init.Datatypes <> nat ind
R46302:46306 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46294:46296 Coq.Init.Logic <> :type_scope:x_'='_x not
R46283:46289 Basics <> beq_nat def
R46293:46293 Logic <> y var
R46291:46291 Logic <> x var
R46297:46301 Basics <> false constr
R46308:46311 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R46307:46307 Logic <> x var
R46312:46312 Logic <> y var
R46359:46365 Basics <> beq_nat def
R46419:46421 Coq.Init.Logic <> :type_scope:x_'='_x not
R46408:46414 Basics <> beq_nat def
R46422:46425 Basics <> true constr
R46419:46421 Coq.Init.Logic <> :type_scope:x_'='_x not
R46408:46414 Basics <> beq_nat def
R46422:46425 Basics <> true constr
R46438:46444 Basics <> beq_nat def
R46456:46467 Induction <> beq_nat_refl thm
R46456:46467 Induction <> beq_nat_refl thm
R46456:46467 Induction <> beq_nat_refl thm
R46501:46504 Basics <> negb def
R46514:46521 Induction <> negb_n_m thm
R46514:46521 Induction <> negb_n_m thm
R46665:46671 Basics <> beq_nat def
R46696:46698 Coq.Init.Logic <> not def
R46717:46717 Coq.Init.Logic <> :type_scope:x_'='_x not
R46717:46717 Coq.Init.Logic <> :type_scope:x_'='_x not
R46787:46793 Basics <> beq_nat def
R46803:46810 Induction <> S_nbeq_0 thm
R46803:46810 Induction <> S_nbeq_0 thm
R46857:46864 Induction <> S_nbeq_0 thm
R46857:46864 Induction <> S_nbeq_0 thm
R46909:46911 Coq.Init.Logic <> not def
R46929:46931 Coq.Init.Logic <> not def
R46969:46971 Coq.Init.Logic <> :type_scope:x_'='_x not
R46966:46966 Coq.Init.Datatypes <> S constr
R46972:46972 Coq.Init.Datatypes <> S constr
R46969:46971 Coq.Init.Logic <> :type_scope:x_'='_x not
R46966:46966 Coq.Init.Datatypes <> S constr
R46972:46972 Coq.Init.Datatypes <> S constr
def 47462:47469 <> beq_list
R47490:47493 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47495:47498 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47499:47502 Basics <> bool ind
R47494:47494 Logic <> A var
R47489:47489 Logic <> A var
R47532:47535 Poly <> list ind
R47537:47537 Logic <> A var
R47542:47545 Basics <> bool ind
R47558:47559 Logic <> l1 var
R47570:47571 Poly <> ::'['_']' not
R47582:47583 Logic <> l2 var
R47604:47605 Poly <> ::'['_']' not
R47610:47613 Basics <> true constr
R47634:47638 Basics <> false constr
R47662:47665 Poly <> ::x_'::'_x not
R47679:47680 Logic <> l2 var
R47701:47702 Poly <> ::'['_']' not
R47706:47710 Basics <> false constr
R47728:47731 Poly <> ::x_'::'_x not
R47743:47745 Logic <> beq var
R47785:47789 Basics <> false constr
R47759:47766 Logic <> beq_list def
R47768:47770 Logic <> beq var
prf 47819:47835 <> beq_list_true_iff
R47858:47861 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47863:47866 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47867:47870 Basics <> bool ind
R47862:47862 Logic <> A var
R47857:47857 Logic <> A var
R47878:47878 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47921:47929 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47969:47973 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R47962:47964 Coq.Init.Logic <> :type_scope:x_'='_x not
R47944:47951 Logic <> beq_list def
R47960:47961 Logic <> l2 var
R47957:47958 Logic <> l1 var
R47953:47955 Logic <> beq var
R47965:47968 Basics <> true constr
R47976:47978 Coq.Init.Logic <> :type_scope:x_'='_x not
R47974:47975 Logic <> l1 var
R47979:47980 Logic <> l2 var
R47909:47913 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R47902:47904 Coq.Init.Logic <> :type_scope:x_'='_x not
R47893:47895 Logic <> beq var
R47900:47901 Logic <> a2 var
R47897:47898 Logic <> a1 var
R47905:47908 Basics <> true constr
R47916:47918 Coq.Init.Logic <> :type_scope:x_'='_x not
R47914:47915 Logic <> a1 var
R47919:47920 Logic <> a2 var
R48808:48810 Coq.Init.Logic <> :type_scope:x_'='_x not
R48811:48814 Basics <> true constr
R48808:48810 Coq.Init.Logic <> :type_scope:x_'='_x not
R48811:48814 Basics <> true constr
def 49102:49108 <> forallb
R49130:49133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49134:49137 Basics <> bool ind
R49129:49129 Logic <> X var
R49145:49148 Poly <> list ind
R49150:49150 Logic <> X var
R49155:49158 Basics <> bool ind
R49171:49171 Logic <> l var
R49182:49183 Poly <> ::'['_']' not
R49188:49191 Basics <> true constr
R49198:49201 Poly <> ::x_'::'_x not
R49208:49211 Basics <> andb def
R49223:49229 Logic <> forallb def
R49231:49234 Logic <> test var
R49214:49217 Logic <> test var
R49254:49256 Logic <> All def
prf 49375:49390 <> forallb_true_iff
R49413:49416 Poly <> list ind
R49418:49418 Logic <> X var
R49446:49450 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R49439:49441 Coq.Init.Logic <> :type_scope:x_'='_x not
R49425:49431 Logic <> forallb def
R49438:49438 Logic <> l var
R49433:49436 Logic <> test var
R49442:49445 Basics <> true constr
R49451:49453 Logic <> All def
R49480:49480 Logic <> l var
R49471:49473 Coq.Init.Logic <> :type_scope:x_'='_x not
R49465:49468 Logic <> test var
R49470:49470 Logic <> x var
R49474:49477 Basics <> true constr
R49616:49619 Basics <> ::x_'&&'_x not
R49632:49647 Basics <> andb_commutative thm
R49632:49647 Basics <> andb_commutative thm
R49632:49647 Basics <> andb_commutative thm
R49677:49691 Basics <> andb_true_elim2 thm
R49677:49691 Basics <> andb_true_elim2 thm
R49736:49751 Basics <> andb_commutative thm
R49736:49751 Basics <> andb_commutative thm
R49736:49751 Basics <> andb_commutative thm
R49765:49779 Basics <> andb_true_elim2 thm
R49765:49779 Basics <> andb_true_elim2 thm
def 50559:50573 <> excluded_middle
R50598:50601 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50597:50597 Logic <> P var
R50602:50603 Coq.Init.Logic <> :type_scope:'~'_x not
R50604:50604 Logic <> P var
prf 51364:51389 <> restricted_excluded_middle
R51407:51407 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51422:51426 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51428:51431 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R51427:51427 Logic <> P var
R51432:51433 Coq.Init.Logic <> :type_scope:'~'_x not
R51434:51434 Logic <> P var
R51409:51413 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R51408:51408 Logic <> P var
R51415:51417 Coq.Init.Logic <> :type_scope:x_'='_x not
R51414:51414 Logic <> b var
R51418:51421 Basics <> true constr
prf 51680:51708 <> restricted_excluded_middle_eq
R51726:51728 Coq.Init.Datatypes <> nat ind
R51739:51742 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R51735:51737 Coq.Init.Logic <> :type_scope:x_'='_x not
R51734:51734 Logic <> n var
R51738:51738 Logic <> m var
R51744:51747 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R51743:51743 Logic <> n var
R51748:51748 Logic <> m var
R51781:51806 Logic <> restricted_excluded_middle thm
R51817:51823 Basics <> beq_nat def
R51810:51812 Coq.Init.Logic <> :type_scope:x_'='_x not
R51781:51806 Logic <> restricted_excluded_middle thm
R51817:51823 Basics <> beq_nat def
R51810:51812 Coq.Init.Logic <> :type_scope:x_'='_x not
R51852:51867 Logic <> beq_nat_true_iff thm
R51852:51867 Logic <> beq_nat_true_iff thm
ax 56069:56086 <> exluded_middle_law
R56107:56110 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R56106:56106 Logic <> P var
R56111:56111 Coq.Init.Logic <> :type_scope:'~'_x not
R56112:56112 Logic <> P var
prf 56123:56149 <> excluded_middle_irrefutable
R56171:56172 Coq.Init.Logic <> :type_scope:'~'_x not
R56173:56175 Coq.Init.Logic <> :type_scope:'~'_x not
R56184:56184 Coq.Init.Logic <> :type_scope:'~'_x not
R56177:56180 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R56176:56176 Logic <> P var
R56181:56182 Coq.Init.Logic <> :type_scope:'~'_x not
R56183:56183 Logic <> P var
R56216:56216 Coq.Init.Logic <> :type_scope:'~'_x not
R56217:56217 Coq.Init.Logic <> :type_scope:'~'_x not
R56228:56237 Logic <> double_neg thm
R56228:56237 Logic <> double_neg thm
R56246:56263 Logic <> exluded_middle_law prfax
R56246:56263 Logic <> exluded_middle_law prfax
prf 56718:56732 <> not_exists_dist
R56753:56758 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56781:56784 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56780:56780 Logic <> X var
R56815:56819 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56833:56833 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56830:56830 Logic <> P var
R56832:56832 Logic <> x var
R56796:56798 Coq.Init.Logic <> :type_scope:'~'_x not
R56814:56814 Coq.Init.Logic <> :type_scope:'~'_x not
R56799:56805 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56807:56808 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56809:56810 Coq.Init.Logic <> :type_scope:'~'_x not
R56811:56811 Logic <> P var
R56813:56813 Logic <> x var
R56738:56752 Logic <> excluded_middle def
def 57530:57535 <> peirce
R57560:57560 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57570:57572 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57573:57573 Logic <> P var
R57561:57561 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57566:57568 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57569:57569 Logic <> P var
R57563:57564 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57565:57565 Logic <> Q var
R57562:57562 Logic <> P var
def 57588:57614 <> double_negation_elimination
R57639:57642 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57643:57643 Logic <> P var
R57636:57636 Coq.Init.Logic <> :type_scope:'~'_x not
R57637:57637 Coq.Init.Logic <> :type_scope:'~'_x not
R57638:57638 Logic <> P var
def 57658:57678 <> de_morgan_not_and_not
R57713:57716 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57718:57719 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57717:57717 Logic <> P var
R57720:57720 Logic <> Q var
R57702:57703 Coq.Init.Logic <> :type_scope:'~'_x not
R57712:57712 Coq.Init.Logic <> :type_scope:'~'_x not
R57706:57709 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57704:57704 Coq.Init.Logic <> :type_scope:'~'_x not
R57705:57705 Logic <> P var
R57710:57710 Coq.Init.Logic <> :type_scope:'~'_x not
R57711:57711 Logic <> Q var
def 57735:57747 <> implies_to_or
R57771:57771 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57776:57781 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57787:57787 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57784:57785 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57782:57782 Coq.Init.Logic <> :type_scope:'~'_x not
R57783:57783 Logic <> P var
R57786:57786 Logic <> Q var
R57773:57774 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57775:57775 Logic <> Q var
R57772:57772 Logic <> P var
prf 57799:57801 <> per
R57804:57809 Logic <> peirce def
R57847:57864 Logic <> exluded_middle_law prfax
R57847:57864 Logic <> exluded_middle_law prfax
R57928:57930 Coq.Init.Logic <> not def
prf 57983:57987 <> d_n_e
R57990:58016 Logic <> double_negation_elimination def
R58053:58070 Logic <> exluded_middle_law prfax
R58053:58070 Logic <> exluded_middle_law prfax
R58114:58116 Coq.Init.Logic <> not def
R58131:58133 Coq.Init.Logic <> not def
prf 58185:58193 <> d_m_n_a_n
R58196:58216 Logic <> de_morgan_not_and_not def
R58254:58271 Logic <> exluded_middle_law prfax
R58254:58271 Logic <> exluded_middle_law prfax
R58311:58328 Logic <> exluded_middle_law prfax
R58311:58328 Logic <> exluded_middle_law prfax
prf 58420:58424 <> i_t_o
R58426:58438 Logic <> implies_to_or def
R58476:58493 Logic <> exluded_middle_law prfax
R58476:58493 Logic <> exluded_middle_law prfax
