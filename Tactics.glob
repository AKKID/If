DIGEST 780873f3d1e0322aff30f8107e28a121
FTactics
R658:661 Poly <> <> lib
prf 938:943 <> silly1
R965:967 Coq.Init.Datatypes <> nat ind
R981:990 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1004:1012 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1018:1020 Coq.Init.Logic <> :type_scope:x_'='_x not
R1013:1013 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1015:1015 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1017:1017 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1014:1014 Tactics <> n var
R1016:1016 Tactics <> o var
R1021:1021 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1023:1023 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1025:1025 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1022:1022 Tactics <> m var
R1024:1024 Tactics <> p var
R996:998 Coq.Init.Logic <> :type_scope:x_'='_x not
R991:991 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R993:993 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R995:995 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R992:992 Tactics <> n var
R994:994 Tactics <> o var
R999:999 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1001:1001 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1003:1003 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1000:1000 Tactics <> n var
R1002:1002 Tactics <> p var
R977:979 Coq.Init.Logic <> :type_scope:x_'='_x not
R976:976 Tactics <> n var
R980:980 Tactics <> m var
prf 1549:1554 <> silly2
R1576:1578 Coq.Init.Datatypes <> nat ind
R1592:1601 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1602:1602 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1645:1654 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1660:1662 Coq.Init.Logic <> :type_scope:x_'='_x not
R1655:1655 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1657:1657 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1659:1659 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1656:1656 Tactics <> n var
R1658:1658 Tactics <> o var
R1663:1663 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1665:1665 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1667:1667 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1664:1664 Tactics <> m var
R1666:1666 Tactics <> p var
R1617:1619 Coq.Init.Datatypes <> nat ind
R1628:1631 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1637:1639 Coq.Init.Logic <> :type_scope:x_'='_x not
R1632:1632 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1634:1634 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1636:1636 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1633:1633 Tactics <> q var
R1635:1635 Tactics <> o var
R1640:1640 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1642:1642 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1644:1644 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1641:1641 Tactics <> r var
R1643:1643 Tactics <> p var
R1624:1626 Coq.Init.Logic <> :type_scope:x_'='_x not
R1623:1623 Tactics <> q var
R1627:1627 Tactics <> r var
R1588:1590 Coq.Init.Logic <> :type_scope:x_'='_x not
R1587:1587 Tactics <> n var
R1591:1591 Tactics <> m var
prf 2178:2184 <> silly2a
R2202:2204 Coq.Init.Datatypes <> nat ind
R2226:2235 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2236:2236 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2283:2292 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2296:2298 Coq.Init.Logic <> :type_scope:x_'='_x not
R2293:2293 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2295:2295 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2294:2294 Tactics <> n var
R2299:2299 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2301:2301 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2300:2300 Tactics <> m var
R2251:2253 Coq.Init.Datatypes <> nat ind
R2270:2273 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2277:2279 Coq.Init.Logic <> :type_scope:x_'='_x not
R2274:2274 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2276:2276 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2275:2275 Tactics <> q var
R2280:2280 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2282:2282 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2281:2281 Tactics <> r var
R2262:2264 Coq.Init.Logic <> :type_scope:x_'='_x not
R2257:2257 Poly <> ::'('_x_','_x_')' not
R2259:2259 Poly <> ::'('_x_','_x_')' not
R2261:2261 Poly <> ::'('_x_','_x_')' not
R2258:2258 Tactics <> q var
R2260:2260 Tactics <> q var
R2265:2265 Poly <> ::'('_x_','_x_')' not
R2267:2267 Poly <> ::'('_x_','_x_')' not
R2269:2269 Poly <> ::'('_x_','_x_')' not
R2266:2266 Tactics <> r var
R2268:2268 Tactics <> r var
R2218:2220 Coq.Init.Logic <> :type_scope:x_'='_x not
R2213:2213 Poly <> ::'('_x_','_x_')' not
R2215:2215 Poly <> ::'('_x_','_x_')' not
R2217:2217 Poly <> ::'('_x_','_x_')' not
R2214:2214 Tactics <> n var
R2216:2216 Tactics <> n var
R2221:2221 Poly <> ::'('_x_','_x_')' not
R2223:2223 Poly <> ::'('_x_','_x_')' not
R2225:2225 Poly <> ::'('_x_','_x_')' not
R2222:2222 Tactics <> m var
R2224:2224 Tactics <> m var
prf 2484:2491 <> silly_ex
R2500:2500 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2546:2555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2570:2578 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2585:2587 Coq.Init.Logic <> :type_scope:x_'='_x not
R2579:2582 Basics <> oddb def
R2588:2591 Basics <> true constr
R2563:2565 Coq.Init.Logic <> :type_scope:x_'='_x not
R2556:2560 Basics <> evenb def
R2566:2569 Basics <> true constr
R2525:2528 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2539:2541 Coq.Init.Logic <> :type_scope:x_'='_x not
R2529:2532 Basics <> oddb def
R2535:2535 Coq.Init.Datatypes <> S constr
R2537:2537 Tactics <> n var
R2542:2545 Basics <> true constr
R2518:2520 Coq.Init.Logic <> :type_scope:x_'='_x not
R2511:2515 Basics <> evenb def
R2517:2517 Tactics <> n var
R2521:2524 Basics <> true constr
prf 2876:2890 <> silly3_firsttry
R2906:2908 Coq.Init.Datatypes <> nat ind
R2935:2944 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2964:2966 Coq.Init.Logic <> :type_scope:x_'='_x not
R2945:2951 Basics <> beq_nat def
R2954:2954 Coq.Init.Datatypes <> S constr
R2957:2957 Coq.Init.Datatypes <> S constr
R2959:2959 Tactics <> n var
R2967:2970 Basics <> true constr
R2921:2923 Coq.Init.Logic <> :type_scope:x_'='_x not
R2917:2920 Basics <> true constr
R2924:2930 Basics <> beq_nat def
R2932:2932 Tactics <> n var
prf 3510:3522 <> rev_exercise1
R3541:3544 Poly <> list ind
R3546:3548 Coq.Init.Datatypes <> nat ind
R3567:3575 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3578:3580 Coq.Init.Logic <> :type_scope:x_'='_x not
R3576:3577 Tactics <> l' var
R3581:3583 Poly <> rev def
R3585:3585 Tactics <> l var
R3558:3560 Coq.Init.Logic <> :type_scope:x_'='_x not
R3557:3557 Tactics <> l var
R3561:3563 Poly <> rev def
R3565:3566 Tactics <> l' var
R3633:3635 Poly <> rev def
R3651:3664 Poly <> rev_involutive thm
R3651:3664 Poly <> rev_involutive thm
R3651:3664 Poly <> rev_involutive thm
def 4162:4177 <> trans_eq_example
R4203:4205 Coq.Init.Datatypes <> nat ind
R4227:4235 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4249:4257 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4263:4265 Coq.Init.Logic <> :type_scope:x_'='_x not
R4258:4258 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4260:4260 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4262:4262 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4259:4259 Tactics <> a var
R4261:4261 Tactics <> b var
R4266:4266 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4268:4268 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4270:4270 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4267:4267 Tactics <> e var
R4269:4269 Tactics <> f var
R4241:4243 Coq.Init.Logic <> :type_scope:x_'='_x not
R4236:4236 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4238:4238 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4240:4240 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4237:4237 Tactics <> c var
R4239:4239 Tactics <> d var
R4244:4244 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4246:4246 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4248:4248 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4245:4245 Tactics <> e var
R4247:4247 Tactics <> f var
R4219:4221 Coq.Init.Logic <> :type_scope:x_'='_x not
R4214:4214 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4216:4216 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4218:4218 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4215:4215 Tactics <> a var
R4217:4217 Tactics <> b var
R4222:4222 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4224:4224 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4226:4226 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4223:4223 Tactics <> c var
R4225:4225 Tactics <> d var
prf 4527:4534 <> trans_eq
R4563:4563 Tactics <> X var
R4574:4577 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4583:4586 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4588:4590 Coq.Init.Logic <> :type_scope:x_'='_x not
R4587:4587 Tactics <> n var
R4591:4591 Tactics <> o var
R4579:4581 Coq.Init.Logic <> :type_scope:x_'='_x not
R4578:4578 Tactics <> m var
R4582:4582 Tactics <> o var
R4570:4572 Coq.Init.Logic <> :type_scope:x_'='_x not
R4569:4569 Tactics <> n var
R4573:4573 Tactics <> m var
def 4846:4862 <> trans_eq_example'
R4888:4890 Coq.Init.Datatypes <> nat ind
R4912:4920 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4934:4942 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4948:4950 Coq.Init.Logic <> :type_scope:x_'='_x not
R4943:4943 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4945:4945 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4947:4947 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4944:4944 Tactics <> a var
R4946:4946 Tactics <> b var
R4951:4951 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4953:4953 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4955:4955 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4952:4952 Tactics <> e var
R4954:4954 Tactics <> f var
R4926:4928 Coq.Init.Logic <> :type_scope:x_'='_x not
R4921:4921 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4923:4923 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4925:4925 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4922:4922 Tactics <> c var
R4924:4924 Tactics <> d var
R4929:4929 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4931:4931 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4933:4933 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4930:4930 Tactics <> e var
R4932:4932 Tactics <> f var
R4904:4906 Coq.Init.Logic <> :type_scope:x_'='_x not
R4899:4899 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4901:4901 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4903:4903 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4900:4900 Tactics <> a var
R4902:4902 Tactics <> b var
R4907:4907 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4909:4909 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4911:4911 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4908:4908 Tactics <> c var
R4910:4910 Tactics <> d var
R5426:5426 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5428:5428 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5430:5430 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5408:5415 Tactics <> trans_eq thm
R5426:5426 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5428:5428 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5430:5430 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5408:5415 Tactics <> trans_eq thm
def 5762:5778 <> trans_eq_exercise
R5800:5802 Coq.Init.Datatypes <> nat ind
R5827:5835 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5847:5855 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5856:5856 Coq.Init.Logic <> :type_scope:x_'='_x not
R5862:5866 Coq.Init.Logic <> :type_scope:x_'='_x not
R5877:5877 Coq.Init.Logic <> :type_scope:x_'='_x not
R5858:5860 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5857:5857 Tactics <> n var
R5861:5861 Tactics <> p var
R5867:5874 Basics <> minustwo def
R5876:5876 Tactics <> o var
R5836:5836 Coq.Init.Logic <> :type_scope:x_'='_x not
R5842:5845 Coq.Init.Logic <> :type_scope:x_'='_x not
R5838:5840 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5837:5837 Tactics <> n var
R5841:5841 Tactics <> p var
R5846:5846 Tactics <> m var
R5812:5815 Coq.Init.Logic <> :type_scope:x_'='_x not
R5826:5826 Coq.Init.Logic <> :type_scope:x_'='_x not
R5811:5811 Tactics <> m var
R5816:5823 Basics <> minustwo def
R5825:5825 Tactics <> o var
prf 7440:7450 <> S_injective
R7468:7470 Coq.Init.Datatypes <> nat ind
R7485:7490 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7492:7494 Coq.Init.Logic <> :type_scope:x_'='_x not
R7491:7491 Tactics <> n var
R7495:7495 Tactics <> m var
R7479:7481 Coq.Init.Logic <> :type_scope:x_'='_x not
R7476:7476 Coq.Init.Datatypes <> S constr
R7478:7478 Tactics <> n var
R7482:7482 Coq.Init.Datatypes <> S constr
R7484:7484 Tactics <> m var
prf 7990:8002 <> inversion_ex1
R8022:8024 Coq.Init.Datatypes <> nat ind
R8045:8050 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8054:8056 Coq.Init.Logic <> :type_scope:x_'='_x not
R8051:8051 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8053:8053 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8052:8052 Tactics <> n var
R8057:8057 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8059:8059 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8058:8058 Tactics <> m var
R8036:8038 Coq.Init.Logic <> :type_scope:x_'='_x not
R8030:8030 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8032:8033 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8035:8035 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8031:8031 Tactics <> n var
R8034:8034 Tactics <> m var
R8039:8039 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8041:8042 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8044:8044 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8040:8040 Tactics <> o var
R8043:8043 Tactics <> o var
prf 8217:8229 <> inversion_ex2
R8247:8249 Coq.Init.Datatypes <> nat ind
R8264:8269 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8271:8273 Coq.Init.Logic <> :type_scope:x_'='_x not
R8270:8270 Tactics <> n var
R8274:8274 Tactics <> m var
R8258:8260 Coq.Init.Logic <> :type_scope:x_'='_x not
R8255:8255 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8257:8257 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8256:8256 Tactics <> n var
R8261:8261 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8263:8263 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8262:8262 Tactics <> m var
def 8396:8408 <> inversion_ex3
R8439:8439 Tactics <> X var
R8449:8452 Poly <> list ind
R8454:8454 Tactics <> X var
R8480:8485 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8501:8506 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8508:8510 Coq.Init.Logic <> :type_scope:x_'='_x not
R8507:8507 Tactics <> x var
R8511:8511 Tactics <> y var
R8492:8494 Coq.Init.Logic <> :type_scope:x_'='_x not
R8487:8490 Poly <> ::x_'::'_x not
R8486:8486 Tactics <> y var
R8491:8491 Tactics <> l var
R8496:8499 Poly <> ::x_'::'_x not
R8495:8495 Tactics <> x var
R8500:8500 Tactics <> j var
R8471:8473 Coq.Init.Logic <> :type_scope:x_'='_x not
R8461:8464 Poly <> ::x_'::'_x not
R8460:8460 Tactics <> x var
R8466:8469 Poly <> ::x_'::'_x not
R8465:8465 Tactics <> y var
R8470:8470 Tactics <> l var
R8475:8478 Poly <> ::x_'::'_x not
R8474:8474 Tactics <> z var
R8479:8479 Tactics <> j var
prf 8816:8826 <> beq_nat_0_l
R8861:8864 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8866:8868 Coq.Init.Logic <> :type_scope:x_'='_x not
R8865:8865 Tactics <> n var
R8854:8856 Coq.Init.Logic <> :type_scope:x_'='_x not
R8843:8849 Basics <> beq_nat def
R8853:8853 Tactics <> n var
R8857:8860 Basics <> true constr
prf 9776:9788 <> inversion_ex4
R9804:9806 Coq.Init.Datatypes <> nat ind
R9819:9824 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9830:9832 Coq.Init.Logic <> :type_scope:x_'='_x not
R9826:9828 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9815:9817 Coq.Init.Logic <> :type_scope:x_'='_x not
R9812:9812 Coq.Init.Datatypes <> S constr
R9814:9814 Tactics <> n var
R9818:9818 Coq.Init.Datatypes <> O constr
prf 9894:9906 <> inversion_ex5
R9924:9926 Coq.Init.Datatypes <> nat ind
R9944:9949 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9953:9955 Coq.Init.Logic <> :type_scope:x_'='_x not
R9950:9950 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9952:9952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9951:9951 Tactics <> n var
R9956:9956 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9958:9958 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9957:9957 Tactics <> m var
R9937:9939 Coq.Init.Logic <> :type_scope:x_'='_x not
R9932:9936 Basics <> false constr
R9940:9943 Basics <> true constr
def 10470:10482 <> inversion_ex6
R10539:10539 Tactics <> X var
R10549:10552 Poly <> list ind
R10554:10554 Tactics <> X var
R10576:10581 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10597:10602 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10604:10606 Coq.Init.Logic <> :type_scope:x_'='_x not
R10603:10603 Tactics <> x var
R10607:10607 Tactics <> z var
R10588:10590 Coq.Init.Logic <> :type_scope:x_'='_x not
R10583:10586 Poly <> ::x_'::'_x not
R10582:10582 Tactics <> y var
R10587:10587 Tactics <> l var
R10592:10595 Poly <> ::x_'::'_x not
R10591:10591 Tactics <> z var
R10596:10596 Tactics <> j var
R10571:10573 Coq.Init.Logic <> :type_scope:x_'='_x not
R10561:10564 Poly <> ::x_'::'_x not
R10560:10560 Tactics <> x var
R10566:10569 Poly <> ::x_'::'_x not
R10565:10565 Tactics <> y var
R10570:10570 Tactics <> l var
R10574:10575 Poly <> ::'['_']' not
prf 11785:11791 <> f_equal
R11820:11823 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11824:11824 Tactics <> B var
R11819:11819 Tactics <> A var
R11833:11833 Tactics <> A var
R11844:11847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11851:11853 Coq.Init.Logic <> :type_scope:x_'='_x not
R11848:11848 Tactics <> f var
R11850:11850 Tactics <> x var
R11854:11854 Tactics <> f var
R11856:11856 Tactics <> y var
R11840:11842 Coq.Init.Logic <> :type_scope:x_'='_x not
R11839:11839 Tactics <> x var
R11843:11843 Tactics <> y var
prf 12359:12363 <> S_inj
R12381:12383 Coq.Init.Datatypes <> nat ind
R12391:12394 Basics <> bool ind
R12426:12435 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12447:12449 Coq.Init.Logic <> :type_scope:x_'='_x not
R12436:12442 Basics <> beq_nat def
R12446:12446 Tactics <> m var
R12444:12444 Tactics <> n var
R12450:12450 Tactics <> b var
R12422:12424 Coq.Init.Logic <> :type_scope:x_'='_x not
R12403:12409 Basics <> beq_nat def
R12418:12418 Coq.Init.Datatypes <> S constr
R12420:12420 Tactics <> m var
R12412:12412 Coq.Init.Datatypes <> S constr
R12414:12414 Tactics <> n var
R12425:12425 Tactics <> b var
prf 13288:13294 <> silly3'
R13310:13312 Coq.Init.Datatypes <> nat ind
R13318:13318 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13367:13373 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13392:13398 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13403:13405 Coq.Init.Logic <> :type_scope:x_'='_x not
R13399:13402 Basics <> true constr
R13406:13412 Basics <> beq_nat def
R13415:13415 Coq.Init.Datatypes <> S constr
R13418:13418 Coq.Init.Datatypes <> S constr
R13420:13420 Tactics <> n var
R13378:13380 Coq.Init.Logic <> :type_scope:x_'='_x not
R13374:13377 Basics <> true constr
R13381:13387 Basics <> beq_nat def
R13389:13389 Tactics <> n var
R13337:13340 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13360:13362 Coq.Init.Logic <> :type_scope:x_'='_x not
R13341:13347 Basics <> beq_nat def
R13350:13350 Coq.Init.Datatypes <> S constr
R13353:13353 Coq.Init.Datatypes <> S constr
R13355:13355 Tactics <> n var
R13363:13366 Basics <> true constr
R13330:13332 Coq.Init.Logic <> :type_scope:x_'='_x not
R13319:13325 Basics <> beq_nat def
R13327:13327 Tactics <> n var
R13333:13336 Basics <> true constr
prf 14299:14316 <> plus_n_n_injective
R14350:14358 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14360:14362 Coq.Init.Logic <> :type_scope:x_'='_x not
R14359:14359 Tactics <> n var
R14363:14363 Tactics <> m var
R14342:14344 Coq.Init.Logic <> :type_scope:x_'='_x not
R14338:14340 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14337:14337 Tactics <> n var
R14341:14341 Tactics <> n var
R14346:14348 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14345:14345 Tactics <> m var
R14349:14349 Tactics <> m var
R14561:14561 Coq.Init.Datatypes <> S constr
R14570:14576 Tactics <> f_equal thm
R14570:14576 Tactics <> f_equal thm
R14636:14644 Induction <> plus_n_Sm thm
R14636:14644 Induction <> plus_n_Sm thm
R14636:14644 Induction <> plus_n_Sm thm
R14664:14672 Induction <> plus_n_Sm thm
R14664:14672 Induction <> plus_n_Sm thm
R14664:14672 Induction <> plus_n_Sm thm
prf 15626:15648 <> double_injective_FAILED
R15688:15696 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15698:15700 Coq.Init.Logic <> :type_scope:x_'='_x not
R15697:15697 Tactics <> n var
R15701:15701 Tactics <> m var
R15677:15679 Coq.Init.Logic <> :type_scope:x_'='_x not
R15669:15674 Induction <> double def
R15676:15676 Tactics <> n var
R15680:15685 Induction <> double def
R15687:15687 Tactics <> m var
R15981:15987 Tactics <> f_equal thm
R15981:15987 Tactics <> f_equal thm
prf 18223:18238 <> double_injective
R18278:18286 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18288:18290 Coq.Init.Logic <> :type_scope:x_'='_x not
R18287:18287 Tactics <> n var
R18291:18291 Tactics <> m var
R18267:18269 Coq.Init.Logic <> :type_scope:x_'='_x not
R18259:18264 Induction <> double def
R18266:18266 Tactics <> n var
R18270:18275 Induction <> double def
R18277:18277 Tactics <> m var
R19164:19170 Tactics <> f_equal thm
R19164:19170 Tactics <> f_equal thm
prf 20071:20082 <> beq_nat_true
R20120:20123 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20125:20127 Coq.Init.Logic <> :type_scope:x_'='_x not
R20124:20124 Tactics <> n var
R20128:20128 Tactics <> m var
R20113:20115 Coq.Init.Logic <> :type_scope:x_'='_x not
R20102:20108 Basics <> beq_nat def
R20112:20112 Tactics <> m var
R20110:20110 Tactics <> n var
R20116:20119 Basics <> true constr
R20303:20309 Tactics <> f_equal thm
R20303:20309 Tactics <> f_equal thm
prf 20884:20912 <> double_injective_take2_FAILED
R20952:20960 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20962:20964 Coq.Init.Logic <> :type_scope:x_'='_x not
R20961:20961 Tactics <> n var
R20965:20965 Tactics <> m var
R20941:20943 Coq.Init.Logic <> :type_scope:x_'='_x not
R20933:20938 Induction <> double def
R20940:20940 Tactics <> n var
R20944:20949 Induction <> double def
R20951:20951 Tactics <> m var
R21245:21251 Tactics <> f_equal thm
R21245:21251 Tactics <> f_equal thm
prf 22187:22208 <> double_injective_take2
R22248:22256 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22258:22260 Coq.Init.Logic <> :type_scope:x_'='_x not
R22257:22257 Tactics <> n var
R22261:22261 Tactics <> m var
R22237:22239 Coq.Init.Logic <> :type_scope:x_'='_x not
R22229:22234 Induction <> double def
R22236:22236 Tactics <> n var
R22240:22245 Induction <> double def
R22247:22247 Tactics <> m var
R22724:22730 Tactics <> f_equal thm
R22724:22730 Tactics <> f_equal thm
prf 24930:24940 <> beq_id_true
R24975:24978 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24980:24982 Coq.Init.Logic <> :type_scope:x_'='_x not
R24979:24979 Tactics <> x var
R24983:24983 Tactics <> y var
R24968:24970 Coq.Init.Logic <> :type_scope:x_'='_x not
R24958:24963 Lists <> beq_id def
R24967:24967 Tactics <> y var
R24965:24965 Tactics <> x var
R24971:24974 Basics <> true constr
R25044:25046 Coq.Init.Logic <> :type_scope:x_'='_x not
R25044:25046 Coq.Init.Logic <> :type_scope:x_'='_x not
R25059:25070 Tactics <> beq_nat_true thm
R25059:25070 Tactics <> beq_nat_true thm
prf 25228:25247 <> nth_error_after_last
R25262:25264 Coq.Init.Datatypes <> nat ind
R25283:25286 Poly <> list ind
R25288:25288 Tactics <> X var
R25309:25317 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25331:25333 Coq.Init.Logic <> :type_scope:x_'='_x not
R25318:25326 Poly <> nth_error def
R25330:25330 Tactics <> n var
R25328:25328 Tactics <> l var
R25334:25337 Poly <> None constr
R25305:25307 Coq.Init.Logic <> :type_scope:x_'='_x not
R25297:25302 Poly <> length def
R25304:25304 Tactics <> l var
R25308:25308 Tactics <> n var
def 25890:25895 <> square
R25903:25905 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25902:25902 Tactics <> n var
R25906:25906 Tactics <> n var
prf 25977:25987 <> square_mult
R26017:26019 Coq.Init.Logic <> :type_scope:x_'='_x not
R26003:26008 Tactics <> square def
R26012:26014 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26011:26011 Tactics <> n var
R26015:26015 Tactics <> m var
R26028:26030 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26020:26025 Tactics <> square def
R26027:26027 Tactics <> n var
R26031:26036 Tactics <> square def
R26038:26038 Tactics <> m var
R26355:26360 Tactics <> square def
R26685:26694 Induction <> mult_assoc thm
R26685:26694 Induction <> mult_assoc thm
R26685:26694 Induction <> mult_assoc thm
R26720:26722 Coq.Init.Logic <> :type_scope:x_'='_x not
R26716:26718 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26712:26714 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26728:26730 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26724:26726 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26720:26722 Coq.Init.Logic <> :type_scope:x_'='_x not
R26716:26718 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26712:26714 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26728:26730 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26724:26726 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26747:26755 Induction <> mult_comm thm
R26747:26755 Induction <> mult_comm thm
R26747:26755 Induction <> mult_comm thm
R26764:26773 Induction <> mult_assoc thm
R26764:26773 Induction <> mult_assoc thm
R26799:26808 Induction <> mult_assoc thm
R26799:26808 Induction <> mult_assoc thm
R26799:26808 Induction <> mult_assoc thm
def 27196:27198 <> foo
R27204:27206 Coq.Init.Datatypes <> nat ind
prf 27419:27430 <> silly_fact_1
R27453:27455 Coq.Init.Logic <> :type_scope:x_'='_x not
R27449:27451 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27444:27446 Tactics <> foo def
R27448:27448 Tactics <> m var
R27467:27469 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27456:27458 Tactics <> foo def
R27462:27464 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27461:27461 Tactics <> m var
def 27700:27702 <> bar
R27717:27717 Tactics <> x var
R27728:27728 Coq.Init.Datatypes <> O constr
R27739:27739 Coq.Init.Datatypes <> S constr
prf 27813:27831 <> silly_fact_2_FAILED
R27854:27856 Coq.Init.Logic <> :type_scope:x_'='_x not
R27850:27852 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27845:27847 Tactics <> bar def
R27849:27849 Tactics <> m var
R27868:27870 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27857:27859 Tactics <> bar def
R27863:27865 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27862:27862 Tactics <> m var
prf 28862:28873 <> silly_fact_2
R28896:28898 Coq.Init.Logic <> :type_scope:x_'='_x not
R28892:28894 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28887:28889 Tactics <> bar def
R28891:28891 Tactics <> m var
R28910:28912 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28899:28901 Tactics <> bar def
R28905:28907 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28904:28904 Tactics <> m var
prf 29263:29275 <> silly_fact_2'
R29298:29300 Coq.Init.Logic <> :type_scope:x_'='_x not
R29294:29296 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29289:29291 Tactics <> bar def
R29293:29293 Tactics <> m var
R29312:29314 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29301:29303 Tactics <> bar def
R29307:29309 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29306:29306 Tactics <> m var
R29346:29348 Tactics <> bar def
def 29992:29999 <> sillyfun
R30006:30008 Coq.Init.Datatypes <> nat ind
R30013:30016 Basics <> bool ind
R30026:30032 Basics <> beq_nat def
R30034:30034 Tactics <> n var
R30059:30065 Basics <> beq_nat def
R30067:30067 Tactics <> n var
R30089:30093 Basics <> false constr
R30076:30080 Basics <> false constr
R30043:30047 Basics <> false constr
prf 30105:30118 <> sillyfun_false
R30134:30136 Coq.Init.Datatypes <> nat ind
R30152:30154 Coq.Init.Logic <> :type_scope:x_'='_x not
R30142:30149 Tactics <> sillyfun def
R30151:30151 Tactics <> n var
R30155:30159 Basics <> false constr
R30188:30195 Tactics <> sillyfun def
R30210:30216 Basics <> beq_nat def
R30210:30216 Basics <> beq_nat def
R30310:30316 Basics <> beq_nat def
R30310:30316 Basics <> beq_nat def
def 31207:31211 <> split
R31231:31234 Poly <> list ind
R31238:31238 Poly <> :type_scope:x_'*'_x not
R31237:31237 Tactics <> X var
R31239:31239 Tactics <> Y var
R31260:31260 Poly <> :type_scope:x_'*'_x not
R31267:31271 Poly <> :type_scope:x_'*'_x not
R31278:31278 Poly <> :type_scope:x_'*'_x not
R31261:31264 Poly <> list ind
R31266:31266 Tactics <> X var
R31272:31275 Poly <> list ind
R31277:31277 Tactics <> Y var
R31291:31291 Tactics <> l var
R31302:31303 Poly <> ::'['_']' not
R31308:31308 Poly <> ::'('_x_','_x_')' not
R31311:31312 Poly <> ::'('_x_','_x_')' not
R31315:31315 Poly <> ::'('_x_','_x_')' not
R31309:31310 Poly <> ::'['_']' not
R31313:31314 Poly <> ::'['_']' not
R31327:31330 Poly <> ::x_'::'_x not
R31321:31321 Poly <> ::'('_x_','_x_')' not
R31323:31324 Poly <> ::'('_x_','_x_')' not
R31326:31326 Poly <> ::'('_x_','_x_')' not
R31348:31352 Tactics <> split def
R31369:31369 Poly <> ::'('_x_','_x_')' not
R31372:31373 Poly <> ::'('_x_','_x_')' not
R31376:31376 Poly <> ::'('_x_','_x_')' not
R31381:31381 Poly <> ::'('_x_','_x_')' not
R31389:31390 Poly <> ::'('_x_','_x_')' not
R31398:31398 Poly <> ::'('_x_','_x_')' not
R31383:31386 Poly <> ::x_'::'_x not
R31392:31395 Poly <> ::x_'::'_x not
prf 31507:31516 <> list_tl_eq
R31538:31538 Tactics <> X var
R31545:31548 Poly <> list ind
R31550:31550 Tactics <> X var
R31571:31575 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R31556:31556 Coq.Init.Logic <> :type_scope:x_'='_x not
R31561:31565 Coq.Init.Logic <> :type_scope:x_'='_x not
R31570:31570 Coq.Init.Logic <> :type_scope:x_'='_x not
R31558:31559 Poly <> ::x_'::'_x not
R31557:31557 Tactics <> x var
R31560:31560 Tactics <> l var
R31567:31568 Poly <> ::x_'::'_x not
R31566:31566 Tactics <> x var
R31569:31569 Tactics <> r var
R31577:31579 Coq.Init.Logic <> :type_scope:x_'='_x not
R31576:31576 Tactics <> l var
R31580:31580 Tactics <> r var
R31845:31850 Coq.Setoids.Setoid <> <> lib
prf 31861:31873 <> combine_split
R31893:31896 Poly <> list ind
R31900:31902 Poly <> :type_scope:x_'*'_x not
R31899:31899 Tactics <> X var
R31903:31903 Tactics <> Y var
R31934:31939 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31953:31955 Coq.Init.Logic <> :type_scope:x_'='_x not
R31940:31946 Poly <> combine def
R31951:31952 Tactics <> l2 var
R31948:31949 Tactics <> l1 var
R31956:31956 Tactics <> l var
R31923:31925 Coq.Init.Logic <> :type_scope:x_'='_x not
R31916:31920 Tactics <> split def
R31922:31922 Tactics <> l var
R31926:31926 Poly <> ::'('_x_','_x_')' not
R31929:31930 Poly <> ::'('_x_','_x_')' not
R31933:31933 Poly <> ::'('_x_','_x_')' not
R31927:31928 Tactics <> l1 var
R31931:31932 Tactics <> l2 var
R32117:32121 Tactics <> split def
R32117:32121 Tactics <> split def
R32172:32173 Poly <> ::'['_']' not
R32185:32194 Tactics <> list_tl_eq thm
R32185:32194 Tactics <> list_tl_eq thm
R32185:32194 Tactics <> list_tl_eq thm
def 32494:32502 <> sillyfun1
R32509:32511 Coq.Init.Datatypes <> nat ind
R32516:32519 Basics <> bool ind
R32529:32535 Basics <> beq_nat def
R32537:32537 Tactics <> n var
R32561:32567 Basics <> beq_nat def
R32569:32569 Tactics <> n var
R32590:32594 Basics <> false constr
R32578:32581 Basics <> true constr
R32546:32549 Basics <> true constr
prf 32853:32872 <> sillyfun1_odd_FAILED
R32888:32890 Coq.Init.Datatypes <> nat ind
R32917:32925 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32932:32934 Coq.Init.Logic <> :type_scope:x_'='_x not
R32926:32929 Basics <> oddb def
R32931:32931 Tactics <> n var
R32935:32938 Basics <> true constr
R32910:32912 Coq.Init.Logic <> :type_scope:x_'='_x not
R32899:32907 Tactics <> sillyfun1 def
R32909:32909 Tactics <> n var
R32913:32916 Basics <> true constr
R32970:32978 Tactics <> sillyfun1 def
R32999:33005 Basics <> beq_nat def
R32999:33005 Basics <> beq_nat def
prf 33855:33867 <> sillyfun1_odd
R33883:33885 Coq.Init.Datatypes <> nat ind
R33912:33920 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33927:33929 Coq.Init.Logic <> :type_scope:x_'='_x not
R33921:33924 Basics <> oddb def
R33926:33926 Tactics <> n var
R33930:33933 Basics <> true constr
R33905:33907 Coq.Init.Logic <> :type_scope:x_'='_x not
R33894:33902 Tactics <> sillyfun1 def
R33904:33904 Tactics <> n var
R33908:33911 Basics <> true constr
R33965:33973 Tactics <> sillyfun1 def
R33994:34000 Basics <> beq_nat def
R33994:34000 Basics <> beq_nat def
R34249:34260 Tactics <> beq_nat_true thm
R34249:34260 Tactics <> beq_nat_true thm
R34547:34553 Basics <> beq_nat def
R34547:34553 Basics <> beq_nat def
R34613:34624 Tactics <> beq_nat_true thm
R34613:34624 Tactics <> beq_nat_true thm
prf 34788:34809 <> bool_fn_applied_thrice
R34831:34834 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34835:34838 Basics <> bool ind
R34827:34830 Basics <> bool ind
R34846:34849 Basics <> bool ind
R34866:34868 Coq.Init.Logic <> :type_scope:x_'='_x not
R34855:34855 Tactics <> f var
R34858:34858 Tactics <> f var
R34861:34861 Tactics <> f var
R34863:34863 Tactics <> b var
R34869:34869 Tactics <> f var
R34871:34871 Tactics <> b var
R34934:34937 Basics <> true constr
R34934:34937 Basics <> true constr
R35000:35004 Basics <> false constr
R35000:35004 Basics <> false constr
R35068:35072 Basics <> false constr
R35068:35072 Basics <> false constr
R35104:35107 Basics <> true constr
R35104:35107 Basics <> true constr
prf 37468:37478 <> beq_nat_sym
R37496:37498 Coq.Init.Datatypes <> nat ind
R37515:37517 Coq.Init.Logic <> :type_scope:x_'='_x not
R37504:37510 Basics <> beq_nat def
R37514:37514 Tactics <> m var
R37512:37512 Tactics <> n var
R37518:37524 Basics <> beq_nat def
R37528:37528 Tactics <> n var
R37526:37526 Tactics <> m var
prf 38069:38081 <> beq_nat_trans
R38119:38124 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38143:38148 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38160:38162 Coq.Init.Logic <> :type_scope:x_'='_x not
R38149:38155 Basics <> beq_nat def
R38159:38159 Tactics <> p var
R38157:38157 Tactics <> n var
R38163:38166 Basics <> true constr
R38136:38138 Coq.Init.Logic <> :type_scope:x_'='_x not
R38125:38131 Basics <> beq_nat def
R38135:38135 Tactics <> p var
R38133:38133 Tactics <> m var
R38139:38142 Basics <> true constr
R38112:38114 Coq.Init.Logic <> :type_scope:x_'='_x not
R38101:38107 Basics <> beq_nat def
R38111:38111 Tactics <> m var
R38109:38109 Tactics <> n var
R38115:38118 Basics <> true constr
R38207:38213 Basics <> beq_nat def
R38222:38233 Tactics <> beq_nat_true thm
R38222:38233 Tactics <> beq_nat_true thm
R38248:38259 Tactics <> beq_nat_true thm
R38248:38259 Tactics <> beq_nat_true thm
R38310:38321 Induction <> beq_nat_refl thm
R38310:38321 Induction <> beq_nat_refl thm
def 39034:39056 <> split_combine_statement
R39097:39100 Poly <> list ind
R39102:39102 Tactics <> X var
R39127:39130 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39152:39154 Coq.Init.Logic <> :type_scope:x_'='_x not
R39131:39135 Tactics <> split def
R39138:39144 Poly <> combine def
R39149:39150 Tactics <> l2 var
R39146:39147 Tactics <> l1 var
R39155:39155 Poly <> ::'('_x_','_x_')' not
R39158:39159 Poly <> ::'('_x_','_x_')' not
R39162:39162 Poly <> ::'('_x_','_x_')' not
R39156:39157 Tactics <> l1 var
R39160:39161 Tactics <> l2 var
R39115:39117 Coq.Init.Logic <> :type_scope:x_'='_x not
R39106:39111 Poly <> length def
R39113:39114 Tactics <> l1 var
R39118:39123 Poly <> length def
R39125:39126 Tactics <> l2 var
prf 39179:39191 <> split_combine
R39195:39217 Tactics <> split_combine_statement def
prf 39673:39687 <> filter_exercise
R39718:39721 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39722:39725 Basics <> bool ind
R39717:39717 Tactics <> X var
R39762:39762 Tactics <> X var
R39773:39776 Poly <> list ind
R39778:39778 Tactics <> X var
R39810:39818 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39825:39827 Coq.Init.Logic <> :type_scope:x_'='_x not
R39819:39822 Tactics <> test var
R39824:39824 Tactics <> x var
R39828:39831 Basics <> true constr
R39800:39802 Coq.Init.Logic <> :type_scope:x_'='_x not
R39787:39792 Poly <> filter def
R39799:39799 Tactics <> l var
R39794:39797 Tactics <> test var
R39804:39807 Poly <> ::x_'::'_x not
R39803:39803 Tactics <> x var
R39808:39809 Tactics <> lf var
def 40984:40990 <> forallb
R41004:41005 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41006:41009 Basics <> bool ind
R41003:41003 Tactics <> X var
R41014:41017 Poly <> list ind
R41019:41019 Tactics <> X var
R41023:41026 Basics <> bool ind
R41041:41041 Tactics <> l var
R41054:41055 Poly <> ::'['_']' not
R41060:41063 Basics <> true constr
R41072:41073 Poly <> ::x_'::'_x not
R41089:41095 Tactics <> forallb def
R41097:41097 Tactics <> f var
R41123:41126 Basics <> andb def
R41134:41134 Tactics <> t var
R41129:41129 Tactics <> f var
R41158:41164 Tactics <> forallb def
R41172:41172 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41174:41174 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41176:41176 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41178:41178 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41180:41180 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41182:41182 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41166:41170 Basics <> evenb def
R41199:41205 Tactics <> forallb def
R41212:41212 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41218:41218 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41224:41224 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41213:41217 Basics <> false constr
R41219:41223 Basics <> false constr
R41207:41210 Basics <> negb def
def 41237:41243 <> existsb
R41257:41258 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41259:41262 Basics <> bool ind
R41256:41256 Tactics <> X var
R41267:41270 Poly <> list ind
R41272:41272 Tactics <> X var
R41275:41278 Basics <> bool ind
R41293:41293 Tactics <> l var
R41306:41307 Poly <> ::'['_']' not
R41312:41316 Basics <> false constr
R41325:41326 Poly <> ::x_'::'_x not
R41341:41347 Tactics <> existsb def
R41349:41349 Tactics <> f var
R41374:41376 Basics <> orb def
R41384:41384 Tactics <> t var
R41379:41379 Tactics <> f var
R41405:41411 Tactics <> existsb def
R41418:41418 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41420:41420 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41422:41422 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41424:41424 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41426:41426 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41428:41428 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41430:41430 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41413:41416 Basics <> oddb def
R41443:41449 Tactics <> existsb def
R41463:41463 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41468:41468 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41473:41473 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41479:41479 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41464:41467 Basics <> true constr
R41469:41472 Basics <> true constr
R41474:41478 Basics <> false constr
R41452:41455 Basics <> andb def
R41457:41460 Basics <> true constr
def 41495:41502 <> existsb'
R41515:41518 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41519:41522 Basics <> bool ind
R41514:41514 Tactics <> X var
R41527:41530 Poly <> list ind
R41532:41532 Tactics <> X var
R41535:41538 Basics <> bool ind
R41545:41548 Basics <> negb def
R41551:41557 Tactics <> forallb def
R41580:41580 Tactics <> l var
R41569:41572 Basics <> negb def
R41574:41574 Tactics <> f var
R41576:41576 Tactics <> x var
R41594:41601 Tactics <> existsb' def
R41615:41615 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41620:41620 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41625:41625 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41631:41631 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41616:41619 Basics <> true constr
R41621:41624 Basics <> true constr
R41626:41630 Basics <> false constr
R41604:41607 Basics <> andb def
R41609:41612 Basics <> true constr
prf 41644:41662 <> existsb_eq_existsb'
R41685:41686 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41687:41690 Basics <> bool ind
R41684:41684 Tactics <> X var
R41695:41698 Poly <> list ind
R41700:41700 Tactics <> X var
R41717:41719 Coq.Init.Logic <> :type_scope:x_'='_x not
R41706:41712 Tactics <> existsb def
R41716:41716 Tactics <> l var
R41714:41714 Tactics <> f var
R41720:41727 Tactics <> existsb' def
R41731:41731 Tactics <> l var
R41729:41729 Tactics <> f var
R41821:41828 Tactics <> existsb' def
R41916:41923 Tactics <> existsb' def
