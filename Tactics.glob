DIGEST 91ba28cbd77e20847dbff0fe3ce75944
FTactics
R686:689 Poly <> <> lib
prf 966:971 <> silly1
R993:995 Coq.Init.Datatypes <> nat ind
R1009:1018 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1032:1040 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1046:1048 Coq.Init.Logic <> :type_scope:x_'='_x not
R1041:1041 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1043:1043 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1045:1045 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1042:1042 Tactics <> n var
R1044:1044 Tactics <> o var
R1049:1049 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1051:1051 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1053:1053 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1050:1050 Tactics <> m var
R1052:1052 Tactics <> p var
R1024:1026 Coq.Init.Logic <> :type_scope:x_'='_x not
R1019:1019 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1021:1021 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1023:1023 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1020:1020 Tactics <> n var
R1022:1022 Tactics <> o var
R1027:1027 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1029:1029 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1031:1031 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1028:1028 Tactics <> n var
R1030:1030 Tactics <> p var
R1005:1007 Coq.Init.Logic <> :type_scope:x_'='_x not
R1004:1004 Tactics <> n var
R1008:1008 Tactics <> m var
prf 1577:1582 <> silly2
R1604:1606 Coq.Init.Datatypes <> nat ind
R1620:1629 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1630:1630 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1673:1682 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1688:1690 Coq.Init.Logic <> :type_scope:x_'='_x not
R1683:1683 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1685:1685 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1687:1687 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1684:1684 Tactics <> n var
R1686:1686 Tactics <> o var
R1691:1691 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1693:1693 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1695:1695 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1692:1692 Tactics <> m var
R1694:1694 Tactics <> p var
R1645:1647 Coq.Init.Datatypes <> nat ind
R1656:1659 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1665:1667 Coq.Init.Logic <> :type_scope:x_'='_x not
R1660:1660 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1662:1662 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1664:1664 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1661:1661 Tactics <> q var
R1663:1663 Tactics <> o var
R1668:1668 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1670:1670 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1672:1672 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1669:1669 Tactics <> r var
R1671:1671 Tactics <> p var
R1652:1654 Coq.Init.Logic <> :type_scope:x_'='_x not
R1651:1651 Tactics <> q var
R1655:1655 Tactics <> r var
R1616:1618 Coq.Init.Logic <> :type_scope:x_'='_x not
R1615:1615 Tactics <> n var
R1619:1619 Tactics <> m var
prf 2206:2212 <> silly2a
R2230:2232 Coq.Init.Datatypes <> nat ind
R2254:2263 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2264:2264 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2311:2320 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2324:2326 Coq.Init.Logic <> :type_scope:x_'='_x not
R2321:2321 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2323:2323 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2322:2322 Tactics <> n var
R2327:2327 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2329:2329 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2328:2328 Tactics <> m var
R2279:2281 Coq.Init.Datatypes <> nat ind
R2298:2301 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2305:2307 Coq.Init.Logic <> :type_scope:x_'='_x not
R2302:2302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2304:2304 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2303:2303 Tactics <> q var
R2308:2308 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2310:2310 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2309:2309 Tactics <> r var
R2290:2292 Coq.Init.Logic <> :type_scope:x_'='_x not
R2285:2285 Poly <> ::'('_x_','_x_')' not
R2287:2287 Poly <> ::'('_x_','_x_')' not
R2289:2289 Poly <> ::'('_x_','_x_')' not
R2286:2286 Tactics <> q var
R2288:2288 Tactics <> q var
R2293:2293 Poly <> ::'('_x_','_x_')' not
R2295:2295 Poly <> ::'('_x_','_x_')' not
R2297:2297 Poly <> ::'('_x_','_x_')' not
R2294:2294 Tactics <> r var
R2296:2296 Tactics <> r var
R2246:2248 Coq.Init.Logic <> :type_scope:x_'='_x not
R2241:2241 Poly <> ::'('_x_','_x_')' not
R2243:2243 Poly <> ::'('_x_','_x_')' not
R2245:2245 Poly <> ::'('_x_','_x_')' not
R2242:2242 Tactics <> n var
R2244:2244 Tactics <> n var
R2249:2249 Poly <> ::'('_x_','_x_')' not
R2251:2251 Poly <> ::'('_x_','_x_')' not
R2253:2253 Poly <> ::'('_x_','_x_')' not
R2250:2250 Tactics <> m var
R2252:2252 Tactics <> m var
prf 2512:2519 <> silly_ex
R2528:2528 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2574:2583 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2598:2606 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2613:2615 Coq.Init.Logic <> :type_scope:x_'='_x not
R2607:2610 Basics <> oddb def
R2616:2619 Basics <> true constr
R2591:2593 Coq.Init.Logic <> :type_scope:x_'='_x not
R2584:2588 Basics <> evenb def
R2594:2597 Basics <> true constr
R2553:2556 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2567:2569 Coq.Init.Logic <> :type_scope:x_'='_x not
R2557:2560 Basics <> oddb def
R2563:2563 Coq.Init.Datatypes <> S constr
R2565:2565 Tactics <> n var
R2570:2573 Basics <> true constr
R2546:2548 Coq.Init.Logic <> :type_scope:x_'='_x not
R2539:2543 Basics <> evenb def
R2545:2545 Tactics <> n var
R2549:2552 Basics <> true constr
prf 2904:2918 <> silly3_firsttry
R2934:2936 Coq.Init.Datatypes <> nat ind
R2963:2972 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2992:2994 Coq.Init.Logic <> :type_scope:x_'='_x not
R2973:2979 Basics <> beq_nat def
R2982:2982 Coq.Init.Datatypes <> S constr
R2985:2985 Coq.Init.Datatypes <> S constr
R2987:2987 Tactics <> n var
R2995:2998 Basics <> true constr
R2949:2951 Coq.Init.Logic <> :type_scope:x_'='_x not
R2945:2948 Basics <> true constr
R2952:2958 Basics <> beq_nat def
R2960:2960 Tactics <> n var
prf 3538:3550 <> rev_exercise1
R3569:3572 Poly <> list ind
R3574:3576 Coq.Init.Datatypes <> nat ind
R3595:3603 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3606:3608 Coq.Init.Logic <> :type_scope:x_'='_x not
R3604:3605 Tactics <> l' var
R3609:3611 Poly <> rev def
R3613:3613 Tactics <> l var
R3586:3588 Coq.Init.Logic <> :type_scope:x_'='_x not
R3585:3585 Tactics <> l var
R3589:3591 Poly <> rev def
R3593:3594 Tactics <> l' var
R3661:3663 Poly <> rev def
R3679:3692 Poly <> rev_involutive thm
R3679:3692 Poly <> rev_involutive thm
R3679:3692 Poly <> rev_involutive thm
def 4190:4205 <> trans_eq_example
R4231:4233 Coq.Init.Datatypes <> nat ind
R4255:4263 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4277:4285 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4291:4293 Coq.Init.Logic <> :type_scope:x_'='_x not
R4286:4286 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4288:4288 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4290:4290 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4287:4287 Tactics <> a var
R4289:4289 Tactics <> b var
R4294:4294 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4296:4296 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4298:4298 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4295:4295 Tactics <> e var
R4297:4297 Tactics <> f var
R4269:4271 Coq.Init.Logic <> :type_scope:x_'='_x not
R4264:4264 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4266:4266 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4268:4268 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4265:4265 Tactics <> c var
R4267:4267 Tactics <> d var
R4272:4272 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4274:4274 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4276:4276 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4273:4273 Tactics <> e var
R4275:4275 Tactics <> f var
R4247:4249 Coq.Init.Logic <> :type_scope:x_'='_x not
R4242:4242 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4244:4244 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4246:4246 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4243:4243 Tactics <> a var
R4245:4245 Tactics <> b var
R4250:4250 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4252:4252 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4254:4254 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4251:4251 Tactics <> c var
R4253:4253 Tactics <> d var
prf 4555:4562 <> trans_eq
R4591:4591 Tactics <> X var
R4602:4605 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4611:4614 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4616:4618 Coq.Init.Logic <> :type_scope:x_'='_x not
R4615:4615 Tactics <> n var
R4619:4619 Tactics <> o var
R4607:4609 Coq.Init.Logic <> :type_scope:x_'='_x not
R4606:4606 Tactics <> m var
R4610:4610 Tactics <> o var
R4598:4600 Coq.Init.Logic <> :type_scope:x_'='_x not
R4597:4597 Tactics <> n var
R4601:4601 Tactics <> m var
def 4874:4890 <> trans_eq_example'
R4916:4918 Coq.Init.Datatypes <> nat ind
R4940:4948 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4962:4970 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4976:4978 Coq.Init.Logic <> :type_scope:x_'='_x not
R4971:4971 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4973:4973 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4975:4975 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4972:4972 Tactics <> a var
R4974:4974 Tactics <> b var
R4979:4979 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4981:4981 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4983:4983 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4980:4980 Tactics <> e var
R4982:4982 Tactics <> f var
R4954:4956 Coq.Init.Logic <> :type_scope:x_'='_x not
R4949:4949 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4951:4951 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4953:4953 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4950:4950 Tactics <> c var
R4952:4952 Tactics <> d var
R4957:4957 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4959:4959 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4961:4961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4958:4958 Tactics <> e var
R4960:4960 Tactics <> f var
R4932:4934 Coq.Init.Logic <> :type_scope:x_'='_x not
R4927:4927 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4929:4929 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4931:4931 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4928:4928 Tactics <> a var
R4930:4930 Tactics <> b var
R4935:4935 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4937:4937 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4939:4939 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4936:4936 Tactics <> c var
R4938:4938 Tactics <> d var
R5454:5454 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5456:5456 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5458:5458 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5436:5443 Tactics <> trans_eq thm
R5454:5454 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5456:5456 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5458:5458 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5436:5443 Tactics <> trans_eq thm
def 5790:5806 <> trans_eq_exercise
R5828:5830 Coq.Init.Datatypes <> nat ind
R5855:5863 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5875:5883 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5884:5884 Coq.Init.Logic <> :type_scope:x_'='_x not
R5890:5894 Coq.Init.Logic <> :type_scope:x_'='_x not
R5905:5905 Coq.Init.Logic <> :type_scope:x_'='_x not
R5886:5888 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5885:5885 Tactics <> n var
R5889:5889 Tactics <> p var
R5895:5902 Basics <> minustwo def
R5904:5904 Tactics <> o var
R5864:5864 Coq.Init.Logic <> :type_scope:x_'='_x not
R5870:5873 Coq.Init.Logic <> :type_scope:x_'='_x not
R5866:5868 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5865:5865 Tactics <> n var
R5869:5869 Tactics <> p var
R5874:5874 Tactics <> m var
R5840:5843 Coq.Init.Logic <> :type_scope:x_'='_x not
R5854:5854 Coq.Init.Logic <> :type_scope:x_'='_x not
R5839:5839 Tactics <> m var
R5844:5851 Basics <> minustwo def
R5853:5853 Tactics <> o var
prf 7468:7478 <> S_injective
R7496:7498 Coq.Init.Datatypes <> nat ind
R7513:7518 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7520:7522 Coq.Init.Logic <> :type_scope:x_'='_x not
R7519:7519 Tactics <> n var
R7523:7523 Tactics <> m var
R7507:7509 Coq.Init.Logic <> :type_scope:x_'='_x not
R7504:7504 Coq.Init.Datatypes <> S constr
R7506:7506 Tactics <> n var
R7510:7510 Coq.Init.Datatypes <> S constr
R7512:7512 Tactics <> m var
prf 8018:8030 <> inversion_ex1
R8050:8052 Coq.Init.Datatypes <> nat ind
R8073:8078 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8082:8084 Coq.Init.Logic <> :type_scope:x_'='_x not
R8079:8079 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8081:8081 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8080:8080 Tactics <> n var
R8085:8085 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8087:8087 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8086:8086 Tactics <> m var
R8064:8066 Coq.Init.Logic <> :type_scope:x_'='_x not
R8058:8058 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8060:8061 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8063:8063 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8059:8059 Tactics <> n var
R8062:8062 Tactics <> m var
R8067:8067 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8069:8070 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8072:8072 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8068:8068 Tactics <> o var
R8071:8071 Tactics <> o var
prf 8245:8257 <> inversion_ex2
R8275:8277 Coq.Init.Datatypes <> nat ind
R8292:8297 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8299:8301 Coq.Init.Logic <> :type_scope:x_'='_x not
R8298:8298 Tactics <> n var
R8302:8302 Tactics <> m var
R8286:8288 Coq.Init.Logic <> :type_scope:x_'='_x not
R8283:8283 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8285:8285 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8284:8284 Tactics <> n var
R8289:8289 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8291:8291 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8290:8290 Tactics <> m var
def 8424:8436 <> inversion_ex3
R8467:8467 Tactics <> X var
R8477:8480 Poly <> list ind
R8482:8482 Tactics <> X var
R8508:8513 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8529:8534 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8536:8538 Coq.Init.Logic <> :type_scope:x_'='_x not
R8535:8535 Tactics <> x var
R8539:8539 Tactics <> y var
R8520:8522 Coq.Init.Logic <> :type_scope:x_'='_x not
R8515:8518 Poly <> ::x_'::'_x not
R8514:8514 Tactics <> y var
R8519:8519 Tactics <> l var
R8524:8527 Poly <> ::x_'::'_x not
R8523:8523 Tactics <> x var
R8528:8528 Tactics <> j var
R8499:8501 Coq.Init.Logic <> :type_scope:x_'='_x not
R8489:8492 Poly <> ::x_'::'_x not
R8488:8488 Tactics <> x var
R8494:8497 Poly <> ::x_'::'_x not
R8493:8493 Tactics <> y var
R8498:8498 Tactics <> l var
R8503:8506 Poly <> ::x_'::'_x not
R8502:8502 Tactics <> z var
R8507:8507 Tactics <> j var
prf 8844:8854 <> beq_nat_0_l
R8889:8892 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8894:8896 Coq.Init.Logic <> :type_scope:x_'='_x not
R8893:8893 Tactics <> n var
R8882:8884 Coq.Init.Logic <> :type_scope:x_'='_x not
R8871:8877 Basics <> beq_nat def
R8881:8881 Tactics <> n var
R8885:8888 Basics <> true constr
prf 9804:9816 <> inversion_ex4
R9832:9834 Coq.Init.Datatypes <> nat ind
R9847:9852 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9858:9860 Coq.Init.Logic <> :type_scope:x_'='_x not
R9854:9856 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9843:9845 Coq.Init.Logic <> :type_scope:x_'='_x not
R9840:9840 Coq.Init.Datatypes <> S constr
R9842:9842 Tactics <> n var
R9846:9846 Coq.Init.Datatypes <> O constr
prf 9922:9934 <> inversion_ex5
R9952:9954 Coq.Init.Datatypes <> nat ind
R9972:9977 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9981:9983 Coq.Init.Logic <> :type_scope:x_'='_x not
R9978:9978 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9980:9980 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9979:9979 Tactics <> n var
R9984:9984 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9986:9986 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9985:9985 Tactics <> m var
R9965:9967 Coq.Init.Logic <> :type_scope:x_'='_x not
R9960:9964 Basics <> false constr
R9968:9971 Basics <> true constr
def 10498:10510 <> inversion_ex6
R10567:10567 Tactics <> X var
R10577:10580 Poly <> list ind
R10582:10582 Tactics <> X var
R10604:10609 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10625:10630 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10632:10634 Coq.Init.Logic <> :type_scope:x_'='_x not
R10631:10631 Tactics <> x var
R10635:10635 Tactics <> z var
R10616:10618 Coq.Init.Logic <> :type_scope:x_'='_x not
R10611:10614 Poly <> ::x_'::'_x not
R10610:10610 Tactics <> y var
R10615:10615 Tactics <> l var
R10620:10623 Poly <> ::x_'::'_x not
R10619:10619 Tactics <> z var
R10624:10624 Tactics <> j var
R10599:10601 Coq.Init.Logic <> :type_scope:x_'='_x not
R10589:10592 Poly <> ::x_'::'_x not
R10588:10588 Tactics <> x var
R10594:10597 Poly <> ::x_'::'_x not
R10593:10593 Tactics <> y var
R10598:10598 Tactics <> l var
R10602:10603 Poly <> ::'['_']' not
prf 11813:11819 <> f_equal
R11848:11851 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11852:11852 Tactics <> B var
R11847:11847 Tactics <> A var
R11861:11861 Tactics <> A var
R11872:11875 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11879:11881 Coq.Init.Logic <> :type_scope:x_'='_x not
R11876:11876 Tactics <> f var
R11878:11878 Tactics <> x var
R11882:11882 Tactics <> f var
R11884:11884 Tactics <> y var
R11868:11870 Coq.Init.Logic <> :type_scope:x_'='_x not
R11867:11867 Tactics <> x var
R11871:11871 Tactics <> y var
prf 12387:12391 <> S_inj
R12409:12411 Coq.Init.Datatypes <> nat ind
R12419:12422 Basics <> bool ind
R12454:12463 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12475:12477 Coq.Init.Logic <> :type_scope:x_'='_x not
R12464:12470 Basics <> beq_nat def
R12474:12474 Tactics <> m var
R12472:12472 Tactics <> n var
R12478:12478 Tactics <> b var
R12450:12452 Coq.Init.Logic <> :type_scope:x_'='_x not
R12431:12437 Basics <> beq_nat def
R12446:12446 Coq.Init.Datatypes <> S constr
R12448:12448 Tactics <> m var
R12440:12440 Coq.Init.Datatypes <> S constr
R12442:12442 Tactics <> n var
R12453:12453 Tactics <> b var
prf 13316:13322 <> silly3'
R13338:13340 Coq.Init.Datatypes <> nat ind
R13346:13346 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13395:13401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13420:13426 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13431:13433 Coq.Init.Logic <> :type_scope:x_'='_x not
R13427:13430 Basics <> true constr
R13434:13440 Basics <> beq_nat def
R13443:13443 Coq.Init.Datatypes <> S constr
R13446:13446 Coq.Init.Datatypes <> S constr
R13448:13448 Tactics <> n var
R13406:13408 Coq.Init.Logic <> :type_scope:x_'='_x not
R13402:13405 Basics <> true constr
R13409:13415 Basics <> beq_nat def
R13417:13417 Tactics <> n var
R13365:13368 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13388:13390 Coq.Init.Logic <> :type_scope:x_'='_x not
R13369:13375 Basics <> beq_nat def
R13378:13378 Coq.Init.Datatypes <> S constr
R13381:13381 Coq.Init.Datatypes <> S constr
R13383:13383 Tactics <> n var
R13391:13394 Basics <> true constr
R13358:13360 Coq.Init.Logic <> :type_scope:x_'='_x not
R13347:13353 Basics <> beq_nat def
R13355:13355 Tactics <> n var
R13361:13364 Basics <> true constr
prf 14327:14344 <> plus_n_n_injective
R14378:14386 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14388:14390 Coq.Init.Logic <> :type_scope:x_'='_x not
R14387:14387 Tactics <> n var
R14391:14391 Tactics <> m var
R14370:14372 Coq.Init.Logic <> :type_scope:x_'='_x not
R14366:14368 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14365:14365 Tactics <> n var
R14369:14369 Tactics <> n var
R14374:14376 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14373:14373 Tactics <> m var
R14377:14377 Tactics <> m var
R14589:14589 Coq.Init.Datatypes <> S constr
R14598:14604 Tactics <> f_equal thm
R14598:14604 Tactics <> f_equal thm
R14664:14672 Induction <> plus_n_Sm thm
R14664:14672 Induction <> plus_n_Sm thm
R14664:14672 Induction <> plus_n_Sm thm
R14692:14700 Induction <> plus_n_Sm thm
R14692:14700 Induction <> plus_n_Sm thm
R14692:14700 Induction <> plus_n_Sm thm
prf 15654:15676 <> double_injective_FAILED
R15716:15724 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15726:15728 Coq.Init.Logic <> :type_scope:x_'='_x not
R15725:15725 Tactics <> n var
R15729:15729 Tactics <> m var
R15705:15707 Coq.Init.Logic <> :type_scope:x_'='_x not
R15697:15702 Induction <> double def
R15704:15704 Tactics <> n var
R15708:15713 Induction <> double def
R15715:15715 Tactics <> m var
R16009:16015 Tactics <> f_equal thm
R16009:16015 Tactics <> f_equal thm
prf 18251:18266 <> double_injective
R18306:18314 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18316:18318 Coq.Init.Logic <> :type_scope:x_'='_x not
R18315:18315 Tactics <> n var
R18319:18319 Tactics <> m var
R18295:18297 Coq.Init.Logic <> :type_scope:x_'='_x not
R18287:18292 Induction <> double def
R18294:18294 Tactics <> n var
R18298:18303 Induction <> double def
R18305:18305 Tactics <> m var
R19192:19198 Tactics <> f_equal thm
R19192:19198 Tactics <> f_equal thm
prf 20099:20110 <> beq_nat_true
R20148:20151 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20153:20155 Coq.Init.Logic <> :type_scope:x_'='_x not
R20152:20152 Tactics <> n var
R20156:20156 Tactics <> m var
R20141:20143 Coq.Init.Logic <> :type_scope:x_'='_x not
R20130:20136 Basics <> beq_nat def
R20140:20140 Tactics <> m var
R20138:20138 Tactics <> n var
R20144:20147 Basics <> true constr
R20331:20337 Tactics <> f_equal thm
R20331:20337 Tactics <> f_equal thm
prf 20912:20940 <> double_injective_take2_FAILED
R20980:20988 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20990:20992 Coq.Init.Logic <> :type_scope:x_'='_x not
R20989:20989 Tactics <> n var
R20993:20993 Tactics <> m var
R20969:20971 Coq.Init.Logic <> :type_scope:x_'='_x not
R20961:20966 Induction <> double def
R20968:20968 Tactics <> n var
R20972:20977 Induction <> double def
R20979:20979 Tactics <> m var
R21273:21279 Tactics <> f_equal thm
R21273:21279 Tactics <> f_equal thm
prf 22215:22236 <> double_injective_take2
R22276:22284 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22286:22288 Coq.Init.Logic <> :type_scope:x_'='_x not
R22285:22285 Tactics <> n var
R22289:22289 Tactics <> m var
R22265:22267 Coq.Init.Logic <> :type_scope:x_'='_x not
R22257:22262 Induction <> double def
R22264:22264 Tactics <> n var
R22268:22273 Induction <> double def
R22275:22275 Tactics <> m var
R22752:22758 Tactics <> f_equal thm
R22752:22758 Tactics <> f_equal thm
prf 24958:24968 <> beq_id_true
R25003:25006 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25008:25010 Coq.Init.Logic <> :type_scope:x_'='_x not
R25007:25007 Tactics <> x var
R25011:25011 Tactics <> y var
R24996:24998 Coq.Init.Logic <> :type_scope:x_'='_x not
R24986:24991 Lists <> beq_id def
R24995:24995 Tactics <> y var
R24993:24993 Tactics <> x var
R24999:25002 Basics <> true constr
R25072:25074 Coq.Init.Logic <> :type_scope:x_'='_x not
R25072:25074 Coq.Init.Logic <> :type_scope:x_'='_x not
R25087:25098 Tactics <> beq_nat_true thm
R25087:25098 Tactics <> beq_nat_true thm
prf 25256:25275 <> nth_error_after_last
R25290:25292 Coq.Init.Datatypes <> nat ind
R25311:25314 Poly <> list ind
R25316:25316 Tactics <> X var
R25337:25345 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25359:25361 Coq.Init.Logic <> :type_scope:x_'='_x not
R25346:25354 Poly <> nth_error def
R25358:25358 Tactics <> n var
R25356:25356 Tactics <> l var
R25362:25365 Poly <> None constr
R25333:25335 Coq.Init.Logic <> :type_scope:x_'='_x not
R25325:25330 Poly <> length def
R25332:25332 Tactics <> l var
R25336:25336 Tactics <> n var
def 25918:25923 <> square
R25931:25933 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25930:25930 Tactics <> n var
R25934:25934 Tactics <> n var
prf 26005:26015 <> square_mult
R26045:26047 Coq.Init.Logic <> :type_scope:x_'='_x not
R26031:26036 Tactics <> square def
R26040:26042 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26039:26039 Tactics <> n var
R26043:26043 Tactics <> m var
R26056:26058 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26048:26053 Tactics <> square def
R26055:26055 Tactics <> n var
R26059:26064 Tactics <> square def
R26066:26066 Tactics <> m var
R26383:26388 Tactics <> square def
R26713:26722 Induction <> mult_assoc thm
R26713:26722 Induction <> mult_assoc thm
R26713:26722 Induction <> mult_assoc thm
R26748:26750 Coq.Init.Logic <> :type_scope:x_'='_x not
R26744:26746 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26740:26742 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26756:26758 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26752:26754 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26748:26750 Coq.Init.Logic <> :type_scope:x_'='_x not
R26744:26746 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26740:26742 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26756:26758 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26752:26754 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26775:26783 Induction <> mult_comm thm
R26775:26783 Induction <> mult_comm thm
R26775:26783 Induction <> mult_comm thm
R26792:26801 Induction <> mult_assoc thm
R26792:26801 Induction <> mult_assoc thm
R26827:26836 Induction <> mult_assoc thm
R26827:26836 Induction <> mult_assoc thm
R26827:26836 Induction <> mult_assoc thm
def 27224:27226 <> foo
R27232:27234 Coq.Init.Datatypes <> nat ind
prf 27447:27458 <> silly_fact_1
R27481:27483 Coq.Init.Logic <> :type_scope:x_'='_x not
R27477:27479 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27472:27474 Tactics <> foo def
R27476:27476 Tactics <> m var
R27495:27497 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27484:27486 Tactics <> foo def
R27490:27492 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27489:27489 Tactics <> m var
def 27728:27730 <> bar
R27745:27745 Tactics <> x var
R27756:27756 Coq.Init.Datatypes <> O constr
R27767:27767 Coq.Init.Datatypes <> S constr
prf 27841:27859 <> silly_fact_2_FAILED
R27882:27884 Coq.Init.Logic <> :type_scope:x_'='_x not
R27878:27880 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27873:27875 Tactics <> bar def
R27877:27877 Tactics <> m var
R27896:27898 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27885:27887 Tactics <> bar def
R27891:27893 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27890:27890 Tactics <> m var
prf 28890:28901 <> silly_fact_2
R28924:28926 Coq.Init.Logic <> :type_scope:x_'='_x not
R28920:28922 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28915:28917 Tactics <> bar def
R28919:28919 Tactics <> m var
R28938:28940 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28927:28929 Tactics <> bar def
R28933:28935 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28932:28932 Tactics <> m var
prf 29291:29303 <> silly_fact_2'
R29326:29328 Coq.Init.Logic <> :type_scope:x_'='_x not
R29322:29324 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29317:29319 Tactics <> bar def
R29321:29321 Tactics <> m var
R29340:29342 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29329:29331 Tactics <> bar def
R29335:29337 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29334:29334 Tactics <> m var
R29374:29376 Tactics <> bar def
def 30020:30027 <> sillyfun
R30034:30036 Coq.Init.Datatypes <> nat ind
R30041:30044 Basics <> bool ind
R30054:30060 Basics <> beq_nat def
R30062:30062 Tactics <> n var
R30087:30093 Basics <> beq_nat def
R30095:30095 Tactics <> n var
R30117:30121 Basics <> false constr
R30104:30108 Basics <> false constr
R30071:30075 Basics <> false constr
prf 30133:30146 <> sillyfun_false
R30162:30164 Coq.Init.Datatypes <> nat ind
R30180:30182 Coq.Init.Logic <> :type_scope:x_'='_x not
R30170:30177 Tactics <> sillyfun def
R30179:30179 Tactics <> n var
R30183:30187 Basics <> false constr
R30216:30223 Tactics <> sillyfun def
R30238:30244 Basics <> beq_nat def
R30238:30244 Basics <> beq_nat def
R30338:30344 Basics <> beq_nat def
R30338:30344 Basics <> beq_nat def
def 31235:31239 <> split
R31259:31262 Poly <> list ind
R31266:31266 Poly <> :type_scope:x_'*'_x not
R31265:31265 Tactics <> X var
R31267:31267 Tactics <> Y var
R31288:31288 Poly <> :type_scope:x_'*'_x not
R31295:31299 Poly <> :type_scope:x_'*'_x not
R31306:31306 Poly <> :type_scope:x_'*'_x not
R31289:31292 Poly <> list ind
R31294:31294 Tactics <> X var
R31300:31303 Poly <> list ind
R31305:31305 Tactics <> Y var
R31319:31319 Tactics <> l var
R31330:31331 Poly <> ::'['_']' not
R31336:31336 Poly <> ::'('_x_','_x_')' not
R31339:31340 Poly <> ::'('_x_','_x_')' not
R31343:31343 Poly <> ::'('_x_','_x_')' not
R31337:31338 Poly <> ::'['_']' not
R31341:31342 Poly <> ::'['_']' not
R31355:31358 Poly <> ::x_'::'_x not
R31349:31349 Poly <> ::'('_x_','_x_')' not
R31351:31352 Poly <> ::'('_x_','_x_')' not
R31354:31354 Poly <> ::'('_x_','_x_')' not
R31376:31380 Tactics <> split def
R31397:31397 Poly <> ::'('_x_','_x_')' not
R31400:31401 Poly <> ::'('_x_','_x_')' not
R31404:31404 Poly <> ::'('_x_','_x_')' not
R31409:31409 Poly <> ::'('_x_','_x_')' not
R31417:31418 Poly <> ::'('_x_','_x_')' not
R31426:31426 Poly <> ::'('_x_','_x_')' not
R31411:31414 Poly <> ::x_'::'_x not
R31420:31423 Poly <> ::x_'::'_x not
prf 31535:31544 <> list_tl_eq
R31566:31566 Tactics <> X var
R31573:31576 Poly <> list ind
R31578:31578 Tactics <> X var
R31599:31603 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R31584:31584 Coq.Init.Logic <> :type_scope:x_'='_x not
R31589:31593 Coq.Init.Logic <> :type_scope:x_'='_x not
R31598:31598 Coq.Init.Logic <> :type_scope:x_'='_x not
R31586:31587 Poly <> ::x_'::'_x not
R31585:31585 Tactics <> x var
R31588:31588 Tactics <> l var
R31595:31596 Poly <> ::x_'::'_x not
R31594:31594 Tactics <> x var
R31597:31597 Tactics <> r var
R31605:31607 Coq.Init.Logic <> :type_scope:x_'='_x not
R31604:31604 Tactics <> l var
R31608:31608 Tactics <> r var
R31873:31878 Coq.Setoids.Setoid <> <> lib
prf 31889:31901 <> combine_split
R31921:31924 Poly <> list ind
R31928:31930 Poly <> :type_scope:x_'*'_x not
R31927:31927 Tactics <> X var
R31931:31931 Tactics <> Y var
R31962:31967 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31981:31983 Coq.Init.Logic <> :type_scope:x_'='_x not
R31968:31974 Poly <> combine def
R31979:31980 Tactics <> l2 var
R31976:31977 Tactics <> l1 var
R31984:31984 Tactics <> l var
R31951:31953 Coq.Init.Logic <> :type_scope:x_'='_x not
R31944:31948 Tactics <> split def
R31950:31950 Tactics <> l var
R31954:31954 Poly <> ::'('_x_','_x_')' not
R31957:31958 Poly <> ::'('_x_','_x_')' not
R31961:31961 Poly <> ::'('_x_','_x_')' not
R31955:31956 Tactics <> l1 var
R31959:31960 Tactics <> l2 var
R32145:32149 Tactics <> split def
R32145:32149 Tactics <> split def
R32200:32201 Poly <> ::'['_']' not
R32213:32222 Tactics <> list_tl_eq thm
R32213:32222 Tactics <> list_tl_eq thm
R32213:32222 Tactics <> list_tl_eq thm
def 32522:32530 <> sillyfun1
R32537:32539 Coq.Init.Datatypes <> nat ind
R32544:32547 Basics <> bool ind
R32557:32563 Basics <> beq_nat def
R32565:32565 Tactics <> n var
R32589:32595 Basics <> beq_nat def
R32597:32597 Tactics <> n var
R32618:32622 Basics <> false constr
R32606:32609 Basics <> true constr
R32574:32577 Basics <> true constr
prf 32881:32900 <> sillyfun1_odd_FAILED
R32916:32918 Coq.Init.Datatypes <> nat ind
R32945:32953 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32960:32962 Coq.Init.Logic <> :type_scope:x_'='_x not
R32954:32957 Basics <> oddb def
R32959:32959 Tactics <> n var
R32963:32966 Basics <> true constr
R32938:32940 Coq.Init.Logic <> :type_scope:x_'='_x not
R32927:32935 Tactics <> sillyfun1 def
R32937:32937 Tactics <> n var
R32941:32944 Basics <> true constr
R32998:33006 Tactics <> sillyfun1 def
R33027:33033 Basics <> beq_nat def
R33027:33033 Basics <> beq_nat def
prf 33883:33895 <> sillyfun1_odd
R33911:33913 Coq.Init.Datatypes <> nat ind
R33940:33948 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33955:33957 Coq.Init.Logic <> :type_scope:x_'='_x not
R33949:33952 Basics <> oddb def
R33954:33954 Tactics <> n var
R33958:33961 Basics <> true constr
R33933:33935 Coq.Init.Logic <> :type_scope:x_'='_x not
R33922:33930 Tactics <> sillyfun1 def
R33932:33932 Tactics <> n var
R33936:33939 Basics <> true constr
R33993:34001 Tactics <> sillyfun1 def
R34022:34028 Basics <> beq_nat def
R34022:34028 Basics <> beq_nat def
R34277:34288 Tactics <> beq_nat_true thm
R34277:34288 Tactics <> beq_nat_true thm
R34575:34581 Basics <> beq_nat def
R34575:34581 Basics <> beq_nat def
R34641:34652 Tactics <> beq_nat_true thm
R34641:34652 Tactics <> beq_nat_true thm
prf 34816:34837 <> bool_fn_applied_thrice
R34859:34862 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34863:34866 Basics <> bool ind
R34855:34858 Basics <> bool ind
R34874:34877 Basics <> bool ind
R34894:34896 Coq.Init.Logic <> :type_scope:x_'='_x not
R34883:34883 Tactics <> f var
R34886:34886 Tactics <> f var
R34889:34889 Tactics <> f var
R34891:34891 Tactics <> b var
R34897:34897 Tactics <> f var
R34899:34899 Tactics <> b var
R34962:34965 Basics <> true constr
R34962:34965 Basics <> true constr
R35028:35032 Basics <> false constr
R35028:35032 Basics <> false constr
R35096:35100 Basics <> false constr
R35096:35100 Basics <> false constr
R35132:35135 Basics <> true constr
R35132:35135 Basics <> true constr
prf 37496:37506 <> beq_nat_sym
R37524:37526 Coq.Init.Datatypes <> nat ind
R37543:37545 Coq.Init.Logic <> :type_scope:x_'='_x not
R37532:37538 Basics <> beq_nat def
R37542:37542 Tactics <> m var
R37540:37540 Tactics <> n var
R37546:37552 Basics <> beq_nat def
R37556:37556 Tactics <> n var
R37554:37554 Tactics <> m var
prf 38097:38109 <> beq_nat_trans
R38147:38152 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38171:38176 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38188:38190 Coq.Init.Logic <> :type_scope:x_'='_x not
R38177:38183 Basics <> beq_nat def
R38187:38187 Tactics <> p var
R38185:38185 Tactics <> n var
R38191:38194 Basics <> true constr
R38164:38166 Coq.Init.Logic <> :type_scope:x_'='_x not
R38153:38159 Basics <> beq_nat def
R38163:38163 Tactics <> p var
R38161:38161 Tactics <> m var
R38167:38170 Basics <> true constr
R38140:38142 Coq.Init.Logic <> :type_scope:x_'='_x not
R38129:38135 Basics <> beq_nat def
R38139:38139 Tactics <> m var
R38137:38137 Tactics <> n var
R38143:38146 Basics <> true constr
R38235:38241 Basics <> beq_nat def
R38250:38261 Tactics <> beq_nat_true thm
R38250:38261 Tactics <> beq_nat_true thm
R38276:38287 Tactics <> beq_nat_true thm
R38276:38287 Tactics <> beq_nat_true thm
R38338:38349 Induction <> beq_nat_refl thm
R38338:38349 Induction <> beq_nat_refl thm
def 39062:39084 <> split_combine_statement
R39125:39128 Poly <> list ind
R39130:39130 Tactics <> X var
R39155:39158 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39180:39182 Coq.Init.Logic <> :type_scope:x_'='_x not
R39159:39163 Tactics <> split def
R39166:39172 Poly <> combine def
R39177:39178 Tactics <> l2 var
R39174:39175 Tactics <> l1 var
R39183:39183 Poly <> ::'('_x_','_x_')' not
R39186:39187 Poly <> ::'('_x_','_x_')' not
R39190:39190 Poly <> ::'('_x_','_x_')' not
R39184:39185 Tactics <> l1 var
R39188:39189 Tactics <> l2 var
R39143:39145 Coq.Init.Logic <> :type_scope:x_'='_x not
R39134:39139 Poly <> length def
R39141:39142 Tactics <> l1 var
R39146:39151 Poly <> length def
R39153:39154 Tactics <> l2 var
prf 39207:39219 <> split_combine
R39223:39245 Tactics <> split_combine_statement def
prf 39701:39715 <> filter_exercise
R39746:39749 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39750:39753 Basics <> bool ind
R39745:39745 Tactics <> X var
R39790:39790 Tactics <> X var
R39801:39804 Poly <> list ind
R39806:39806 Tactics <> X var
R39838:39846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39853:39855 Coq.Init.Logic <> :type_scope:x_'='_x not
R39847:39850 Tactics <> test var
R39852:39852 Tactics <> x var
R39856:39859 Basics <> true constr
R39828:39830 Coq.Init.Logic <> :type_scope:x_'='_x not
R39815:39820 Poly <> filter def
R39827:39827 Tactics <> l var
R39822:39825 Tactics <> test var
R39832:39835 Poly <> ::x_'::'_x not
R39831:39831 Tactics <> x var
R39836:39837 Tactics <> lf var
def 41012:41018 <> forallb
R41032:41033 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41034:41037 Basics <> bool ind
R41031:41031 Tactics <> X var
R41042:41045 Poly <> list ind
R41047:41047 Tactics <> X var
R41051:41054 Basics <> bool ind
R41069:41069 Tactics <> l var
R41082:41083 Poly <> ::'['_']' not
R41088:41091 Basics <> true constr
R41100:41101 Poly <> ::x_'::'_x not
R41117:41123 Tactics <> forallb def
R41125:41125 Tactics <> f var
R41151:41154 Basics <> andb def
R41162:41162 Tactics <> t var
R41157:41157 Tactics <> f var
R41186:41192 Tactics <> forallb def
R41200:41200 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41202:41202 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41204:41204 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41206:41206 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41208:41208 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41210:41210 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41194:41198 Basics <> evenb def
R41227:41233 Tactics <> forallb def
R41240:41240 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41246:41246 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41252:41252 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41241:41245 Basics <> false constr
R41247:41251 Basics <> false constr
R41235:41238 Basics <> negb def
def 41265:41271 <> existsb
R41285:41286 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41287:41290 Basics <> bool ind
R41284:41284 Tactics <> X var
R41295:41298 Poly <> list ind
R41300:41300 Tactics <> X var
R41303:41306 Basics <> bool ind
R41321:41321 Tactics <> l var
R41334:41335 Poly <> ::'['_']' not
R41340:41344 Basics <> false constr
R41353:41354 Poly <> ::x_'::'_x not
R41369:41375 Tactics <> existsb def
R41377:41377 Tactics <> f var
R41402:41404 Basics <> orb def
R41412:41412 Tactics <> t var
R41407:41407 Tactics <> f var
R41433:41439 Tactics <> existsb def
R41446:41446 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41448:41448 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41450:41450 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41452:41452 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41454:41454 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41456:41456 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41458:41458 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41441:41444 Basics <> oddb def
R41471:41477 Tactics <> existsb def
R41491:41491 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41496:41496 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41501:41501 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41507:41507 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41492:41495 Basics <> true constr
R41497:41500 Basics <> true constr
R41502:41506 Basics <> false constr
R41480:41483 Basics <> andb def
R41485:41488 Basics <> true constr
def 41523:41530 <> existsb'
R41543:41546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41547:41550 Basics <> bool ind
R41542:41542 Tactics <> X var
R41555:41558 Poly <> list ind
R41560:41560 Tactics <> X var
R41563:41566 Basics <> bool ind
R41573:41576 Basics <> negb def
R41579:41585 Tactics <> forallb def
R41608:41608 Tactics <> l var
R41597:41600 Basics <> negb def
R41602:41602 Tactics <> f var
R41604:41604 Tactics <> x var
R41622:41629 Tactics <> existsb' def
R41643:41643 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41648:41648 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41653:41653 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41659:41659 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41644:41647 Basics <> true constr
R41649:41652 Basics <> true constr
R41654:41658 Basics <> false constr
R41632:41635 Basics <> andb def
R41637:41640 Basics <> true constr
prf 41672:41690 <> existsb_eq_existsb'
R41713:41714 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41715:41718 Basics <> bool ind
R41712:41712 Tactics <> X var
R41723:41726 Poly <> list ind
R41728:41728 Tactics <> X var
R41745:41747 Coq.Init.Logic <> :type_scope:x_'='_x not
R41734:41740 Tactics <> existsb def
R41744:41744 Tactics <> l var
R41742:41742 Tactics <> f var
R41748:41755 Tactics <> existsb' def
R41759:41759 Tactics <> l var
R41757:41757 Tactics <> f var
R41849:41856 Tactics <> existsb' def
R41944:41951 Tactics <> existsb' def
