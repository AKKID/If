DIGEST 954f3a4e570c22f7bf77d7fba77b1179
FTactics
R690:693 Poly <> <> lib
R702:706 Basics <> evenb def
prf 983:988 <> silly1
R1010:1012 Coq.Init.Datatypes <> nat ind
R1026:1035 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1049:1057 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1063:1065 Coq.Init.Logic <> :type_scope:x_'='_x not
R1058:1058 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1060:1060 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1062:1062 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1059:1059 Tactics <> n var
R1061:1061 Tactics <> o var
R1066:1066 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1068:1068 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1070:1070 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1067:1067 Tactics <> m var
R1069:1069 Tactics <> p var
R1041:1043 Coq.Init.Logic <> :type_scope:x_'='_x not
R1036:1036 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1038:1038 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1040:1040 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1037:1037 Tactics <> n var
R1039:1039 Tactics <> o var
R1044:1044 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1046:1046 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1048:1048 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1045:1045 Tactics <> n var
R1047:1047 Tactics <> p var
R1022:1024 Coq.Init.Logic <> :type_scope:x_'='_x not
R1021:1021 Tactics <> n var
R1025:1025 Tactics <> m var
prf 1594:1599 <> silly2
R1621:1623 Coq.Init.Datatypes <> nat ind
R1637:1646 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1647:1647 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1690:1699 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1705:1707 Coq.Init.Logic <> :type_scope:x_'='_x not
R1700:1700 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1702:1702 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1704:1704 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1701:1701 Tactics <> n var
R1703:1703 Tactics <> o var
R1708:1708 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1710:1710 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1712:1712 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1709:1709 Tactics <> m var
R1711:1711 Tactics <> p var
R1662:1664 Coq.Init.Datatypes <> nat ind
R1673:1676 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1682:1684 Coq.Init.Logic <> :type_scope:x_'='_x not
R1677:1677 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1679:1679 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1681:1681 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1678:1678 Tactics <> q var
R1680:1680 Tactics <> o var
R1685:1685 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1687:1687 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1689:1689 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1686:1686 Tactics <> r var
R1688:1688 Tactics <> p var
R1669:1671 Coq.Init.Logic <> :type_scope:x_'='_x not
R1668:1668 Tactics <> q var
R1672:1672 Tactics <> r var
R1633:1635 Coq.Init.Logic <> :type_scope:x_'='_x not
R1632:1632 Tactics <> n var
R1636:1636 Tactics <> m var
prf 2223:2229 <> silly2a
R2247:2249 Coq.Init.Datatypes <> nat ind
R2271:2280 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2281:2281 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2328:2337 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2341:2343 Coq.Init.Logic <> :type_scope:x_'='_x not
R2338:2338 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2340:2340 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2339:2339 Tactics <> n var
R2344:2344 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2346:2346 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2345:2345 Tactics <> m var
R2296:2298 Coq.Init.Datatypes <> nat ind
R2315:2318 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2322:2324 Coq.Init.Logic <> :type_scope:x_'='_x not
R2319:2319 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2321:2321 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2320:2320 Tactics <> q var
R2325:2325 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2327:2327 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2326:2326 Tactics <> r var
R2307:2309 Coq.Init.Logic <> :type_scope:x_'='_x not
R2302:2302 Poly <> ::'('_x_','_x_')' not
R2304:2304 Poly <> ::'('_x_','_x_')' not
R2306:2306 Poly <> ::'('_x_','_x_')' not
R2303:2303 Tactics <> q var
R2305:2305 Tactics <> q var
R2310:2310 Poly <> ::'('_x_','_x_')' not
R2312:2312 Poly <> ::'('_x_','_x_')' not
R2314:2314 Poly <> ::'('_x_','_x_')' not
R2311:2311 Tactics <> r var
R2313:2313 Tactics <> r var
R2263:2265 Coq.Init.Logic <> :type_scope:x_'='_x not
R2258:2258 Poly <> ::'('_x_','_x_')' not
R2260:2260 Poly <> ::'('_x_','_x_')' not
R2262:2262 Poly <> ::'('_x_','_x_')' not
R2259:2259 Tactics <> n var
R2261:2261 Tactics <> n var
R2266:2266 Poly <> ::'('_x_','_x_')' not
R2268:2268 Poly <> ::'('_x_','_x_')' not
R2270:2270 Poly <> ::'('_x_','_x_')' not
R2267:2267 Tactics <> m var
R2269:2269 Tactics <> m var
prf 2529:2536 <> silly_ex
R2545:2545 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2591:2600 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2615:2623 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2630:2632 Coq.Init.Logic <> :type_scope:x_'='_x not
R2624:2627 Basics <> oddb def
R2633:2636 Basics <> true constr
R2608:2610 Coq.Init.Logic <> :type_scope:x_'='_x not
R2601:2605 Basics <> evenb def
R2611:2614 Basics <> true constr
R2570:2573 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2584:2586 Coq.Init.Logic <> :type_scope:x_'='_x not
R2574:2577 Basics <> oddb def
R2580:2580 Coq.Init.Datatypes <> S constr
R2582:2582 Tactics <> n var
R2587:2590 Basics <> true constr
R2563:2565 Coq.Init.Logic <> :type_scope:x_'='_x not
R2556:2560 Basics <> evenb def
R2562:2562 Tactics <> n var
R2566:2569 Basics <> true constr
prf 2921:2935 <> silly3_firsttry
R2951:2953 Coq.Init.Datatypes <> nat ind
R2980:2989 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3009:3011 Coq.Init.Logic <> :type_scope:x_'='_x not
R2990:2996 Basics <> beq_nat def
R2999:2999 Coq.Init.Datatypes <> S constr
R3002:3002 Coq.Init.Datatypes <> S constr
R3004:3004 Tactics <> n var
R3012:3015 Basics <> true constr
R2966:2968 Coq.Init.Logic <> :type_scope:x_'='_x not
R2962:2965 Basics <> true constr
R2969:2975 Basics <> beq_nat def
R2977:2977 Tactics <> n var
prf 3555:3567 <> rev_exercise1
R3586:3589 Poly <> list ind
R3591:3593 Coq.Init.Datatypes <> nat ind
R3612:3620 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3623:3625 Coq.Init.Logic <> :type_scope:x_'='_x not
R3621:3622 Tactics <> l' var
R3626:3628 Poly <> rev def
R3630:3630 Tactics <> l var
R3603:3605 Coq.Init.Logic <> :type_scope:x_'='_x not
R3602:3602 Tactics <> l var
R3606:3608 Poly <> rev def
R3610:3611 Tactics <> l' var
R3678:3680 Poly <> rev def
R3696:3709 Poly <> rev_involutive thm
R3696:3709 Poly <> rev_involutive thm
R3696:3709 Poly <> rev_involutive thm
def 4207:4222 <> trans_eq_example
R4248:4250 Coq.Init.Datatypes <> nat ind
R4272:4280 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4294:4302 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4308:4310 Coq.Init.Logic <> :type_scope:x_'='_x not
R4303:4303 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4305:4305 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4307:4307 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4304:4304 Tactics <> a var
R4306:4306 Tactics <> b var
R4311:4311 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4313:4313 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4315:4315 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4312:4312 Tactics <> e var
R4314:4314 Tactics <> f var
R4286:4288 Coq.Init.Logic <> :type_scope:x_'='_x not
R4281:4281 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4283:4283 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4285:4285 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4282:4282 Tactics <> c var
R4284:4284 Tactics <> d var
R4289:4289 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4291:4291 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4293:4293 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4290:4290 Tactics <> e var
R4292:4292 Tactics <> f var
R4264:4266 Coq.Init.Logic <> :type_scope:x_'='_x not
R4259:4259 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4261:4261 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4263:4263 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4260:4260 Tactics <> a var
R4262:4262 Tactics <> b var
R4267:4267 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4269:4269 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4271:4271 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4268:4268 Tactics <> c var
R4270:4270 Tactics <> d var
prf 4572:4579 <> trans_eq
R4608:4608 Tactics <> X var
R4619:4622 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4628:4631 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4633:4635 Coq.Init.Logic <> :type_scope:x_'='_x not
R4632:4632 Tactics <> n var
R4636:4636 Tactics <> o var
R4624:4626 Coq.Init.Logic <> :type_scope:x_'='_x not
R4623:4623 Tactics <> m var
R4627:4627 Tactics <> o var
R4615:4617 Coq.Init.Logic <> :type_scope:x_'='_x not
R4614:4614 Tactics <> n var
R4618:4618 Tactics <> m var
def 4891:4907 <> trans_eq_example'
R4933:4935 Coq.Init.Datatypes <> nat ind
R4957:4965 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4979:4987 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4993:4995 Coq.Init.Logic <> :type_scope:x_'='_x not
R4988:4988 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4990:4990 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4992:4992 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4989:4989 Tactics <> a var
R4991:4991 Tactics <> b var
R4996:4996 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4998:4998 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5000:5000 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4997:4997 Tactics <> e var
R4999:4999 Tactics <> f var
R4971:4973 Coq.Init.Logic <> :type_scope:x_'='_x not
R4966:4966 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4968:4968 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4970:4970 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4967:4967 Tactics <> c var
R4969:4969 Tactics <> d var
R4974:4974 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4976:4976 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4978:4978 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4975:4975 Tactics <> e var
R4977:4977 Tactics <> f var
R4949:4951 Coq.Init.Logic <> :type_scope:x_'='_x not
R4944:4944 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4946:4946 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4948:4948 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4945:4945 Tactics <> a var
R4947:4947 Tactics <> b var
R4952:4952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4954:4954 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4956:4956 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4953:4953 Tactics <> c var
R4955:4955 Tactics <> d var
R5471:5471 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5473:5473 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5475:5475 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5453:5460 Tactics <> trans_eq thm
R5471:5471 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5473:5473 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5475:5475 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5453:5460 Tactics <> trans_eq thm
def 5807:5823 <> trans_eq_exercise
R5845:5847 Coq.Init.Datatypes <> nat ind
R5872:5880 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5892:5900 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5901:5901 Coq.Init.Logic <> :type_scope:x_'='_x not
R5907:5911 Coq.Init.Logic <> :type_scope:x_'='_x not
R5922:5922 Coq.Init.Logic <> :type_scope:x_'='_x not
R5903:5905 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5902:5902 Tactics <> n var
R5906:5906 Tactics <> p var
R5912:5919 Basics <> minustwo def
R5921:5921 Tactics <> o var
R5881:5881 Coq.Init.Logic <> :type_scope:x_'='_x not
R5887:5890 Coq.Init.Logic <> :type_scope:x_'='_x not
R5883:5885 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5882:5882 Tactics <> n var
R5886:5886 Tactics <> p var
R5891:5891 Tactics <> m var
R5857:5860 Coq.Init.Logic <> :type_scope:x_'='_x not
R5871:5871 Coq.Init.Logic <> :type_scope:x_'='_x not
R5856:5856 Tactics <> m var
R5861:5868 Basics <> minustwo def
R5870:5870 Tactics <> o var
prf 7485:7495 <> S_injective
R7513:7515 Coq.Init.Datatypes <> nat ind
R7530:7535 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7537:7539 Coq.Init.Logic <> :type_scope:x_'='_x not
R7536:7536 Tactics <> n var
R7540:7540 Tactics <> m var
R7524:7526 Coq.Init.Logic <> :type_scope:x_'='_x not
R7521:7521 Coq.Init.Datatypes <> S constr
R7523:7523 Tactics <> n var
R7527:7527 Coq.Init.Datatypes <> S constr
R7529:7529 Tactics <> m var
prf 8035:8047 <> inversion_ex1
R8067:8069 Coq.Init.Datatypes <> nat ind
R8090:8095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8099:8101 Coq.Init.Logic <> :type_scope:x_'='_x not
R8096:8096 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8098:8098 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8097:8097 Tactics <> n var
R8102:8102 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8104:8104 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8103:8103 Tactics <> m var
R8081:8083 Coq.Init.Logic <> :type_scope:x_'='_x not
R8075:8075 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8077:8078 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8080:8080 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8076:8076 Tactics <> n var
R8079:8079 Tactics <> m var
R8084:8084 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8086:8087 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8089:8089 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8085:8085 Tactics <> o var
R8088:8088 Tactics <> o var
prf 8262:8274 <> inversion_ex2
R8292:8294 Coq.Init.Datatypes <> nat ind
R8309:8314 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8316:8318 Coq.Init.Logic <> :type_scope:x_'='_x not
R8315:8315 Tactics <> n var
R8319:8319 Tactics <> m var
R8303:8305 Coq.Init.Logic <> :type_scope:x_'='_x not
R8300:8300 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8302:8302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8301:8301 Tactics <> n var
R8306:8306 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8308:8308 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8307:8307 Tactics <> m var
def 8441:8453 <> inversion_ex3
R8484:8484 Tactics <> X var
R8494:8497 Poly <> list ind
R8499:8499 Tactics <> X var
R8525:8530 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8546:8551 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8553:8555 Coq.Init.Logic <> :type_scope:x_'='_x not
R8552:8552 Tactics <> x var
R8556:8556 Tactics <> y var
R8537:8539 Coq.Init.Logic <> :type_scope:x_'='_x not
R8532:8535 Poly <> ::x_'::'_x not
R8531:8531 Tactics <> y var
R8536:8536 Tactics <> l var
R8541:8544 Poly <> ::x_'::'_x not
R8540:8540 Tactics <> x var
R8545:8545 Tactics <> j var
R8516:8518 Coq.Init.Logic <> :type_scope:x_'='_x not
R8506:8509 Poly <> ::x_'::'_x not
R8505:8505 Tactics <> x var
R8511:8514 Poly <> ::x_'::'_x not
R8510:8510 Tactics <> y var
R8515:8515 Tactics <> l var
R8520:8523 Poly <> ::x_'::'_x not
R8519:8519 Tactics <> z var
R8524:8524 Tactics <> j var
prf 8861:8871 <> beq_nat_0_l
R8906:8909 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8911:8913 Coq.Init.Logic <> :type_scope:x_'='_x not
R8910:8910 Tactics <> n var
R8899:8901 Coq.Init.Logic <> :type_scope:x_'='_x not
R8888:8894 Basics <> beq_nat def
R8898:8898 Tactics <> n var
R8902:8905 Basics <> true constr
prf 9821:9833 <> inversion_ex4
R9849:9851 Coq.Init.Datatypes <> nat ind
R9864:9869 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9875:9877 Coq.Init.Logic <> :type_scope:x_'='_x not
R9871:9873 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9860:9862 Coq.Init.Logic <> :type_scope:x_'='_x not
R9857:9857 Coq.Init.Datatypes <> S constr
R9859:9859 Tactics <> n var
R9863:9863 Coq.Init.Datatypes <> O constr
prf 9939:9951 <> inversion_ex5
R9969:9971 Coq.Init.Datatypes <> nat ind
R9989:9994 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9998:10000 Coq.Init.Logic <> :type_scope:x_'='_x not
R9995:9995 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9997:9997 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9996:9996 Tactics <> n var
R10001:10001 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10003:10003 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10002:10002 Tactics <> m var
R9982:9984 Coq.Init.Logic <> :type_scope:x_'='_x not
R9977:9981 Basics <> false constr
R9985:9988 Basics <> true constr
def 10515:10527 <> inversion_ex6
R10584:10584 Tactics <> X var
R10594:10597 Poly <> list ind
R10599:10599 Tactics <> X var
R10621:10626 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10642:10647 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10649:10651 Coq.Init.Logic <> :type_scope:x_'='_x not
R10648:10648 Tactics <> x var
R10652:10652 Tactics <> z var
R10633:10635 Coq.Init.Logic <> :type_scope:x_'='_x not
R10628:10631 Poly <> ::x_'::'_x not
R10627:10627 Tactics <> y var
R10632:10632 Tactics <> l var
R10637:10640 Poly <> ::x_'::'_x not
R10636:10636 Tactics <> z var
R10641:10641 Tactics <> j var
R10616:10618 Coq.Init.Logic <> :type_scope:x_'='_x not
R10606:10609 Poly <> ::x_'::'_x not
R10605:10605 Tactics <> x var
R10611:10614 Poly <> ::x_'::'_x not
R10610:10610 Tactics <> y var
R10615:10615 Tactics <> l var
R10619:10620 Poly <> ::'['_']' not
prf 11830:11836 <> f_equal
R11865:11868 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11869:11869 Tactics <> B var
R11864:11864 Tactics <> A var
R11878:11878 Tactics <> A var
R11889:11892 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11896:11898 Coq.Init.Logic <> :type_scope:x_'='_x not
R11893:11893 Tactics <> f var
R11895:11895 Tactics <> x var
R11899:11899 Tactics <> f var
R11901:11901 Tactics <> y var
R11885:11887 Coq.Init.Logic <> :type_scope:x_'='_x not
R11884:11884 Tactics <> x var
R11888:11888 Tactics <> y var
prf 12404:12408 <> S_inj
R12426:12428 Coq.Init.Datatypes <> nat ind
R12436:12439 Basics <> bool ind
R12471:12480 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12492:12494 Coq.Init.Logic <> :type_scope:x_'='_x not
R12481:12487 Basics <> beq_nat def
R12491:12491 Tactics <> m var
R12489:12489 Tactics <> n var
R12495:12495 Tactics <> b var
R12467:12469 Coq.Init.Logic <> :type_scope:x_'='_x not
R12448:12454 Basics <> beq_nat def
R12463:12463 Coq.Init.Datatypes <> S constr
R12465:12465 Tactics <> m var
R12457:12457 Coq.Init.Datatypes <> S constr
R12459:12459 Tactics <> n var
R12470:12470 Tactics <> b var
prf 13333:13339 <> silly3'
R13355:13357 Coq.Init.Datatypes <> nat ind
R13363:13363 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13412:13418 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13437:13443 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13448:13450 Coq.Init.Logic <> :type_scope:x_'='_x not
R13444:13447 Basics <> true constr
R13451:13457 Basics <> beq_nat def
R13460:13460 Coq.Init.Datatypes <> S constr
R13463:13463 Coq.Init.Datatypes <> S constr
R13465:13465 Tactics <> n var
R13423:13425 Coq.Init.Logic <> :type_scope:x_'='_x not
R13419:13422 Basics <> true constr
R13426:13432 Basics <> beq_nat def
R13434:13434 Tactics <> n var
R13382:13385 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13405:13407 Coq.Init.Logic <> :type_scope:x_'='_x not
R13386:13392 Basics <> beq_nat def
R13395:13395 Coq.Init.Datatypes <> S constr
R13398:13398 Coq.Init.Datatypes <> S constr
R13400:13400 Tactics <> n var
R13408:13411 Basics <> true constr
R13375:13377 Coq.Init.Logic <> :type_scope:x_'='_x not
R13364:13370 Basics <> beq_nat def
R13372:13372 Tactics <> n var
R13378:13381 Basics <> true constr
prf 14344:14361 <> plus_n_n_injective
R14395:14403 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14405:14407 Coq.Init.Logic <> :type_scope:x_'='_x not
R14404:14404 Tactics <> n var
R14408:14408 Tactics <> m var
R14387:14389 Coq.Init.Logic <> :type_scope:x_'='_x not
R14383:14385 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14382:14382 Tactics <> n var
R14386:14386 Tactics <> n var
R14391:14393 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14390:14390 Tactics <> m var
R14394:14394 Tactics <> m var
R14606:14606 Coq.Init.Datatypes <> S constr
R14615:14621 Tactics <> f_equal thm
R14615:14621 Tactics <> f_equal thm
R14681:14689 Induction <> plus_n_Sm thm
R14681:14689 Induction <> plus_n_Sm thm
R14681:14689 Induction <> plus_n_Sm thm
R14709:14717 Induction <> plus_n_Sm thm
R14709:14717 Induction <> plus_n_Sm thm
R14709:14717 Induction <> plus_n_Sm thm
prf 15671:15693 <> double_injective_FAILED
R15733:15741 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15743:15745 Coq.Init.Logic <> :type_scope:x_'='_x not
R15742:15742 Tactics <> n var
R15746:15746 Tactics <> m var
R15722:15724 Coq.Init.Logic <> :type_scope:x_'='_x not
R15714:15719 Induction <> double def
R15721:15721 Tactics <> n var
R15725:15730 Induction <> double def
R15732:15732 Tactics <> m var
R16026:16032 Tactics <> f_equal thm
R16026:16032 Tactics <> f_equal thm
prf 18268:18283 <> double_injective
R18323:18331 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18333:18335 Coq.Init.Logic <> :type_scope:x_'='_x not
R18332:18332 Tactics <> n var
R18336:18336 Tactics <> m var
R18312:18314 Coq.Init.Logic <> :type_scope:x_'='_x not
R18304:18309 Induction <> double def
R18311:18311 Tactics <> n var
R18315:18320 Induction <> double def
R18322:18322 Tactics <> m var
R19209:19215 Tactics <> f_equal thm
R19209:19215 Tactics <> f_equal thm
prf 20116:20127 <> beq_nat_true
R20165:20168 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20170:20172 Coq.Init.Logic <> :type_scope:x_'='_x not
R20169:20169 Tactics <> n var
R20173:20173 Tactics <> m var
R20158:20160 Coq.Init.Logic <> :type_scope:x_'='_x not
R20147:20153 Basics <> beq_nat def
R20157:20157 Tactics <> m var
R20155:20155 Tactics <> n var
R20161:20164 Basics <> true constr
R20348:20354 Tactics <> f_equal thm
R20348:20354 Tactics <> f_equal thm
prf 20929:20957 <> double_injective_take2_FAILED
R20997:21005 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21007:21009 Coq.Init.Logic <> :type_scope:x_'='_x not
R21006:21006 Tactics <> n var
R21010:21010 Tactics <> m var
R20986:20988 Coq.Init.Logic <> :type_scope:x_'='_x not
R20978:20983 Induction <> double def
R20985:20985 Tactics <> n var
R20989:20994 Induction <> double def
R20996:20996 Tactics <> m var
R21290:21296 Tactics <> f_equal thm
R21290:21296 Tactics <> f_equal thm
prf 22232:22253 <> double_injective_take2
R22293:22301 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22303:22305 Coq.Init.Logic <> :type_scope:x_'='_x not
R22302:22302 Tactics <> n var
R22306:22306 Tactics <> m var
R22282:22284 Coq.Init.Logic <> :type_scope:x_'='_x not
R22274:22279 Induction <> double def
R22281:22281 Tactics <> n var
R22285:22290 Induction <> double def
R22292:22292 Tactics <> m var
R22769:22775 Tactics <> f_equal thm
R22769:22775 Tactics <> f_equal thm
prf 24975:24985 <> beq_id_true
R25020:25023 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25025:25027 Coq.Init.Logic <> :type_scope:x_'='_x not
R25024:25024 Tactics <> x var
R25028:25028 Tactics <> y var
R25013:25015 Coq.Init.Logic <> :type_scope:x_'='_x not
R25003:25008 Lists <> beq_id def
R25012:25012 Tactics <> y var
R25010:25010 Tactics <> x var
R25016:25019 Basics <> true constr
R25089:25091 Coq.Init.Logic <> :type_scope:x_'='_x not
R25089:25091 Coq.Init.Logic <> :type_scope:x_'='_x not
R25104:25115 Tactics <> beq_nat_true thm
R25104:25115 Tactics <> beq_nat_true thm
prf 25273:25292 <> nth_error_after_last
R25307:25309 Coq.Init.Datatypes <> nat ind
R25328:25331 Poly <> list ind
R25333:25333 Tactics <> X var
R25354:25362 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25376:25378 Coq.Init.Logic <> :type_scope:x_'='_x not
R25363:25371 Poly <> nth_error def
R25375:25375 Tactics <> n var
R25373:25373 Tactics <> l var
R25379:25382 Poly <> None constr
R25350:25352 Coq.Init.Logic <> :type_scope:x_'='_x not
R25342:25347 Poly <> length def
R25349:25349 Tactics <> l var
R25353:25353 Tactics <> n var
def 25935:25940 <> square
R25948:25950 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25947:25947 Tactics <> n var
R25951:25951 Tactics <> n var
prf 26022:26032 <> square_mult
R26062:26064 Coq.Init.Logic <> :type_scope:x_'='_x not
R26048:26053 Tactics <> square def
R26057:26059 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26056:26056 Tactics <> n var
R26060:26060 Tactics <> m var
R26073:26075 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26065:26070 Tactics <> square def
R26072:26072 Tactics <> n var
R26076:26081 Tactics <> square def
R26083:26083 Tactics <> m var
R26400:26405 Tactics <> square def
R26730:26739 Induction <> mult_assoc thm
R26730:26739 Induction <> mult_assoc thm
R26730:26739 Induction <> mult_assoc thm
R26765:26767 Coq.Init.Logic <> :type_scope:x_'='_x not
R26761:26763 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26757:26759 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26773:26775 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26769:26771 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26765:26767 Coq.Init.Logic <> :type_scope:x_'='_x not
R26761:26763 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26757:26759 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26773:26775 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26769:26771 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26792:26800 Induction <> mult_comm thm
R26792:26800 Induction <> mult_comm thm
R26792:26800 Induction <> mult_comm thm
R26809:26818 Induction <> mult_assoc thm
R26809:26818 Induction <> mult_assoc thm
R26844:26853 Induction <> mult_assoc thm
R26844:26853 Induction <> mult_assoc thm
R26844:26853 Induction <> mult_assoc thm
def 27241:27243 <> foo
R27249:27251 Coq.Init.Datatypes <> nat ind
prf 27464:27475 <> silly_fact_1
R27498:27500 Coq.Init.Logic <> :type_scope:x_'='_x not
R27494:27496 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27489:27491 Tactics <> foo def
R27493:27493 Tactics <> m var
R27512:27514 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27501:27503 Tactics <> foo def
R27507:27509 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27506:27506 Tactics <> m var
def 27745:27747 <> bar
R27762:27762 Tactics <> x var
R27773:27773 Coq.Init.Datatypes <> O constr
R27784:27784 Coq.Init.Datatypes <> S constr
prf 27858:27876 <> silly_fact_2_FAILED
R27899:27901 Coq.Init.Logic <> :type_scope:x_'='_x not
R27895:27897 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27890:27892 Tactics <> bar def
R27894:27894 Tactics <> m var
R27913:27915 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27902:27904 Tactics <> bar def
R27908:27910 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27907:27907 Tactics <> m var
prf 28907:28918 <> silly_fact_2
R28941:28943 Coq.Init.Logic <> :type_scope:x_'='_x not
R28937:28939 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28932:28934 Tactics <> bar def
R28936:28936 Tactics <> m var
R28955:28957 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28944:28946 Tactics <> bar def
R28950:28952 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28949:28949 Tactics <> m var
prf 29308:29320 <> silly_fact_2'
R29343:29345 Coq.Init.Logic <> :type_scope:x_'='_x not
R29339:29341 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29334:29336 Tactics <> bar def
R29338:29338 Tactics <> m var
R29357:29359 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29346:29348 Tactics <> bar def
R29352:29354 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29351:29351 Tactics <> m var
R29391:29393 Tactics <> bar def
def 30037:30044 <> sillyfun
R30051:30053 Coq.Init.Datatypes <> nat ind
R30058:30061 Basics <> bool ind
R30071:30077 Basics <> beq_nat def
R30079:30079 Tactics <> n var
R30104:30110 Basics <> beq_nat def
R30112:30112 Tactics <> n var
R30134:30138 Basics <> false constr
R30121:30125 Basics <> false constr
R30088:30092 Basics <> false constr
prf 30150:30163 <> sillyfun_false
R30179:30181 Coq.Init.Datatypes <> nat ind
R30197:30199 Coq.Init.Logic <> :type_scope:x_'='_x not
R30187:30194 Tactics <> sillyfun def
R30196:30196 Tactics <> n var
R30200:30204 Basics <> false constr
R30233:30240 Tactics <> sillyfun def
R30255:30261 Basics <> beq_nat def
R30255:30261 Basics <> beq_nat def
R30355:30361 Basics <> beq_nat def
R30355:30361 Basics <> beq_nat def
def 31252:31256 <> split
R31276:31279 Poly <> list ind
R31283:31283 Poly <> :type_scope:x_'*'_x not
R31282:31282 Tactics <> X var
R31284:31284 Tactics <> Y var
R31305:31305 Poly <> :type_scope:x_'*'_x not
R31312:31316 Poly <> :type_scope:x_'*'_x not
R31323:31323 Poly <> :type_scope:x_'*'_x not
R31306:31309 Poly <> list ind
R31311:31311 Tactics <> X var
R31317:31320 Poly <> list ind
R31322:31322 Tactics <> Y var
R31336:31336 Tactics <> l var
R31347:31348 Poly <> ::'['_']' not
R31353:31353 Poly <> ::'('_x_','_x_')' not
R31356:31357 Poly <> ::'('_x_','_x_')' not
R31360:31360 Poly <> ::'('_x_','_x_')' not
R31354:31355 Poly <> ::'['_']' not
R31358:31359 Poly <> ::'['_']' not
R31372:31375 Poly <> ::x_'::'_x not
R31366:31366 Poly <> ::'('_x_','_x_')' not
R31368:31369 Poly <> ::'('_x_','_x_')' not
R31371:31371 Poly <> ::'('_x_','_x_')' not
R31393:31397 Tactics <> split def
R31414:31414 Poly <> ::'('_x_','_x_')' not
R31417:31418 Poly <> ::'('_x_','_x_')' not
R31421:31421 Poly <> ::'('_x_','_x_')' not
R31426:31426 Poly <> ::'('_x_','_x_')' not
R31434:31435 Poly <> ::'('_x_','_x_')' not
R31443:31443 Poly <> ::'('_x_','_x_')' not
R31428:31431 Poly <> ::x_'::'_x not
R31437:31440 Poly <> ::x_'::'_x not
prf 31552:31561 <> list_tl_eq
R31583:31583 Tactics <> X var
R31590:31593 Poly <> list ind
R31595:31595 Tactics <> X var
R31616:31620 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R31601:31601 Coq.Init.Logic <> :type_scope:x_'='_x not
R31606:31610 Coq.Init.Logic <> :type_scope:x_'='_x not
R31615:31615 Coq.Init.Logic <> :type_scope:x_'='_x not
R31603:31604 Poly <> ::x_'::'_x not
R31602:31602 Tactics <> x var
R31605:31605 Tactics <> l var
R31612:31613 Poly <> ::x_'::'_x not
R31611:31611 Tactics <> x var
R31614:31614 Tactics <> r var
R31622:31624 Coq.Init.Logic <> :type_scope:x_'='_x not
R31621:31621 Tactics <> l var
R31625:31625 Tactics <> r var
R31890:31895 Coq.Setoids.Setoid <> <> lib
prf 31906:31918 <> combine_split
R31938:31941 Poly <> list ind
R31945:31947 Poly <> :type_scope:x_'*'_x not
R31944:31944 Tactics <> X var
R31948:31948 Tactics <> Y var
R31979:31984 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31998:32000 Coq.Init.Logic <> :type_scope:x_'='_x not
R31985:31991 Poly <> combine def
R31996:31997 Tactics <> l2 var
R31993:31994 Tactics <> l1 var
R32001:32001 Tactics <> l var
R31968:31970 Coq.Init.Logic <> :type_scope:x_'='_x not
R31961:31965 Tactics <> split def
R31967:31967 Tactics <> l var
R31971:31971 Poly <> ::'('_x_','_x_')' not
R31974:31975 Poly <> ::'('_x_','_x_')' not
R31978:31978 Poly <> ::'('_x_','_x_')' not
R31972:31973 Tactics <> l1 var
R31976:31977 Tactics <> l2 var
R32162:32166 Tactics <> split def
R32162:32166 Tactics <> split def
R32217:32218 Poly <> ::'['_']' not
R32230:32239 Tactics <> list_tl_eq thm
R32230:32239 Tactics <> list_tl_eq thm
R32230:32239 Tactics <> list_tl_eq thm
def 32539:32547 <> sillyfun1
R32554:32556 Coq.Init.Datatypes <> nat ind
R32561:32564 Basics <> bool ind
R32574:32580 Basics <> beq_nat def
R32582:32582 Tactics <> n var
R32606:32612 Basics <> beq_nat def
R32614:32614 Tactics <> n var
R32635:32639 Basics <> false constr
R32623:32626 Basics <> true constr
R32591:32594 Basics <> true constr
prf 32898:32917 <> sillyfun1_odd_FAILED
R32933:32935 Coq.Init.Datatypes <> nat ind
R32962:32970 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32977:32979 Coq.Init.Logic <> :type_scope:x_'='_x not
R32971:32974 Basics <> oddb def
R32976:32976 Tactics <> n var
R32980:32983 Basics <> true constr
R32955:32957 Coq.Init.Logic <> :type_scope:x_'='_x not
R32944:32952 Tactics <> sillyfun1 def
R32954:32954 Tactics <> n var
R32958:32961 Basics <> true constr
R33015:33023 Tactics <> sillyfun1 def
R33044:33050 Basics <> beq_nat def
R33044:33050 Basics <> beq_nat def
prf 33900:33912 <> sillyfun1_odd
R33928:33930 Coq.Init.Datatypes <> nat ind
R33957:33965 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33972:33974 Coq.Init.Logic <> :type_scope:x_'='_x not
R33966:33969 Basics <> oddb def
R33971:33971 Tactics <> n var
R33975:33978 Basics <> true constr
R33950:33952 Coq.Init.Logic <> :type_scope:x_'='_x not
R33939:33947 Tactics <> sillyfun1 def
R33949:33949 Tactics <> n var
R33953:33956 Basics <> true constr
R34010:34018 Tactics <> sillyfun1 def
R34039:34045 Basics <> beq_nat def
R34039:34045 Basics <> beq_nat def
R34294:34305 Tactics <> beq_nat_true thm
R34294:34305 Tactics <> beq_nat_true thm
R34592:34598 Basics <> beq_nat def
R34592:34598 Basics <> beq_nat def
R34658:34669 Tactics <> beq_nat_true thm
R34658:34669 Tactics <> beq_nat_true thm
prf 34833:34854 <> bool_fn_applied_thrice
R34876:34879 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34880:34883 Basics <> bool ind
R34872:34875 Basics <> bool ind
R34891:34894 Basics <> bool ind
R34911:34913 Coq.Init.Logic <> :type_scope:x_'='_x not
R34900:34900 Tactics <> f var
R34903:34903 Tactics <> f var
R34906:34906 Tactics <> f var
R34908:34908 Tactics <> b var
R34914:34914 Tactics <> f var
R34916:34916 Tactics <> b var
R34979:34982 Basics <> true constr
R34979:34982 Basics <> true constr
R35045:35049 Basics <> false constr
R35045:35049 Basics <> false constr
R35113:35117 Basics <> false constr
R35113:35117 Basics <> false constr
R35149:35152 Basics <> true constr
R35149:35152 Basics <> true constr
prf 37513:37523 <> beq_nat_sym
R37541:37543 Coq.Init.Datatypes <> nat ind
R37560:37562 Coq.Init.Logic <> :type_scope:x_'='_x not
R37549:37555 Basics <> beq_nat def
R37559:37559 Tactics <> m var
R37557:37557 Tactics <> n var
R37563:37569 Basics <> beq_nat def
R37573:37573 Tactics <> n var
R37571:37571 Tactics <> m var
prf 38114:38126 <> beq_nat_trans
R38164:38169 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38188:38193 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38205:38207 Coq.Init.Logic <> :type_scope:x_'='_x not
R38194:38200 Basics <> beq_nat def
R38204:38204 Tactics <> p var
R38202:38202 Tactics <> n var
R38208:38211 Basics <> true constr
R38181:38183 Coq.Init.Logic <> :type_scope:x_'='_x not
R38170:38176 Basics <> beq_nat def
R38180:38180 Tactics <> p var
R38178:38178 Tactics <> m var
R38184:38187 Basics <> true constr
R38157:38159 Coq.Init.Logic <> :type_scope:x_'='_x not
R38146:38152 Basics <> beq_nat def
R38156:38156 Tactics <> m var
R38154:38154 Tactics <> n var
R38160:38163 Basics <> true constr
R38252:38258 Basics <> beq_nat def
R38267:38278 Tactics <> beq_nat_true thm
R38267:38278 Tactics <> beq_nat_true thm
R38293:38304 Tactics <> beq_nat_true thm
R38293:38304 Tactics <> beq_nat_true thm
R38355:38366 Induction <> beq_nat_refl thm
R38355:38366 Induction <> beq_nat_refl thm
def 39079:39101 <> split_combine_statement
R39142:39145 Poly <> list ind
R39147:39147 Tactics <> X var
R39172:39175 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39197:39199 Coq.Init.Logic <> :type_scope:x_'='_x not
R39176:39180 Tactics <> split def
R39183:39189 Poly <> combine def
R39194:39195 Tactics <> l2 var
R39191:39192 Tactics <> l1 var
R39200:39200 Poly <> ::'('_x_','_x_')' not
R39203:39204 Poly <> ::'('_x_','_x_')' not
R39207:39207 Poly <> ::'('_x_','_x_')' not
R39201:39202 Tactics <> l1 var
R39205:39206 Tactics <> l2 var
R39160:39162 Coq.Init.Logic <> :type_scope:x_'='_x not
R39151:39156 Poly <> length def
R39158:39159 Tactics <> l1 var
R39163:39168 Poly <> length def
R39170:39171 Tactics <> l2 var
prf 39224:39236 <> split_combine
R39240:39262 Tactics <> split_combine_statement def
prf 39718:39732 <> filter_exercise
R39763:39766 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39767:39770 Basics <> bool ind
R39762:39762 Tactics <> X var
R39807:39807 Tactics <> X var
R39818:39821 Poly <> list ind
R39823:39823 Tactics <> X var
R39855:39863 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39870:39872 Coq.Init.Logic <> :type_scope:x_'='_x not
R39864:39867 Tactics <> test var
R39869:39869 Tactics <> x var
R39873:39876 Basics <> true constr
R39845:39847 Coq.Init.Logic <> :type_scope:x_'='_x not
R39832:39837 Poly <> filter def
R39844:39844 Tactics <> l var
R39839:39842 Tactics <> test var
R39849:39852 Poly <> ::x_'::'_x not
R39848:39848 Tactics <> x var
R39853:39854 Tactics <> lf var
def 41029:41035 <> forallb
R41049:41050 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41051:41054 Basics <> bool ind
R41048:41048 Tactics <> X var
R41059:41062 Poly <> list ind
R41064:41064 Tactics <> X var
R41068:41071 Basics <> bool ind
R41086:41086 Tactics <> l var
R41099:41100 Poly <> ::'['_']' not
R41105:41108 Basics <> true constr
R41117:41118 Poly <> ::x_'::'_x not
R41134:41140 Tactics <> forallb def
R41142:41142 Tactics <> f var
R41168:41171 Basics <> andb def
R41179:41179 Tactics <> t var
R41174:41174 Tactics <> f var
R41203:41209 Tactics <> forallb def
R41217:41217 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41219:41219 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41221:41221 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41223:41223 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41225:41225 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41227:41227 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41211:41215 Basics <> evenb def
R41244:41250 Tactics <> forallb def
R41257:41257 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41263:41263 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41269:41269 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41258:41262 Basics <> false constr
R41264:41268 Basics <> false constr
R41252:41255 Basics <> negb def
def 41282:41288 <> existsb
R41302:41303 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41304:41307 Basics <> bool ind
R41301:41301 Tactics <> X var
R41312:41315 Poly <> list ind
R41317:41317 Tactics <> X var
R41320:41323 Basics <> bool ind
R41338:41338 Tactics <> l var
R41351:41352 Poly <> ::'['_']' not
R41357:41361 Basics <> false constr
R41370:41371 Poly <> ::x_'::'_x not
R41386:41392 Tactics <> existsb def
R41394:41394 Tactics <> f var
R41419:41421 Basics <> orb def
R41429:41429 Tactics <> t var
R41424:41424 Tactics <> f var
R41450:41456 Tactics <> existsb def
R41463:41463 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41465:41465 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41467:41467 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41469:41469 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41471:41471 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41473:41473 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41475:41475 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41458:41461 Basics <> oddb def
R41488:41494 Tactics <> existsb def
R41508:41508 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41513:41513 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41518:41518 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41524:41524 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41509:41512 Basics <> true constr
R41514:41517 Basics <> true constr
R41519:41523 Basics <> false constr
R41497:41500 Basics <> andb def
R41502:41505 Basics <> true constr
def 41540:41547 <> existsb'
R41560:41563 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41564:41567 Basics <> bool ind
R41559:41559 Tactics <> X var
R41572:41575 Poly <> list ind
R41577:41577 Tactics <> X var
R41580:41583 Basics <> bool ind
R41590:41593 Basics <> negb def
R41596:41602 Tactics <> forallb def
R41625:41625 Tactics <> l var
R41614:41617 Basics <> negb def
R41619:41619 Tactics <> f var
R41621:41621 Tactics <> x var
R41639:41646 Tactics <> existsb' def
R41660:41660 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41665:41665 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41670:41670 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41676:41676 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41661:41664 Basics <> true constr
R41666:41669 Basics <> true constr
R41671:41675 Basics <> false constr
R41649:41652 Basics <> andb def
R41654:41657 Basics <> true constr
prf 41689:41707 <> existsb_eq_existsb'
R41730:41731 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41732:41735 Basics <> bool ind
R41729:41729 Tactics <> X var
R41740:41743 Poly <> list ind
R41745:41745 Tactics <> X var
R41762:41764 Coq.Init.Logic <> :type_scope:x_'='_x not
R41751:41757 Tactics <> existsb def
R41761:41761 Tactics <> l var
R41759:41759 Tactics <> f var
R41765:41772 Tactics <> existsb' def
R41776:41776 Tactics <> l var
R41774:41774 Tactics <> f var
R41866:41873 Tactics <> existsb' def
R41961:41968 Tactics <> existsb' def
