DIGEST 55cb142ab928bab79320f158b346db56
FPoly
R313:317 Lists <> <> lib
R326:330 Basics <> evenb def
ind 1214:1221 <> boollist
constr 1237:1244 <> bool_nil
constr 1261:1269 <> bool_cons
R1248:1255 Poly <> boollist ind
R1277:1280 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1289:1292 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1293:1300 Poly <> boollist ind
R1281:1288 Poly <> boollist ind
R1273:1276 Basics <> bool ind
ind 1774:1777 <> list
constr 1802:1804 <> nil
constr 1819:1822 <> cons
R1808:1811 Poly <> list ind
R1813:1813 Poly <> X var
R1827:1830 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1837:1840 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1841:1844 Poly <> list ind
R1846:1846 Poly <> X var
R1831:1834 Poly <> list ind
R1836:1836 Poly <> X var
R1826:1826 Poly <> X var
R2737:2740 Poly <> list ind
R3108:3110 Poly <> nil constr
R3112:3114 Coq.Init.Datatypes <> nat ind
R3328:3331 Poly <> cons constr
R3340:3342 Poly <> nil constr
R3344:3346 Coq.Init.Datatypes <> nat ind
R3333:3335 Coq.Init.Datatypes <> nat ind
R3737:3739 Poly <> nil constr
R4007:4010 Poly <> cons constr
R4076:4079 Poly <> cons constr
R4081:4083 Coq.Init.Datatypes <> nat ind
R4706:4709 Poly <> cons constr
R4718:4721 Poly <> cons constr
R4730:4732 Poly <> nil constr
R4734:4736 Coq.Init.Datatypes <> nat ind
R4723:4725 Coq.Init.Datatypes <> nat ind
R4711:4713 Coq.Init.Datatypes <> nat ind
def 5089:5094 <> repeat
R5112:5112 Poly <> X var
R5124:5126 Coq.Init.Datatypes <> nat ind
R5131:5134 Poly <> list ind
R5136:5136 Poly <> X var
R5149:5153 Poly <> count var
R5169:5171 Poly <> nil constr
R5173:5173 Poly <> X var
R5179:5179 Coq.Init.Datatypes <> S constr
R5191:5194 Poly <> cons constr
R5201:5206 Poly <> repeat def
R5210:5210 Poly <> x var
R5208:5208 Poly <> X var
R5198:5198 Poly <> x var
R5196:5196 Poly <> X var
def 5377:5388 <> test_repeat1
R5408:5410 Coq.Init.Logic <> :type_scope:x_'='_x not
R5394:5399 Poly <> repeat def
R5401:5403 Coq.Init.Datatypes <> nat ind
R5411:5414 Poly <> cons constr
R5423:5426 Poly <> cons constr
R5435:5437 Poly <> nil constr
R5439:5441 Coq.Init.Datatypes <> nat ind
R5428:5430 Coq.Init.Datatypes <> nat ind
R5416:5418 Coq.Init.Datatypes <> nat ind
def 5601:5612 <> test_repeat2
R5637:5639 Coq.Init.Logic <> :type_scope:x_'='_x not
R5618:5623 Poly <> repeat def
R5630:5634 Basics <> false constr
R5625:5628 Basics <> bool ind
R5640:5643 Poly <> cons constr
R5657:5659 Poly <> nil constr
R5661:5664 Basics <> bool ind
R5650:5654 Basics <> false constr
R5645:5648 Basics <> bool ind
mod 5703:5715 <> MumbleGrumble
ind 5839:5844 MumbleGrumble mumble
constr 5860:5860 MumbleGrumble a
constr 5875:5875 MumbleGrumble b
constr 5907:5907 MumbleGrumble c
R5864:5869 Poly <> mumble ind
R5885:5888 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5892:5895 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5896:5901 Poly <> mumble ind
R5889:5891 Coq.Init.Datatypes <> nat ind
R5879:5884 Poly <> mumble ind
R5911:5916 Poly <> mumble ind
ind 5930:5936 MumbleGrumble grumble
constr 5961:5961 MumbleGrumble d
constr 5989:5989 MumbleGrumble e
R5971:5974 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5975:5981 Poly <> grumble ind
R5983:5983 Poly <> X var
R5965:5970 Poly MumbleGrumble mumble ind
R5994:5997 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5998:6004 Poly <> grumble ind
R6006:6006 Poly <> X var
R5993:5993 Poly <> X var
R6302:6302 Poly MumbleGrumble d constr
R6312:6312 Poly MumbleGrumble b constr
R6314:6314 Poly MumbleGrumble a constr
R6304:6309 Poly MumbleGrumble mumble ind
R6328:6328 Poly MumbleGrumble e constr
R6338:6338 Poly MumbleGrumble b constr
R6340:6340 Poly MumbleGrumble c constr
R6330:6335 Poly MumbleGrumble mumble ind
R6362:6374 Poly MumbleGrumble <> mod
def 6652:6658 <> repeat'
R6672:6675 Poly <> list ind
R6677:6677 Poly <> X var
R6690:6694 Poly <> count var
R6717:6719 Poly <> nil constr
R6721:6721 Poly <> X var
R6727:6727 Coq.Init.Datatypes <> S constr
R6739:6742 Poly <> cons constr
R6749:6755 Poly <> repeat' def
R6759:6759 Poly <> x var
R6757:6757 Poly <> X var
R6746:6746 Poly <> x var
R6744:6744 Poly <> X var
R6859:6865 Poly <> repeat' def
R6921:6926 Poly <> repeat def
def 9468:9475 <> repeat''
R9489:9492 Poly <> list ind
R9494:9494 Poly <> X var
R9507:9511 Poly <> count var
R9534:9536 Poly <> nil constr
R9544:9544 Coq.Init.Datatypes <> S constr
R9556:9559 Poly <> cons constr
R9566:9573 Poly <> repeat'' def
R9577:9577 Poly <> x var
R9563:9563 Poly <> x var
def 9903:9909 <> list123
R9916:9919 Poly <> cons constr
R9928:9931 Poly <> cons constr
R9940:9943 Poly <> cons constr
R9952:9954 Poly <> nil constr
R9956:9958 Coq.Init.Datatypes <> nat ind
R9945:9947 Coq.Init.Datatypes <> nat ind
R9933:9935 Coq.Init.Datatypes <> nat ind
R9921:9923 Coq.Init.Datatypes <> nat ind
def 10032:10039 <> list123'
R10046:10049 Poly <> cons constr
R10056:10059 Poly <> cons constr
R10066:10069 Poly <> cons constr
R10076:10078 Poly <> nil constr
R10699:10701 Poly <> nil constr
R10699:10701 Poly <> nil constr
R10718:10721 Poly <> cons constr
R10718:10721 Poly <> cons constr
R10742:10747 Poly <> repeat def
R10742:10747 Poly <> repeat def
def 10834:10842 <> list123''
R10847:10850 Poly <> cons constr
R10855:10858 Poly <> cons constr
R10863:10866 Poly <> cons constr
R10870:10872 Poly <> nil constr
def 11062:11070 <> repeat'''
R11088:11088 Poly <> X var
R11100:11102 Coq.Init.Datatypes <> nat ind
R11107:11110 Poly <> list ind
R11112:11112 Poly <> X var
R11125:11129 Poly <> count var
R11152:11154 Poly <> nil constr
R11160:11160 Coq.Init.Datatypes <> S constr
R11172:11175 Poly <> cons constr
R11180:11188 Poly <> repeat''' def
R11190:11190 Poly <> x var
R11177:11177 Poly <> x var
ind 11789:11793 <> list'
constr 11818:11821 <> nil'
constr 11835:11839 <> cons'
R11825:11829 Poly <> list' ind
R11825:11829 Poly <> X var
R11844:11847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11853:11856 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11857:11861 Poly <> list' ind
R11857:11861 Poly <> X var
R11848:11852 Poly <> list' ind
R11848:11852 Poly <> X var
R11843:11843 Poly <> X var
def 12297:12299 <> app
R12321:12324 Poly <> list ind
R12326:12326 Poly <> X var
R12345:12348 Poly <> list ind
R12350:12350 Poly <> X var
R12364:12365 Poly <> l1 var
R12376:12378 Poly <> nil constr
R12388:12389 Poly <> l2 var
R12395:12398 Poly <> cons constr
R12407:12410 Poly <> cons constr
R12415:12417 Poly <> app def
R12421:12422 Poly <> l2 var
def 12442:12444 <> rev
R12458:12461 Poly <> list ind
R12463:12463 Poly <> X var
R12468:12471 Poly <> list ind
R12473:12473 Poly <> X var
R12486:12486 Poly <> l var
R12497:12499 Poly <> nil constr
R12509:12511 Poly <> nil constr
R12517:12520 Poly <> cons constr
R12529:12531 Poly <> app def
R12542:12545 Poly <> cons constr
R12549:12551 Poly <> nil constr
R12534:12536 Poly <> rev def
def 12571:12576 <> length
R12594:12597 Poly <> list ind
R12599:12599 Poly <> X var
R12604:12606 Coq.Init.Datatypes <> nat ind
R12619:12619 Poly <> l var
R12630:12632 Poly <> nil constr
R12643:12646 Poly <> cons constr
R12656:12656 Coq.Init.Datatypes <> S constr
R12659:12664 Poly <> length def
def 12686:12694 <> test_rev1
R12725:12728 Coq.Init.Logic <> :type_scope:x_'='_x not
R12748:12748 Coq.Init.Logic <> :type_scope:x_'='_x not
R12700:12702 Poly <> rev def
R12705:12708 Poly <> cons constr
R12713:12716 Poly <> cons constr
R12720:12722 Poly <> nil constr
R12729:12732 Poly <> cons constr
R12737:12740 Poly <> cons constr
R12744:12746 Poly <> nil constr
def 12786:12794 <> test_rev2
R12818:12820 Coq.Init.Logic <> :type_scope:x_'='_x not
R12799:12801 Poly <> rev def
R12804:12807 Poly <> cons constr
R12814:12816 Poly <> nil constr
R12809:12812 Basics <> true constr
R12821:12824 Poly <> cons constr
R12831:12833 Poly <> nil constr
R12826:12829 Basics <> true constr
def 12871:12882 <> test_length1
R12922:12924 Coq.Init.Logic <> :type_scope:x_'='_x not
R12885:12890 Poly <> length def
R12893:12896 Poly <> cons constr
R12901:12904 Poly <> cons constr
R12909:12912 Poly <> cons constr
R12916:12918 Poly <> nil constr
def 13398:13402 <> mynil
R13407:13409 Poly <> nil constr
def 13976:13980 <> mynil
R13984:13987 Poly <> list ind
R13989:13991 Coq.Init.Datatypes <> nat ind
R13996:13998 Poly <> nil constr
R14127:14129 Poly <> nil constr
def 14144:14149 <> mynil'
R14155:14157 Poly <> nil constr
R14159:14161 Coq.Init.Datatypes <> nat ind
R14443:14446 Poly <> cons constr
not 14430:14430 <> ::x_'::'_x
R14528:14530 Poly <> nil constr
not 14519:14519 <> ::'['_']'
R14563:14566 Poly <> cons constr
R14574:14577 Poly <> cons constr
R14581:14582 Poly <> ::'['_']' not
not 14542:14542 <> ::'['_x_';'_'..'_';'_x_']'
R14612:14614 Poly <> app def
not 14599:14599 <> ::x_'++'_x
def 14747:14756 <> list123'''
R14761:14761 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14763:14764 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14766:14767 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14769:14769 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 15077:15085 <> app_nil_r
R15115:15118 Poly <> list ind
R15120:15120 Poly <> X var
R15132:15134 Coq.Init.Logic <> :type_scope:x_'='_x not
R15126:15129 Poly <> ::x_'++'_x not
R15125:15125 Poly <> l var
R15130:15131 Poly <> ::'['_']' not
R15135:15135 Poly <> l var
prf 15260:15268 <> app_assoc
R15288:15291 Poly <> list ind
R15293:15293 Poly <> A var
R15310:15312 Coq.Init.Logic <> :type_scope:x_'='_x not
R15300:15303 Poly <> ::x_'++'_x not
R15299:15299 Poly <> l var
R15305:15308 Poly <> ::x_'++'_x not
R15304:15304 Poly <> m var
R15309:15309 Poly <> n var
R15313:15313 Poly <> ::x_'++'_x not
R15320:15324 Poly <> ::x_'++'_x not
R15315:15318 Poly <> ::x_'++'_x not
R15314:15314 Poly <> l var
R15319:15319 Poly <> m var
R15325:15325 Poly <> n var
prf 15452:15461 <> app_length
R15490:15493 Poly <> list ind
R15495:15495 Poly <> X var
R15518:15520 Coq.Init.Logic <> :type_scope:x_'='_x not
R15501:15506 Poly <> length def
R15511:15514 Poly <> ::x_'++'_x not
R15509:15510 Poly <> l1 var
R15515:15516 Poly <> l2 var
R15530:15532 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15521:15526 Poly <> length def
R15528:15529 Poly <> l1 var
R15533:15538 Poly <> length def
R15540:15541 Poly <> l2 var
prf 15800:15812 <> rev_app_distr
R15833:15836 Poly <> list ind
R15838:15838 Poly <> X var
R15858:15860 Coq.Init.Logic <> :type_scope:x_'='_x not
R15844:15846 Poly <> rev def
R15851:15854 Poly <> ::x_'++'_x not
R15849:15850 Poly <> l1 var
R15855:15856 Poly <> l2 var
R15867:15870 Poly <> ::x_'++'_x not
R15861:15863 Poly <> rev def
R15865:15866 Poly <> l2 var
R15871:15873 Poly <> rev def
R15875:15876 Poly <> l1 var
R15959:15967 Poly <> app_nil_r thm
R15959:15967 Poly <> app_nil_r thm
R15959:15967 Poly <> app_nil_r thm
R16017:16025 Poly <> app_assoc thm
R16017:16025 Poly <> app_assoc thm
R16017:16025 Poly <> app_assoc thm
prf 16055:16068 <> rev_involutive
R16100:16103 Poly <> list ind
R16105:16105 Poly <> X var
R16121:16123 Coq.Init.Logic <> :type_scope:x_'='_x not
R16110:16112 Poly <> rev def
R16115:16117 Poly <> rev def
R16119:16119 Poly <> l var
R16124:16124 Poly <> l var
R16215:16227 Poly <> rev_app_distr thm
R16215:16227 Poly <> rev_app_distr thm
R16215:16227 Poly <> rev_app_distr thm
ind 16572:16575 <> prod
constr 16602:16605 <> pair
R16610:16613 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16615:16618 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16619:16622 Poly <> prod ind
R16626:16626 Poly <> Y var
R16624:16624 Poly <> X var
R16614:16614 Poly <> Y var
R16609:16609 Poly <> X var
R16640:16643 Poly <> pair constr
R16640:16643 Poly <> pair constr
R16790:16793 Poly <> pair constr
not 16774:16774 <> ::'('_x_','_x_')'
R16929:16932 Poly <> prod ind
not 16917:16917 <> :type_scope:x_'*'_x
def 17531:17533 <> fst
R17554:17556 Poly <> :type_scope:x_'*'_x not
R17553:17553 Poly <> X var
R17557:17557 Poly <> Y var
R17562:17562 Poly <> X var
R17575:17575 Poly <> p var
R17586:17586 Poly <> ::'('_x_','_x_')' not
R17588:17589 Poly <> ::'('_x_','_x_')' not
R17591:17591 Poly <> ::'('_x_','_x_')' not
def 17617:17619 <> snd
R17640:17642 Poly <> :type_scope:x_'*'_x not
R17639:17639 Poly <> X var
R17643:17643 Poly <> Y var
R17648:17648 Poly <> Y var
R17661:17661 Poly <> p var
R17672:17672 Poly <> ::'('_x_','_x_')' not
R17674:17675 Poly <> ::'('_x_','_x_')' not
R17677:17677 Poly <> ::'('_x_','_x_')' not
def 17924:17930 <> combine
R17951:17954 Poly <> list ind
R17956:17956 Poly <> X var
R17965:17968 Poly <> list ind
R17970:17970 Poly <> Y var
R17986:17989 Poly <> list ind
R17993:17993 Poly <> :type_scope:x_'*'_x not
R17992:17992 Poly <> X var
R17994:17994 Poly <> Y var
R18012:18013 Poly <> ly var
R18008:18009 Poly <> lx var
R18024:18025 Poly <> ::'['_']' not
R18033:18034 Poly <> ::'['_']' not
R18043:18044 Poly <> ::'['_']' not
R18049:18050 Poly <> ::'['_']' not
R18057:18060 Poly <> ::x_'::'_x not
R18066:18069 Poly <> ::x_'::'_x not
R18082:18086 Poly <> ::x_'::'_x not
R18100:18100 Poly <> ::x_'::'_x not
R18076:18076 Poly <> ::'('_x_','_x_')' not
R18078:18079 Poly <> ::'('_x_','_x_')' not
R18081:18081 Poly <> ::'('_x_','_x_')' not
R18087:18093 Poly <> combine def
def 18830:18834 <> split
R18854:18857 Poly <> list ind
R18861:18861 Poly <> :type_scope:x_'*'_x not
R18860:18860 Poly <> X var
R18862:18862 Poly <> Y var
R18883:18883 Poly <> :type_scope:x_'*'_x not
R18890:18894 Poly <> :type_scope:x_'*'_x not
R18901:18901 Poly <> :type_scope:x_'*'_x not
R18884:18887 Poly <> list ind
R18889:18889 Poly <> X var
R18895:18898 Poly <> list ind
R18900:18900 Poly <> Y var
R18916:18916 Poly <> l var
R18931:18933 Poly <> nil constr
R18938:18938 Poly <> ::'('_x_','_x_')' not
R18942:18943 Poly <> ::'('_x_','_x_')' not
R18947:18947 Poly <> ::'('_x_','_x_')' not
R18939:18941 Poly <> nil constr
R18944:18946 Poly <> nil constr
R18962:18963 Poly <> ::x_'::'_x not
R18957:18957 Poly <> ::'('_x_','_x_')' not
R18959:18959 Poly <> ::'('_x_','_x_')' not
R18961:18961 Poly <> ::'('_x_','_x_')' not
R18985:18989 Poly <> split def
R19020:19020 Poly <> ::'('_x_','_x_')' not
R19026:19026 Poly <> ::'('_x_','_x_')' not
R19032:19032 Poly <> ::'('_x_','_x_')' not
R19022:19023 Poly <> ::x_'::'_x not
R19024:19025 Poly <> lx var
R19028:19029 Poly <> ::x_'::'_x not
R19030:19031 Poly <> ly var
def 19052:19061 <> test_split
R19093:19095 Coq.Init.Logic <> :type_scope:x_'='_x not
R19066:19070 Poly <> split def
R19072:19072 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19082:19082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19092:19092 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19073:19073 Poly <> ::'('_x_','_x_')' not
R19075:19075 Poly <> ::'('_x_','_x_')' not
R19081:19081 Poly <> ::'('_x_','_x_')' not
R19076:19080 Basics <> false constr
R19083:19083 Poly <> ::'('_x_','_x_')' not
R19085:19085 Poly <> ::'('_x_','_x_')' not
R19091:19091 Poly <> ::'('_x_','_x_')' not
R19086:19090 Basics <> false constr
R19096:19096 Poly <> ::'('_x_','_x_')' not
R19102:19102 Poly <> ::'('_x_','_x_')' not
R19116:19116 Poly <> ::'('_x_','_x_')' not
R19097:19097 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19099:19099 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19101:19101 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19103:19103 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19109:19109 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19115:19115 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19104:19108 Basics <> false constr
R19110:19114 Basics <> false constr
ind 19397:19402 <> option
constr 19427:19430 <> Some
constr 19452:19455 <> None
R19435:19438 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19439:19444 Poly <> option ind
R19446:19446 Poly <> X var
R19434:19434 Poly <> X var
R19459:19464 Poly <> option ind
R19466:19466 Poly <> X var
R19480:19483 Poly <> Some constr
R19480:19483 Poly <> Some constr
R19502:19505 Poly <> None constr
R19502:19505 Poly <> None constr
def 19619:19627 <> nth_error
R19645:19648 Poly <> list ind
R19650:19650 Poly <> X var
R19658:19660 Coq.Init.Datatypes <> nat ind
R19684:19689 Poly <> option ind
R19691:19691 Poly <> X var
R19704:19704 Poly <> l var
R19715:19716 Poly <> ::'['_']' not
R19721:19724 Poly <> None constr
R19731:19734 Poly <> ::x_'::'_x not
R19744:19750 Basics <> beq_nat def
R19754:19754 Coq.Init.Datatypes <> O constr
R19752:19752 Poly <> n var
R19773:19781 Poly <> nth_error def
R19787:19790 Coq.Init.Peano <> pred syndef
R19792:19792 Poly <> n var
R19761:19764 Poly <> Some constr
def 19811:19825 <> test_nth_error1
R19850:19852 Coq.Init.Logic <> :type_scope:x_'='_x not
R19829:19837 Poly <> nth_error def
R19839:19839 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19841:19841 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19843:19843 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19845:19845 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19847:19847 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19853:19856 Poly <> Some constr
def 19894:19908 <> test_nth_error2
R19933:19935 Coq.Init.Logic <> :type_scope:x_'='_x not
R19912:19920 Poly <> nth_error def
R19922:19922 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19926:19926 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19930:19930 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19923:19923 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19925:19925 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19927:19927 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19929:19929 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19936:19939 Poly <> Some constr
R19941:19941 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19943:19943 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19979:19993 <> test_nth_error3
R20015:20017 Coq.Init.Logic <> :type_scope:x_'='_x not
R19997:20005 Poly <> nth_error def
R20007:20007 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20012:20012 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20008:20011 Basics <> true constr
R20018:20021 Poly <> None constr
def 20277:20284 <> hd_error
R20302:20305 Poly <> list ind
R20307:20307 Poly <> X var
R20312:20317 Poly <> option ind
R20319:20319 Poly <> X var
R20332:20332 Poly <> l var
R20345:20347 Poly <> nil constr
R20352:20355 Poly <> None constr
R20364:20365 Poly <> ::x_'::'_x not
R20372:20375 Poly <> Some constr
R20514:20521 Poly <> hd_error def
def 20533:20546 <> test_hd_error1
R20564:20566 Coq.Init.Logic <> :type_scope:x_'='_x not
R20550:20557 Poly <> hd_error def
R20559:20559 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20561:20561 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20563:20563 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20567:20570 Poly <> Some constr
def 20608:20621 <> test_hd_error2
R20644:20647 Coq.Init.Logic <> :type_scope:x_'='_x not
R20625:20632 Poly <> hd_error def
R20635:20635 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20639:20639 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20643:20643 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20636:20636 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20638:20638 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20640:20640 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20642:20642 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20648:20651 Poly <> Some constr
R20653:20653 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20655:20655 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21342:21351 <> doit3times
R21366:21367 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21368:21368 Poly <> X var
R21365:21365 Poly <> X var
R21374:21374 Poly <> X var
R21379:21379 Poly <> X var
R21386:21386 Poly <> f var
R21389:21389 Poly <> f var
R21392:21392 Poly <> f var
R21394:21394 Poly <> n var
R21553:21562 Poly <> doit3times def
def 21634:21648 <> test_doit3times
R21672:21674 Coq.Init.Logic <> :type_scope:x_'='_x not
R21651:21660 Poly <> doit3times def
R21662:21669 Basics <> minustwo def
def 21713:21728 <> test_doit3times'
R21751:21753 Coq.Init.Logic <> :type_scope:x_'='_x not
R21731:21740 Poly <> doit3times def
R21747:21750 Basics <> true constr
R21742:21745 Basics <> negb def
R21754:21758 Basics <> false constr
def 22149:22154 <> filter
R22173:22174 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22175:22178 Basics <> bool ind
R22172:22172 Poly <> X var
R22184:22187 Poly <> list ind
R22189:22189 Poly <> X var
R22211:22214 Poly <> list ind
R22216:22216 Poly <> X var
R22230:22230 Poly <> l var
R22241:22242 Poly <> ::'['_']' not
R22251:22252 Poly <> ::'['_']' not
R22259:22262 Poly <> ::x_'::'_x not
R22271:22274 Poly <> test var
R22339:22344 Poly <> filter def
R22346:22349 Poly <> test var
R22284:22288 Poly <> ::x_'::'_x not
R22302:22302 Poly <> ::x_'::'_x not
R22289:22294 Poly <> filter def
R22296:22299 Poly <> test var
def 22530:22541 <> test_filter1
R22566:22568 Coq.Init.Logic <> :type_scope:x_'='_x not
R22544:22549 Poly <> filter def
R22557:22557 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22559:22559 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22561:22561 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22563:22563 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22565:22565 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22551:22555 Basics <> evenb def
R22569:22569 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22571:22571 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22573:22573 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22614:22624 <> length_is_1
R22642:22645 Poly <> list ind
R22647:22647 Poly <> X var
R22652:22655 Basics <> bool ind
R22662:22668 Basics <> beq_nat def
R22671:22676 Poly <> length def
R22678:22678 Poly <> l var
def 22693:22704 <> test_filter2
R22779:22783 Coq.Init.Logic <> :type_scope:x_'='_x not
R22711:22716 Poly <> filter def
R22741:22742 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22749:22750 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22754:22755 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22759:22760 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22768:22769 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22772:22773 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22777:22778 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22743:22743 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22745:22746 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22748:22748 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22751:22751 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22753:22753 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22756:22756 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22758:22758 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22761:22761 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22763:22763 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22765:22765 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22767:22767 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22770:22771 Poly <> ::'['_']' not
R22774:22774 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22776:22776 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22718:22728 Poly <> length_is_1 def
R22784:22785 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22789:22790 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22794:22795 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22799:22800 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22786:22786 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22788:22788 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22791:22791 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22793:22793 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22796:22796 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22798:22798 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22959:22974 <> countoddmembers'
R22979:22982 Poly <> list ind
R22984:22986 Coq.Init.Datatypes <> nat ind
R22991:22993 Coq.Init.Datatypes <> nat ind
R23000:23005 Poly <> length def
R23008:23013 Poly <> filter def
R23020:23020 Poly <> l var
R23015:23018 Basics <> oddb def
def 23033:23054 <> test_countoddmembers'1
R23089:23091 Coq.Init.Logic <> :type_scope:x_'='_x not
R23059:23074 Poly <> countoddmembers' def
R23076:23076 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23078:23078 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23080:23080 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23082:23082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23084:23084 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23086:23086 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23088:23088 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23129:23150 <> test_countoddmembers'2
R23179:23181 Coq.Init.Logic <> :type_scope:x_'='_x not
R23155:23170 Poly <> countoddmembers' def
R23172:23172 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23174:23174 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23176:23176 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23178:23178 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23219:23240 <> test_countoddmembers'3
R23265:23267 Coq.Init.Logic <> :type_scope:x_'='_x not
R23245:23260 Poly <> countoddmembers' def
R23262:23264 Poly <> nil constr
def 24046:24059 <> test_anon_fun'
R24093:24095 Coq.Init.Logic <> :type_scope:x_'='_x not
R24064:24073 Poly <> doit3times def
R24086:24088 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R24085:24085 Poly <> n var
R24089:24089 Poly <> n var
def 24336:24348 <> test_filter2'
R24443:24447 Coq.Init.Logic <> :type_scope:x_'='_x not
R24355:24360 Poly <> filter def
R24405:24406 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24413:24414 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24418:24419 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24423:24424 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24432:24433 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24436:24437 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24441:24442 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24407:24407 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24409:24410 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24412:24412 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24415:24415 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24417:24417 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24420:24420 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24422:24422 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24425:24425 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24427:24427 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24429:24429 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24431:24431 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24434:24435 Poly <> ::'['_']' not
R24438:24438 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24440:24440 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24372:24378 Basics <> beq_nat def
R24381:24386 Poly <> length def
R24388:24388 Poly <> l var
R24448:24449 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24453:24454 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24458:24459 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24463:24464 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24450:24450 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24452:24452 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24455:24455 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24457:24457 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24460:24460 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24462:24462 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24766:24780 <> filter_even_gt7
R24787:24790 Poly <> list ind
R24792:24794 Coq.Init.Datatypes <> nat ind
R24799:24802 Poly <> list ind
R24804:24806 Coq.Init.Datatypes <> nat ind
R24815:24820 Poly <> filter def
R24858:24858 Poly <> l var
R24832:24835 Basics <> andb def
R24848:24850 Basics <> leb def
R24854:24854 Poly <> n var
R24838:24842 Basics <> evenb def
R24844:24844 Poly <> n var
def 24870:24891 <> test_filter_even_gt7_1
R24932:24934 Coq.Init.Logic <> :type_scope:x_'='_x not
R24897:24911 Poly <> filter_even_gt7 def
R24913:24913 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24915:24915 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24917:24917 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24919:24919 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24921:24921 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24924:24924 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24926:24926 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24929:24929 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24931:24931 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24935:24935 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24938:24938 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24941:24941 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24943:24943 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24981:25002 <> test_filter_even_gt7_2
R25038:25040 Coq.Init.Logic <> :type_scope:x_'='_x not
R25008:25022 Poly <> filter_even_gt7 def
R25024:25024 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25026:25026 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25028:25028 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25030:25030 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25033:25033 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25037:25037 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25041:25042 Poly <> ::'['_']' not
def 25702:25710 <> partition
R25753:25756 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25757:25760 Basics <> bool ind
R25752:25752 Poly <> X var
R25789:25792 Poly <> list ind
R25794:25794 Poly <> X var
R25824:25826 Poly <> :type_scope:x_'*'_x not
R25818:25821 Poly <> list ind
R25823:25823 Poly <> X var
R25827:25830 Poly <> list ind
R25832:25832 Poly <> X var
R25837:25837 Poly <> ::'('_x_','_x_')' not
R25851:25852 Poly <> ::'('_x_','_x_')' not
R25886:25886 Poly <> ::'('_x_','_x_')' not
R25838:25843 Poly <> filter def
R25850:25850 Poly <> l var
R25845:25848 Poly <> test var
R25853:25858 Poly <> filter def
R25885:25885 Poly <> l var
R25870:25873 Basics <> negb def
R25876:25879 Poly <> test var
R25881:25881 Poly <> x var
def 26076:26090 <> test_partition1
R26119:26121 Coq.Init.Logic <> :type_scope:x_'='_x not
R26093:26101 Poly <> partition def
R26108:26108 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26110:26110 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26112:26112 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26114:26114 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26116:26116 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26118:26118 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26103:26106 Basics <> oddb def
R26122:26122 Poly <> ::'('_x_','_x_')' not
R26130:26131 Poly <> ::'('_x_','_x_')' not
R26137:26137 Poly <> ::'('_x_','_x_')' not
R26123:26123 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26125:26125 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26127:26127 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26129:26129 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26132:26132 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26134:26134 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26136:26136 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26173:26187 <> test_partition2
R26224:26226 Coq.Init.Logic <> :type_scope:x_'='_x not
R26190:26198 Poly <> partition def
R26217:26217 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26219:26219 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26221:26221 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26223:26223 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26210:26214 Basics <> false constr
R26227:26227 Poly <> ::'('_x_','_x_')' not
R26230:26231 Poly <> ::'('_x_','_x_')' not
R26239:26239 Poly <> ::'('_x_','_x_')' not
R26228:26229 Poly <> ::'['_']' not
R26232:26232 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26234:26234 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26236:26236 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26238:26238 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26435:26437 <> map
R26454:26455 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26456:26456 Poly <> Y var
R26453:26453 Poly <> X var
R26462:26465 Poly <> list ind
R26467:26467 Poly <> X var
R26473:26476 Poly <> list ind
R26478:26478 Poly <> Y var
R26492:26492 Poly <> l var
R26503:26504 Poly <> ::'['_']' not
R26513:26514 Poly <> ::'['_']' not
R26521:26524 Poly <> ::x_'::'_x not
R26530:26530 Poly <> ::x_'::'_x not
R26534:26539 Poly <> ::x_'::'_x not
R26547:26547 Poly <> ::x_'::'_x not
R26531:26531 Poly <> f var
R26540:26542 Poly <> map def
R26544:26544 Poly <> f var
def 26764:26772 <> test_map1
R26806:26808 Coq.Init.Logic <> :type_scope:x_'='_x not
R26775:26777 Poly <> map def
R26799:26799 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26801:26801 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26803:26803 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26805:26805 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26789:26792 Coq.Init.Peano <> plus syndef
R26796:26796 Poly <> x var
R26809:26809 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26811:26811 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26813:26813 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26815:26815 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27109:27117 <> test_map2
R27140:27142 Coq.Init.Logic <> :type_scope:x_'='_x not
R27122:27124 Poly <> map def
R27131:27131 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27133:27133 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27135:27135 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27137:27137 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27139:27139 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27126:27129 Basics <> oddb def
R27143:27143 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27149:27149 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27154:27154 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27160:27160 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27165:27165 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27144:27148 Basics <> false constr
R27150:27153 Basics <> true constr
R27155:27159 Basics <> false constr
R27161:27164 Basics <> true constr
def 27354:27362 <> test_map3
R27410:27414 Coq.Init.Logic <> :type_scope:x_'='_x not
R27369:27371 Poly <> map def
R27401:27401 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27403:27403 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27405:27405 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27407:27407 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27409:27409 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27383:27383 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27391:27391 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27398:27398 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27384:27388 Basics <> evenb def
R27390:27390 Poly <> n var
R27392:27395 Basics <> oddb def
R27397:27397 Poly <> n var
R27415:27415 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27428:27428 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27441:27441 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27454:27454 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27467:27467 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27416:27416 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27421:27421 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27427:27427 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27417:27420 Basics <> true constr
R27422:27426 Basics <> false constr
R27429:27429 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27435:27435 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27440:27440 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27430:27434 Basics <> false constr
R27436:27439 Basics <> true constr
R27442:27442 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27447:27447 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27453:27453 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27443:27446 Basics <> true constr
R27448:27452 Basics <> false constr
R27455:27455 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27461:27461 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27466:27466 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27456:27460 Basics <> false constr
R27462:27465 Basics <> true constr
prf 27733:27745 <> map_app_distr
R27771:27774 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27775:27775 Poly <> Y var
R27770:27770 Poly <> X var
R27783:27786 Poly <> list ind
R27788:27788 Poly <> X var
R27808:27810 Coq.Init.Logic <> :type_scope:x_'='_x not
R27794:27796 Poly <> map def
R27802:27805 Poly <> ::x_'++'_x not
R27801:27801 Poly <> l var
R27806:27806 Poly <> r var
R27798:27798 Poly <> f var
R27811:27811 Poly <> ::x_'++'_x not
R27819:27824 Poly <> ::x_'++'_x not
R27832:27832 Poly <> ::x_'++'_x not
R27812:27814 Poly <> map def
R27818:27818 Poly <> l var
R27816:27816 Poly <> f var
R27825:27827 Poly <> map def
R27831:27831 Poly <> r var
R27829:27829 Poly <> f var
prf 27962:27968 <> map_rev
R27998:28001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28002:28002 Poly <> Y var
R27997:27997 Poly <> X var
R28010:28013 Poly <> list ind
R28015:28015 Poly <> X var
R28034:28036 Coq.Init.Logic <> :type_scope:x_'='_x not
R28021:28023 Poly <> map def
R28028:28030 Poly <> rev def
R28032:28032 Poly <> l var
R28025:28025 Poly <> f var
R28037:28039 Poly <> rev def
R28042:28044 Poly <> map def
R28048:28048 Poly <> l var
R28046:28046 Poly <> f var
R28143:28145 Poly <> map def
R28156:28168 Poly <> map_app_distr thm
R28156:28168 Poly <> map_app_distr thm
R28156:28168 Poly <> map_app_distr thm
def 28681:28688 <> flat_map
R28705:28708 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28709:28712 Poly <> list ind
R28714:28714 Poly <> Y var
R28704:28704 Poly <> X var
R28720:28723 Poly <> list ind
R28725:28725 Poly <> X var
R28750:28753 Poly <> list ind
R28755:28755 Poly <> Y var
R28769:28769 Poly <> l var
R28781:28782 Poly <> ::'['_']' not
R28787:28788 Poly <> ::'['_']' not
R28796:28797 Poly <> ::x_'::'_x not
R28804:28806 Poly <> app def
R28815:28822 Poly <> flat_map def
R28824:28824 Poly <> f var
R28809:28809 Poly <> f var
def 28846:28859 <> test_flat_map1
R28899:28903 Coq.Init.Logic <> :type_scope:x_'='_x not
R28864:28871 Poly <> flat_map def
R28892:28892 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28894:28894 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28896:28896 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28898:28898 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28883:28883 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28885:28885 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28887:28887 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28889:28889 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28884:28884 Poly <> n var
R28886:28886 Poly <> n var
R28888:28888 Poly <> n var
R28904:28904 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28906:28907 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28909:28910 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28912:28913 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28915:28916 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28918:28919 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28921:28922 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28924:28925 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28927:28928 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28930:28930 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 29130:29139 <> option_map
R29160:29163 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29164:29164 Poly <> Y var
R29159:29159 Poly <> X var
R29173:29178 Poly <> option ind
R29180:29180 Poly <> X var
R29207:29212 Poly <> option ind
R29214:29214 Poly <> Y var
R29227:29228 Poly <> xo var
R29241:29244 Poly <> None constr
R29249:29252 Poly <> None constr
R29260:29263 Poly <> Some constr
R29270:29273 Poly <> Some constr
R29276:29276 Poly <> f var
def 30115:30118 <> fold
R30136:30137 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30139:30140 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30141:30141 Poly <> Y var
R30138:30138 Poly <> Y var
R30135:30135 Poly <> X var
R30147:30150 Poly <> list ind
R30152:30152 Poly <> X var
R30158:30158 Poly <> Y var
R30188:30188 Poly <> Y var
R30201:30201 Poly <> l var
R30212:30214 Poly <> nil constr
R30219:30219 Poly <> b var
R30226:30229 Poly <> ::x_'::'_x not
R30256:30256 Poly <> f var
R30261:30264 Poly <> fold def
R30270:30270 Poly <> b var
R30266:30266 Poly <> f var
R30745:30748 Poly <> fold def
R30750:30753 Basics <> andb def
def 30815:30827 <> fold_example1
R30854:30856 Coq.Init.Logic <> :type_scope:x_'='_x not
R30833:30836 Poly <> fold def
R30843:30843 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30845:30845 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30847:30847 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30849:30849 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30851:30851 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30838:30841 Coq.Init.Peano <> mult syndef
def 30895:30907 <> fold_example2
R30950:30952 Coq.Init.Logic <> :type_scope:x_'='_x not
R30913:30916 Poly <> fold def
R30946:30949 Basics <> true constr
R30923:30923 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30928:30928 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30933:30933 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30939:30939 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30944:30944 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30924:30927 Basics <> true constr
R30929:30932 Basics <> true constr
R30934:30938 Basics <> false constr
R30940:30943 Basics <> true constr
R30918:30921 Basics <> andb def
R30953:30957 Basics <> false constr
def 30994:31006 <> fold_example3
R31043:31045 Coq.Init.Logic <> :type_scope:x_'='_x not
R31012:31015 Poly <> fold def
R31041:31042 Poly <> ::'['_']' not
R31022:31022 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31026:31026 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31029:31029 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31035:31035 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31039:31039 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31023:31023 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31025:31025 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31027:31028 Poly <> ::'['_']' not
R31030:31030 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31032:31032 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31034:31034 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31036:31036 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31038:31038 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31017:31019 Poly <> app def
R31046:31046 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31048:31048 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31050:31050 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31052:31052 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31054:31054 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 32001:32008 <> constfun
R32024:32024 Poly <> X var
R32032:32033 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32034:32034 Poly <> X var
R32029:32031 Coq.Init.Datatypes <> nat ind
R32048:32050 Coq.Init.Datatypes <> nat ind
R32056:32056 Poly <> x var
def 32071:32075 <> ftrue
R32080:32087 Poly <> constfun def
R32089:32092 Basics <> true constr
def 32104:32120 <> constfun_example1
R32131:32133 Coq.Init.Logic <> :type_scope:x_'='_x not
R32124:32128 Poly <> ftrue def
R32134:32137 Basics <> true constr
def 32174:32190 <> constfun_example2
R32209:32211 Coq.Init.Logic <> :type_scope:x_'='_x not
R32195:32202 Poly <> constfun def
R32413:32416 Coq.Init.Peano <> plus syndef
def 33027:33031 <> plus3
R33036:33039 Coq.Init.Peano <> plus syndef
R33050:33054 Poly <> plus3 def
def 33066:33075 <> test_plus3
R33089:33091 Coq.Init.Logic <> :type_scope:x_'='_x not
R33082:33086 Poly <> plus3 def
def 33129:33139 <> test_plus3'
R33163:33165 Coq.Init.Logic <> :type_scope:x_'='_x not
R33145:33154 Poly <> doit3times def
R33156:33160 Poly <> plus3 def
def 33203:33214 <> test_plus3''
R33240:33242 Coq.Init.Logic <> :type_scope:x_'='_x not
R33219:33228 Poly <> doit3times def
R33231:33234 Coq.Init.Peano <> plus syndef
mod 33383:33391 <> Exercises
def 33594:33604 Exercises fold_length
R33622:33625 Poly <> list ind
R33627:33627 Poly <> X var
R33632:33634 Coq.Init.Datatypes <> nat ind
R33641:33644 Poly <> fold def
R33663:33663 Poly <> l var
R33658:33658 Coq.Init.Datatypes <> S constr
R33660:33660 Poly <> n var
def 33677:33693 Exercises test_fold_length1
R33716:33718 Coq.Init.Logic <> :type_scope:x_'='_x not
R33697:33707 Poly Exercises fold_length def
R33709:33709 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33711:33711 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33713:33713 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33715:33715 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 33804:33822 Exercises fold_length_correct
R33840:33843 Poly <> list ind
R33845:33845 Poly <> X var
R33864:33866 Coq.Init.Logic <> :type_scope:x_'='_x not
R33851:33861 Poly Exercises fold_length def
R33863:33863 Poly <> l var
R33867:33872 Poly <> length def
R33874:33874 Poly <> l var
R34134:34137 Poly <> fold def
def 34151:34158 Exercises fold_map
R34177:34180 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34181:34181 Poly <> Y var
R34176:34176 Poly <> X var
R34189:34192 Poly <> list ind
R34194:34194 Poly <> X var
R34199:34202 Poly <> list ind
R34204:34204 Poly <> Y var
R34211:34214 Poly <> fold def
R34240:34241 Poly <> ::'['_']' not
R34238:34238 Poly <> l var
R34228:34228 Poly <> ::x_'::'_x not
R34232:34234 Poly <> ::x_'::'_x not
R34229:34229 Poly <> f var
R34231:34231 Poly <> x var
R34235:34235 Poly <> y var
R34254:34261 Poly Exercises fold_map def
R34280:34280 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34282:34282 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34284:34284 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34286:34286 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34274:34276 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34273:34273 Poly <> x var
prf 34407:34420 Exercises fold_map_distr
R34446:34448 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34449:34449 Poly <> Y var
R34445:34445 Poly <> X var
R34457:34460 Poly <> list ind
R34462:34462 Poly <> X var
R34487:34489 Coq.Init.Logic <> :type_scope:x_'='_x not
R34468:34475 Poly Exercises fold_map def
R34481:34484 Poly <> ::x_'++'_x not
R34480:34480 Poly <> l var
R34485:34485 Poly <> r var
R34477:34477 Poly <> f var
R34490:34490 Poly <> ::x_'++'_x not
R34503:34508 Poly <> ::x_'++'_x not
R34521:34521 Poly <> ::x_'++'_x not
R34491:34498 Poly Exercises fold_map def
R34502:34502 Poly <> l var
R34500:34500 Poly <> f var
R34509:34516 Poly Exercises fold_map def
R34520:34520 Poly <> r var
R34518:34518 Poly <> f var
R34619:34621 Poly <> map def
R34631:34638 Poly Exercises fold_map def
R34656:34663 Poly Exercises fold_map def
prf 34727:34742 Exercises fold_map_correct
R34767:34770 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34771:34771 Poly <> Y var
R34766:34766 Poly <> X var
R34777:34780 Poly <> list ind
R34782:34782 Poly <> X var
R34800:34802 Coq.Init.Logic <> :type_scope:x_'='_x not
R34788:34795 Poly Exercises fold_map def
R34799:34799 Poly <> l var
R34797:34797 Poly <> f var
R34803:34805 Poly <> map def
R34809:34809 Poly <> l var
R34807:34807 Poly <> f var
R34904:34911 Poly Exercises fold_map def
R34928:34935 Poly Exercises fold_map def
def 35816:35825 Exercises prod_curry
R35854:35857 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35858:35858 Poly <> Z var
R35850:35852 Poly <> :type_scope:x_'*'_x not
R35849:35849 Poly <> X var
R35853:35853 Poly <> Y var
R35866:35866 Poly <> X var
R35874:35874 Poly <> Y var
R35879:35879 Poly <> Z var
R35884:35884 Poly <> f var
R35886:35886 Poly <> ::'('_x_','_x_')' not
R35888:35889 Poly <> ::'('_x_','_x_')' not
R35891:35891 Poly <> ::'('_x_','_x_')' not
R35887:35887 Poly <> x var
R35890:35890 Poly <> y var
def 36036:36047 Exercises prod_uncurry
R36072:36075 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36077:36080 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36081:36081 Poly <> Z var
R36076:36076 Poly <> Y var
R36071:36071 Poly <> X var
R36090:36092 Poly <> :type_scope:x_'*'_x not
R36089:36089 Poly <> X var
R36093:36093 Poly <> Y var
R36098:36098 Poly <> Z var
R36105:36105 Poly <> f var
R36116:36118 Poly <> snd def
R36120:36120 Poly <> p var
R36108:36110 Poly <> fst def
R36112:36112 Poly <> p var
def 36263:36272 Exercises test_map1'
R36295:36297 Coq.Init.Logic <> :type_scope:x_'='_x not
R36275:36277 Poly <> map def
R36288:36288 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36290:36290 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36292:36292 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36294:36294 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36280:36283 Coq.Init.Peano <> plus syndef
R36298:36298 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36300:36300 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36302:36302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36304:36304 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36474:36483 Poly Exercises prod_curry def
R36493:36504 Poly Exercises prod_uncurry def
prf 36516:36528 Exercises uncurry_curry
R36584:36587 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36589:36592 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36593:36593 Poly <> Z var
R36588:36588 Poly <> Y var
R36583:36583 Poly <> X var
R36658:36660 Coq.Init.Logic <> :type_scope:x_'='_x not
R36627:36636 Poly Exercises prod_curry def
R36657:36657 Poly <> y var
R36655:36655 Poly <> x var
R36639:36650 Poly Exercises prod_uncurry def
R36652:36652 Poly <> f var
R36661:36661 Poly <> f var
R36665:36665 Poly <> y var
R36663:36663 Poly <> x var
R36706:36717 Poly Exercises prod_uncurry def
R36727:36736 Poly Exercises prod_curry def
prf 36766:36778 Exercises curry_uncurry
R36833:36833 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36839:36843 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36844:36844 Poly <> Z var
R36835:36837 Poly <> :type_scope:x_'*'_x not
R36834:36834 Poly <> X var
R36838:36838 Poly <> Y var
R36853:36855 Poly <> :type_scope:x_'*'_x not
R36852:36852 Poly <> X var
R36856:36856 Poly <> Y var
R36891:36893 Coq.Init.Logic <> :type_scope:x_'='_x not
R36862:36873 Poly Exercises prod_uncurry def
R36890:36890 Poly <> p var
R36876:36885 Poly Exercises prod_curry def
R36887:36887 Poly <> f var
R36894:36894 Poly <> f var
R36896:36896 Poly <> p var
R36935:36944 Poly Exercises prod_curry def
R36954:36965 Poly Exercises prod_uncurry def
mod 37833:37838 <> Exercises.Church
def 37852:37854 Exercises.Church nat
R37876:37876 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37883:37887 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37889:37892 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37893:37893 Poly <> X var
R37888:37888 Poly <> X var
R37878:37881 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37882:37882 Poly <> X var
R37877:37877 Poly <> X var
def 38049:38051 Exercises.Church one
R38055:38057 Poly Exercises.Church nat def
R38085:38088 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38089:38089 Poly <> X var
R38084:38084 Poly <> X var
R38097:38097 Poly <> X var
R38103:38103 Poly <> f var
R38105:38105 Poly <> x var
def 38185:38187 Exercises.Church two
R38191:38193 Poly Exercises.Church nat def
R38221:38224 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38225:38225 Poly <> X var
R38220:38220 Poly <> X var
R38233:38233 Poly <> X var
R38239:38239 Poly <> f var
R38242:38242 Poly <> f var
R38244:38244 Poly <> x var
def 38424:38427 Exercises.Church zero
R38431:38433 Poly Exercises.Church nat def
R38461:38464 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38465:38465 Poly <> X var
R38460:38460 Poly <> X var
R38473:38473 Poly <> X var
R38479:38479 Poly <> x var
def 38754:38758 Exercises.Church three
R38762:38764 Poly Exercises.Church nat def
R38770:38779 Poly <> doit3times def
def 38987:38990 Exercises.Church succ
R38997:38999 Poly Exercises.Church nat def
R39004:39006 Poly Exercises.Church nat def
R39033:39036 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39037:39037 Poly <> X var
R39032:39032 Poly <> X var
R39043:39043 Poly <> X var
R39049:39049 Poly <> f var
R39052:39052 Poly <> n var
R39058:39058 Poly <> x var
R39056:39056 Poly <> f var
R39054:39054 Poly <> X var
def 39071:39076 Exercises.Church succ_1
R39089:39091 Coq.Init.Logic <> :type_scope:x_'='_x not
R39080:39083 Poly Exercises.Church succ def
R39085:39088 Poly Exercises.Church zero def
R39092:39094 Poly Exercises.Church one def
def 39132:39137 Exercises.Church succ_2
R39149:39151 Coq.Init.Logic <> :type_scope:x_'='_x not
R39141:39144 Poly Exercises.Church succ def
R39146:39148 Poly Exercises.Church one def
R39152:39154 Poly Exercises.Church two def
def 39191:39196 Exercises.Church succ_3
R39208:39210 Coq.Init.Logic <> :type_scope:x_'='_x not
R39200:39203 Poly Exercises.Church succ def
R39205:39207 Poly Exercises.Church two def
R39211:39215 Poly Exercises.Church three def
def 39296:39299 Exercises.Church plus
R39308:39310 Poly Exercises.Church nat def
R39315:39317 Poly Exercises.Church nat def
R39341:39344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39345:39345 Poly <> X var
R39340:39340 Poly <> X var
R39350:39350 Poly <> X var
R39356:39356 Poly <> n var
R39363:39363 Poly <> m var
R39369:39369 Poly <> x var
R39367:39367 Poly <> f var
R39365:39365 Poly <> X var
R39360:39360 Poly <> f var
R39358:39358 Poly <> X var
def 39382:39387 Exercises.Church plus_1
R39404:39406 Coq.Init.Logic <> :type_scope:x_'='_x not
R39391:39394 Poly Exercises.Church plus def
R39401:39403 Poly Exercises.Church one def
R39396:39399 Poly Exercises.Church zero def
R39407:39409 Poly Exercises.Church one def
def 39446:39451 Exercises.Church plus_2
R39469:39471 Coq.Init.Logic <> :type_scope:x_'='_x not
R39455:39458 Poly Exercises.Church plus def
R39464:39468 Poly Exercises.Church three def
R39460:39462 Poly Exercises.Church two def
R39472:39475 Poly Exercises.Church plus def
R39483:39485 Poly Exercises.Church two def
R39477:39481 Poly Exercises.Church three def
def 39522:39527 Exercises.Church plus_3
R39558:39560 Coq.Init.Logic <> :type_scope:x_'='_x not
R39533:39536 Poly Exercises.Church plus def
R39553:39557 Poly Exercises.Church three def
R39539:39542 Poly Exercises.Church plus def
R39548:39550 Poly Exercises.Church two def
R39544:39546 Poly Exercises.Church two def
R39561:39564 Poly Exercises.Church plus def
R39571:39574 Poly Exercises.Church plus def
R39582:39586 Poly Exercises.Church three def
R39576:39580 Poly Exercises.Church three def
R39566:39568 Poly Exercises.Church one def
def 39651:39654 Exercises.Church mult
R39663:39665 Poly Exercises.Church nat def
R39670:39672 Poly Exercises.Church nat def
R39697:39700 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39701:39701 Poly <> X var
R39696:39696 Poly <> X var
R39707:39707 Poly <> X var
R39713:39713 Poly <> n var
R39725:39725 Poly <> x var
R39718:39718 Poly <> m var
R39722:39722 Poly <> f var
R39720:39720 Poly <> X var
R39715:39715 Poly <> X var
def 39737:39742 Exercises.Church mult_1
R39758:39760 Coq.Init.Logic <> :type_scope:x_'='_x not
R39746:39749 Poly Exercises.Church mult def
R39755:39757 Poly Exercises.Church one def
R39751:39753 Poly Exercises.Church one def
R39761:39763 Poly Exercises.Church one def
def 39801:39806 Exercises.Church mult_2
R39838:39840 Coq.Init.Logic <> :type_scope:x_'='_x not
R39810:39813 Poly Exercises.Church mult def
R39821:39824 Poly Exercises.Church plus def
R39832:39836 Poly Exercises.Church three def
R39826:39830 Poly Exercises.Church three def
R39815:39818 Poly Exercises.Church zero def
R39841:39844 Poly Exercises.Church zero def
def 39881:39886 Exercises.Church mult_3
R39904:39906 Coq.Init.Logic <> :type_scope:x_'='_x not
R39890:39893 Poly Exercises.Church mult def
R39899:39903 Poly Exercises.Church three def
R39895:39897 Poly Exercises.Church two def
R39907:39910 Poly Exercises.Church plus def
R39918:39922 Poly Exercises.Church three def
R39912:39916 Poly Exercises.Church three def
R40235:40237 Poly Exercises.Church nat def
def 40252:40254 Exercises.Church exp
R40263:40265 Poly Exercises.Church nat def
R40270:40272 Poly Exercises.Church nat def
R40294:40295 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40296:40296 Poly <> X var
R40293:40293 Poly <> X var
R40302:40302 Poly <> X var
R40309:40309 Poly <> m var
R40321:40321 Poly <> n var
R40323:40323 Poly <> X var
R40313:40316 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40317:40317 Poly <> X var
R40312:40312 Poly <> X var
R40329:40329 Poly <> x var
R40327:40327 Poly <> f var
def 40341:40345 Exercises.Church exp_1
R40360:40362 Coq.Init.Logic <> :type_scope:x_'='_x not
R40349:40351 Poly Exercises.Church exp def
R40357:40359 Poly Exercises.Church two def
R40353:40355 Poly Exercises.Church two def
R40363:40366 Poly Exercises.Church plus def
R40372:40374 Poly Exercises.Church two def
R40368:40370 Poly Exercises.Church two def
def 40411:40415 Exercises.Church exp_2
R40432:40434 Coq.Init.Logic <> :type_scope:x_'='_x not
R40419:40421 Poly Exercises.Church exp def
R40429:40431 Poly Exercises.Church two def
R40423:40427 Poly Exercises.Church three def
R40435:40438 Poly Exercises.Church plus def
R40466:40468 Poly Exercises.Church one def
R40441:40444 Poly Exercises.Church mult def
R40451:40454 Poly Exercises.Church mult def
R40460:40462 Poly Exercises.Church two def
R40456:40458 Poly Exercises.Church two def
R40446:40448 Poly Exercises.Church two def
R40507:40510 Poly Exercises.Church plus def
R40538:40540 Poly Exercises.Church one def
R40513:40516 Poly Exercises.Church mult def
R40523:40526 Poly Exercises.Church mult def
R40532:40534 Poly Exercises.Church two def
R40528:40530 Poly Exercises.Church two def
R40518:40520 Poly Exercises.Church two def
R40553:40555 Poly Exercises.Church exp def
R40563:40565 Poly Exercises.Church two def
R40557:40561 Poly Exercises.Church three def
def 40578:40582 Exercises.Church exp_3
R40600:40602 Coq.Init.Logic <> :type_scope:x_'='_x not
R40586:40588 Poly Exercises.Church exp def
R40596:40599 Poly Exercises.Church zero def
R40590:40594 Poly Exercises.Church three def
R40603:40605 Poly Exercises.Church one def
R40639:40644 Poly Exercises.Church <> mod
R40662:40670 Poly Exercises <> mod
