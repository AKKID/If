DIGEST 93891d51ca5f3618fc57bf8c00757315
FPoly
R309:313 Lists <> <> lib
ind 1197:1204 <> boollist
constr 1220:1227 <> bool_nil
constr 1244:1252 <> bool_cons
R1231:1238 Poly <> boollist ind
R1260:1263 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1272:1275 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1276:1283 Poly <> boollist ind
R1264:1271 Poly <> boollist ind
R1256:1259 Basics <> bool ind
ind 1757:1760 <> list
constr 1785:1787 <> nil
constr 1802:1805 <> cons
R1791:1794 Poly <> list ind
R1796:1796 Poly <> X var
R1810:1813 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1820:1823 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1824:1827 Poly <> list ind
R1829:1829 Poly <> X var
R1814:1817 Poly <> list ind
R1819:1819 Poly <> X var
R1809:1809 Poly <> X var
R2720:2723 Poly <> list ind
R3091:3093 Poly <> nil constr
R3095:3097 Coq.Init.Datatypes <> nat ind
R3311:3314 Poly <> cons constr
R3323:3325 Poly <> nil constr
R3327:3329 Coq.Init.Datatypes <> nat ind
R3316:3318 Coq.Init.Datatypes <> nat ind
R3720:3722 Poly <> nil constr
R3990:3993 Poly <> cons constr
R4059:4062 Poly <> cons constr
R4064:4066 Coq.Init.Datatypes <> nat ind
R4689:4692 Poly <> cons constr
R4701:4704 Poly <> cons constr
R4713:4715 Poly <> nil constr
R4717:4719 Coq.Init.Datatypes <> nat ind
R4706:4708 Coq.Init.Datatypes <> nat ind
R4694:4696 Coq.Init.Datatypes <> nat ind
def 5072:5077 <> repeat
R5095:5095 Poly <> X var
R5107:5109 Coq.Init.Datatypes <> nat ind
R5114:5117 Poly <> list ind
R5119:5119 Poly <> X var
R5132:5136 Poly <> count var
R5152:5154 Poly <> nil constr
R5156:5156 Poly <> X var
R5162:5162 Coq.Init.Datatypes <> S constr
R5174:5177 Poly <> cons constr
R5184:5189 Poly <> repeat def
R5193:5193 Poly <> x var
R5191:5191 Poly <> X var
R5181:5181 Poly <> x var
R5179:5179 Poly <> X var
def 5360:5371 <> test_repeat1
R5391:5393 Coq.Init.Logic <> :type_scope:x_'='_x not
R5377:5382 Poly <> repeat def
R5384:5386 Coq.Init.Datatypes <> nat ind
R5394:5397 Poly <> cons constr
R5406:5409 Poly <> cons constr
R5418:5420 Poly <> nil constr
R5422:5424 Coq.Init.Datatypes <> nat ind
R5411:5413 Coq.Init.Datatypes <> nat ind
R5399:5401 Coq.Init.Datatypes <> nat ind
def 5584:5595 <> test_repeat2
R5620:5622 Coq.Init.Logic <> :type_scope:x_'='_x not
R5601:5606 Poly <> repeat def
R5613:5617 Basics <> false constr
R5608:5611 Basics <> bool ind
R5623:5626 Poly <> cons constr
R5640:5642 Poly <> nil constr
R5644:5647 Basics <> bool ind
R5633:5637 Basics <> false constr
R5628:5631 Basics <> bool ind
mod 5686:5698 <> MumbleGrumble
ind 5822:5827 MumbleGrumble mumble
constr 5843:5843 MumbleGrumble a
constr 5858:5858 MumbleGrumble b
constr 5890:5890 MumbleGrumble c
R5847:5852 Poly <> mumble ind
R5868:5871 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5875:5878 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5879:5884 Poly <> mumble ind
R5872:5874 Coq.Init.Datatypes <> nat ind
R5862:5867 Poly <> mumble ind
R5894:5899 Poly <> mumble ind
ind 5913:5919 MumbleGrumble grumble
constr 5944:5944 MumbleGrumble d
constr 5972:5972 MumbleGrumble e
R5954:5957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5958:5964 Poly <> grumble ind
R5966:5966 Poly <> X var
R5948:5953 Poly MumbleGrumble mumble ind
R5977:5980 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5981:5987 Poly <> grumble ind
R5989:5989 Poly <> X var
R5976:5976 Poly <> X var
R6285:6285 Poly MumbleGrumble d constr
R6295:6295 Poly MumbleGrumble b constr
R6297:6297 Poly MumbleGrumble a constr
R6287:6292 Poly MumbleGrumble mumble ind
R6311:6311 Poly MumbleGrumble e constr
R6321:6321 Poly MumbleGrumble b constr
R6323:6323 Poly MumbleGrumble c constr
R6313:6318 Poly MumbleGrumble mumble ind
R6345:6357 Poly MumbleGrumble <> mod
def 6635:6641 <> repeat'
R6655:6658 Poly <> list ind
R6660:6660 Poly <> X var
R6673:6677 Poly <> count var
R6700:6702 Poly <> nil constr
R6704:6704 Poly <> X var
R6710:6710 Coq.Init.Datatypes <> S constr
R6722:6725 Poly <> cons constr
R6732:6738 Poly <> repeat' def
R6742:6742 Poly <> x var
R6740:6740 Poly <> X var
R6729:6729 Poly <> x var
R6727:6727 Poly <> X var
R6842:6848 Poly <> repeat' def
R6904:6909 Poly <> repeat def
def 9451:9458 <> repeat''
R9472:9475 Poly <> list ind
R9477:9477 Poly <> X var
R9490:9494 Poly <> count var
R9517:9519 Poly <> nil constr
R9527:9527 Coq.Init.Datatypes <> S constr
R9539:9542 Poly <> cons constr
R9549:9556 Poly <> repeat'' def
R9560:9560 Poly <> x var
R9546:9546 Poly <> x var
def 9886:9892 <> list123
R9899:9902 Poly <> cons constr
R9911:9914 Poly <> cons constr
R9923:9926 Poly <> cons constr
R9935:9937 Poly <> nil constr
R9939:9941 Coq.Init.Datatypes <> nat ind
R9928:9930 Coq.Init.Datatypes <> nat ind
R9916:9918 Coq.Init.Datatypes <> nat ind
R9904:9906 Coq.Init.Datatypes <> nat ind
def 10015:10022 <> list123'
R10029:10032 Poly <> cons constr
R10039:10042 Poly <> cons constr
R10049:10052 Poly <> cons constr
R10059:10061 Poly <> nil constr
R10682:10684 Poly <> nil constr
R10682:10684 Poly <> nil constr
R10701:10704 Poly <> cons constr
R10701:10704 Poly <> cons constr
R10725:10730 Poly <> repeat def
R10725:10730 Poly <> repeat def
def 10817:10825 <> list123''
R10830:10833 Poly <> cons constr
R10838:10841 Poly <> cons constr
R10846:10849 Poly <> cons constr
R10853:10855 Poly <> nil constr
def 11045:11053 <> repeat'''
R11071:11071 Poly <> X var
R11083:11085 Coq.Init.Datatypes <> nat ind
R11090:11093 Poly <> list ind
R11095:11095 Poly <> X var
R11108:11112 Poly <> count var
R11135:11137 Poly <> nil constr
R11143:11143 Coq.Init.Datatypes <> S constr
R11155:11158 Poly <> cons constr
R11163:11171 Poly <> repeat''' def
R11173:11173 Poly <> x var
R11160:11160 Poly <> x var
ind 11772:11776 <> list'
constr 11801:11804 <> nil'
constr 11818:11822 <> cons'
R11808:11812 Poly <> list' ind
R11808:11812 Poly <> X var
R11827:11830 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11836:11839 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11840:11844 Poly <> list' ind
R11840:11844 Poly <> X var
R11831:11835 Poly <> list' ind
R11831:11835 Poly <> X var
R11826:11826 Poly <> X var
def 12280:12282 <> app
R12304:12307 Poly <> list ind
R12309:12309 Poly <> X var
R12328:12331 Poly <> list ind
R12333:12333 Poly <> X var
R12347:12348 Poly <> l1 var
R12359:12361 Poly <> nil constr
R12371:12372 Poly <> l2 var
R12378:12381 Poly <> cons constr
R12390:12393 Poly <> cons constr
R12398:12400 Poly <> app def
R12404:12405 Poly <> l2 var
def 12425:12427 <> rev
R12441:12444 Poly <> list ind
R12446:12446 Poly <> X var
R12451:12454 Poly <> list ind
R12456:12456 Poly <> X var
R12469:12469 Poly <> l var
R12480:12482 Poly <> nil constr
R12492:12494 Poly <> nil constr
R12500:12503 Poly <> cons constr
R12512:12514 Poly <> app def
R12525:12528 Poly <> cons constr
R12532:12534 Poly <> nil constr
R12517:12519 Poly <> rev def
def 12554:12559 <> length
R12577:12580 Poly <> list ind
R12582:12582 Poly <> X var
R12587:12589 Coq.Init.Datatypes <> nat ind
R12602:12602 Poly <> l var
R12613:12615 Poly <> nil constr
R12626:12629 Poly <> cons constr
R12639:12639 Coq.Init.Datatypes <> S constr
R12642:12647 Poly <> length def
def 12669:12677 <> test_rev1
R12708:12711 Coq.Init.Logic <> :type_scope:x_'='_x not
R12731:12731 Coq.Init.Logic <> :type_scope:x_'='_x not
R12683:12685 Poly <> rev def
R12688:12691 Poly <> cons constr
R12696:12699 Poly <> cons constr
R12703:12705 Poly <> nil constr
R12712:12715 Poly <> cons constr
R12720:12723 Poly <> cons constr
R12727:12729 Poly <> nil constr
def 12769:12777 <> test_rev2
R12801:12803 Coq.Init.Logic <> :type_scope:x_'='_x not
R12782:12784 Poly <> rev def
R12787:12790 Poly <> cons constr
R12797:12799 Poly <> nil constr
R12792:12795 Basics <> true constr
R12804:12807 Poly <> cons constr
R12814:12816 Poly <> nil constr
R12809:12812 Basics <> true constr
def 12854:12865 <> test_length1
R12905:12907 Coq.Init.Logic <> :type_scope:x_'='_x not
R12868:12873 Poly <> length def
R12876:12879 Poly <> cons constr
R12884:12887 Poly <> cons constr
R12892:12895 Poly <> cons constr
R12899:12901 Poly <> nil constr
def 13381:13385 <> mynil
R13390:13392 Poly <> nil constr
def 13959:13963 <> mynil
R13967:13970 Poly <> list ind
R13972:13974 Coq.Init.Datatypes <> nat ind
R13979:13981 Poly <> nil constr
R14110:14112 Poly <> nil constr
def 14127:14132 <> mynil'
R14138:14140 Poly <> nil constr
R14142:14144 Coq.Init.Datatypes <> nat ind
R14426:14429 Poly <> cons constr
not 14413:14413 <> ::x_'::'_x
R14511:14513 Poly <> nil constr
not 14502:14502 <> ::'['_']'
R14546:14549 Poly <> cons constr
R14557:14560 Poly <> cons constr
R14564:14565 Poly <> ::'['_']' not
not 14525:14525 <> ::'['_x_';'_'..'_';'_x_']'
R14595:14597 Poly <> app def
not 14582:14582 <> ::x_'++'_x
def 14730:14739 <> list123'''
R14744:14744 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14746:14747 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14749:14750 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14752:14752 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 15060:15068 <> app_nil_r
R15098:15101 Poly <> list ind
R15103:15103 Poly <> X var
R15115:15117 Coq.Init.Logic <> :type_scope:x_'='_x not
R15109:15112 Poly <> ::x_'++'_x not
R15108:15108 Poly <> l var
R15113:15114 Poly <> ::'['_']' not
R15118:15118 Poly <> l var
prf 15243:15251 <> app_assoc
R15271:15274 Poly <> list ind
R15276:15276 Poly <> A var
R15293:15295 Coq.Init.Logic <> :type_scope:x_'='_x not
R15283:15286 Poly <> ::x_'++'_x not
R15282:15282 Poly <> l var
R15288:15291 Poly <> ::x_'++'_x not
R15287:15287 Poly <> m var
R15292:15292 Poly <> n var
R15296:15296 Poly <> ::x_'++'_x not
R15303:15307 Poly <> ::x_'++'_x not
R15298:15301 Poly <> ::x_'++'_x not
R15297:15297 Poly <> l var
R15302:15302 Poly <> m var
R15308:15308 Poly <> n var
prf 15435:15444 <> app_length
R15473:15476 Poly <> list ind
R15478:15478 Poly <> X var
R15501:15503 Coq.Init.Logic <> :type_scope:x_'='_x not
R15484:15489 Poly <> length def
R15494:15497 Poly <> ::x_'++'_x not
R15492:15493 Poly <> l1 var
R15498:15499 Poly <> l2 var
R15513:15515 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15504:15509 Poly <> length def
R15511:15512 Poly <> l1 var
R15516:15521 Poly <> length def
R15523:15524 Poly <> l2 var
prf 15783:15795 <> rev_app_distr
R15816:15819 Poly <> list ind
R15821:15821 Poly <> X var
R15841:15843 Coq.Init.Logic <> :type_scope:x_'='_x not
R15827:15829 Poly <> rev def
R15834:15837 Poly <> ::x_'++'_x not
R15832:15833 Poly <> l1 var
R15838:15839 Poly <> l2 var
R15850:15853 Poly <> ::x_'++'_x not
R15844:15846 Poly <> rev def
R15848:15849 Poly <> l2 var
R15854:15856 Poly <> rev def
R15858:15859 Poly <> l1 var
R15942:15950 Poly <> app_nil_r thm
R15942:15950 Poly <> app_nil_r thm
R15942:15950 Poly <> app_nil_r thm
R16000:16008 Poly <> app_assoc thm
R16000:16008 Poly <> app_assoc thm
R16000:16008 Poly <> app_assoc thm
prf 16038:16051 <> rev_involutive
R16083:16086 Poly <> list ind
R16088:16088 Poly <> X var
R16104:16106 Coq.Init.Logic <> :type_scope:x_'='_x not
R16093:16095 Poly <> rev def
R16098:16100 Poly <> rev def
R16102:16102 Poly <> l var
R16107:16107 Poly <> l var
R16198:16210 Poly <> rev_app_distr thm
R16198:16210 Poly <> rev_app_distr thm
R16198:16210 Poly <> rev_app_distr thm
ind 16555:16558 <> prod
constr 16585:16588 <> pair
R16593:16596 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16598:16601 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16602:16605 Poly <> prod ind
R16609:16609 Poly <> Y var
R16607:16607 Poly <> X var
R16597:16597 Poly <> Y var
R16592:16592 Poly <> X var
R16623:16626 Poly <> pair constr
R16623:16626 Poly <> pair constr
R16773:16776 Poly <> pair constr
not 16757:16757 <> ::'('_x_','_x_')'
R16912:16915 Poly <> prod ind
not 16900:16900 <> :type_scope:x_'*'_x
def 17514:17516 <> fst
R17537:17539 Poly <> :type_scope:x_'*'_x not
R17536:17536 Poly <> X var
R17540:17540 Poly <> Y var
R17545:17545 Poly <> X var
R17558:17558 Poly <> p var
R17569:17569 Poly <> ::'('_x_','_x_')' not
R17571:17572 Poly <> ::'('_x_','_x_')' not
R17574:17574 Poly <> ::'('_x_','_x_')' not
def 17600:17602 <> snd
R17623:17625 Poly <> :type_scope:x_'*'_x not
R17622:17622 Poly <> X var
R17626:17626 Poly <> Y var
R17631:17631 Poly <> Y var
R17644:17644 Poly <> p var
R17655:17655 Poly <> ::'('_x_','_x_')' not
R17657:17658 Poly <> ::'('_x_','_x_')' not
R17660:17660 Poly <> ::'('_x_','_x_')' not
def 17907:17913 <> combine
R17934:17937 Poly <> list ind
R17939:17939 Poly <> X var
R17948:17951 Poly <> list ind
R17953:17953 Poly <> Y var
R17969:17972 Poly <> list ind
R17976:17976 Poly <> :type_scope:x_'*'_x not
R17975:17975 Poly <> X var
R17977:17977 Poly <> Y var
R17995:17996 Poly <> ly var
R17991:17992 Poly <> lx var
R18007:18008 Poly <> ::'['_']' not
R18016:18017 Poly <> ::'['_']' not
R18026:18027 Poly <> ::'['_']' not
R18032:18033 Poly <> ::'['_']' not
R18040:18043 Poly <> ::x_'::'_x not
R18049:18052 Poly <> ::x_'::'_x not
R18065:18069 Poly <> ::x_'::'_x not
R18083:18083 Poly <> ::x_'::'_x not
R18059:18059 Poly <> ::'('_x_','_x_')' not
R18061:18062 Poly <> ::'('_x_','_x_')' not
R18064:18064 Poly <> ::'('_x_','_x_')' not
R18070:18076 Poly <> combine def
def 18813:18817 <> split
R18837:18840 Poly <> list ind
R18844:18844 Poly <> :type_scope:x_'*'_x not
R18843:18843 Poly <> X var
R18845:18845 Poly <> Y var
R18866:18866 Poly <> :type_scope:x_'*'_x not
R18873:18877 Poly <> :type_scope:x_'*'_x not
R18884:18884 Poly <> :type_scope:x_'*'_x not
R18867:18870 Poly <> list ind
R18872:18872 Poly <> X var
R18878:18881 Poly <> list ind
R18883:18883 Poly <> Y var
R18899:18899 Poly <> l var
R18914:18916 Poly <> nil constr
R18921:18921 Poly <> ::'('_x_','_x_')' not
R18925:18926 Poly <> ::'('_x_','_x_')' not
R18930:18930 Poly <> ::'('_x_','_x_')' not
R18922:18924 Poly <> nil constr
R18927:18929 Poly <> nil constr
R18945:18946 Poly <> ::x_'::'_x not
R18940:18940 Poly <> ::'('_x_','_x_')' not
R18942:18942 Poly <> ::'('_x_','_x_')' not
R18944:18944 Poly <> ::'('_x_','_x_')' not
R18968:18972 Poly <> split def
R19003:19003 Poly <> ::'('_x_','_x_')' not
R19009:19009 Poly <> ::'('_x_','_x_')' not
R19015:19015 Poly <> ::'('_x_','_x_')' not
R19005:19006 Poly <> ::x_'::'_x not
R19007:19008 Poly <> lx var
R19011:19012 Poly <> ::x_'::'_x not
R19013:19014 Poly <> ly var
def 19035:19044 <> test_split
R19076:19078 Coq.Init.Logic <> :type_scope:x_'='_x not
R19049:19053 Poly <> split def
R19055:19055 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19065:19065 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19075:19075 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19056:19056 Poly <> ::'('_x_','_x_')' not
R19058:19058 Poly <> ::'('_x_','_x_')' not
R19064:19064 Poly <> ::'('_x_','_x_')' not
R19059:19063 Basics <> false constr
R19066:19066 Poly <> ::'('_x_','_x_')' not
R19068:19068 Poly <> ::'('_x_','_x_')' not
R19074:19074 Poly <> ::'('_x_','_x_')' not
R19069:19073 Basics <> false constr
R19079:19079 Poly <> ::'('_x_','_x_')' not
R19085:19085 Poly <> ::'('_x_','_x_')' not
R19099:19099 Poly <> ::'('_x_','_x_')' not
R19080:19080 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19082:19082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19084:19084 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19086:19086 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19092:19092 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19098:19098 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19087:19091 Basics <> false constr
R19093:19097 Basics <> false constr
ind 19380:19385 <> option
constr 19410:19413 <> Some
constr 19435:19438 <> None
R19418:19421 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19422:19427 Poly <> option ind
R19429:19429 Poly <> X var
R19417:19417 Poly <> X var
R19442:19447 Poly <> option ind
R19449:19449 Poly <> X var
R19463:19466 Poly <> Some constr
R19463:19466 Poly <> Some constr
R19485:19488 Poly <> None constr
R19485:19488 Poly <> None constr
def 19602:19610 <> nth_error
R19628:19631 Poly <> list ind
R19633:19633 Poly <> X var
R19641:19643 Coq.Init.Datatypes <> nat ind
R19667:19672 Poly <> option ind
R19674:19674 Poly <> X var
R19687:19687 Poly <> l var
R19698:19699 Poly <> ::'['_']' not
R19704:19707 Poly <> None constr
R19714:19717 Poly <> ::x_'::'_x not
R19727:19733 Basics <> beq_nat def
R19737:19737 Coq.Init.Datatypes <> O constr
R19735:19735 Poly <> n var
R19756:19764 Poly <> nth_error def
R19770:19773 Coq.Init.Peano <> pred syndef
R19775:19775 Poly <> n var
R19744:19747 Poly <> Some constr
def 19794:19808 <> test_nth_error1
R19833:19835 Coq.Init.Logic <> :type_scope:x_'='_x not
R19812:19820 Poly <> nth_error def
R19822:19822 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19824:19824 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19826:19826 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19828:19828 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19830:19830 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19836:19839 Poly <> Some constr
def 19877:19891 <> test_nth_error2
R19916:19918 Coq.Init.Logic <> :type_scope:x_'='_x not
R19895:19903 Poly <> nth_error def
R19905:19905 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19909:19909 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19913:19913 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19906:19906 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19908:19908 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19910:19910 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19912:19912 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19919:19922 Poly <> Some constr
R19924:19924 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19926:19926 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19962:19976 <> test_nth_error3
R19998:20000 Coq.Init.Logic <> :type_scope:x_'='_x not
R19980:19988 Poly <> nth_error def
R19990:19990 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19995:19995 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19991:19994 Basics <> true constr
R20001:20004 Poly <> None constr
def 20260:20267 <> hd_error
R20285:20288 Poly <> list ind
R20290:20290 Poly <> X var
R20295:20300 Poly <> option ind
R20302:20302 Poly <> X var
R20315:20315 Poly <> l var
R20328:20330 Poly <> nil constr
R20335:20338 Poly <> None constr
R20347:20348 Poly <> ::x_'::'_x not
R20355:20358 Poly <> Some constr
R20497:20504 Poly <> hd_error def
def 20516:20529 <> test_hd_error1
R20547:20549 Coq.Init.Logic <> :type_scope:x_'='_x not
R20533:20540 Poly <> hd_error def
R20542:20542 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20544:20544 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20546:20546 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20550:20553 Poly <> Some constr
def 20591:20604 <> test_hd_error2
R20627:20630 Coq.Init.Logic <> :type_scope:x_'='_x not
R20608:20615 Poly <> hd_error def
R20618:20618 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20622:20622 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20626:20626 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20619:20619 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20621:20621 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20623:20623 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20625:20625 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20631:20634 Poly <> Some constr
R20636:20636 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20638:20638 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21325:21334 <> doit3times
R21349:21350 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21351:21351 Poly <> X var
R21348:21348 Poly <> X var
R21357:21357 Poly <> X var
R21362:21362 Poly <> X var
R21369:21369 Poly <> f var
R21372:21372 Poly <> f var
R21375:21375 Poly <> f var
R21377:21377 Poly <> n var
R21536:21545 Poly <> doit3times def
def 21617:21631 <> test_doit3times
R21655:21657 Coq.Init.Logic <> :type_scope:x_'='_x not
R21634:21643 Poly <> doit3times def
R21645:21652 Basics <> minustwo def
def 21696:21711 <> test_doit3times'
R21734:21736 Coq.Init.Logic <> :type_scope:x_'='_x not
R21714:21723 Poly <> doit3times def
R21730:21733 Basics <> true constr
R21725:21728 Basics <> negb def
R21737:21741 Basics <> false constr
def 22132:22137 <> filter
R22156:22157 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22158:22161 Basics <> bool ind
R22155:22155 Poly <> X var
R22167:22170 Poly <> list ind
R22172:22172 Poly <> X var
R22194:22197 Poly <> list ind
R22199:22199 Poly <> X var
R22213:22213 Poly <> l var
R22224:22225 Poly <> ::'['_']' not
R22234:22235 Poly <> ::'['_']' not
R22242:22245 Poly <> ::x_'::'_x not
R22254:22257 Poly <> test var
R22322:22327 Poly <> filter def
R22329:22332 Poly <> test var
R22267:22271 Poly <> ::x_'::'_x not
R22285:22285 Poly <> ::x_'::'_x not
R22272:22277 Poly <> filter def
R22279:22282 Poly <> test var
def 22513:22524 <> test_filter1
R22549:22551 Coq.Init.Logic <> :type_scope:x_'='_x not
R22527:22532 Poly <> filter def
R22540:22540 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22542:22542 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22544:22544 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22546:22546 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22548:22548 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22534:22538 Basics <> evenb def
R22552:22552 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22554:22554 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22556:22556 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22597:22607 <> length_is_1
R22625:22628 Poly <> list ind
R22630:22630 Poly <> X var
R22635:22638 Basics <> bool ind
R22645:22651 Basics <> beq_nat def
R22654:22659 Poly <> length def
R22661:22661 Poly <> l var
def 22676:22687 <> test_filter2
R22762:22766 Coq.Init.Logic <> :type_scope:x_'='_x not
R22694:22699 Poly <> filter def
R22724:22725 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22732:22733 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22737:22738 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22742:22743 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22751:22752 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22755:22756 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22760:22761 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22726:22726 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22728:22729 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22731:22731 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22734:22734 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22736:22736 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22739:22739 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22741:22741 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22744:22744 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22746:22746 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22748:22748 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22750:22750 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22753:22754 Poly <> ::'['_']' not
R22757:22757 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22759:22759 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22701:22711 Poly <> length_is_1 def
R22767:22768 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22772:22773 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22777:22778 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22782:22783 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22769:22769 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22771:22771 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22774:22774 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22776:22776 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22779:22779 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22781:22781 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22942:22957 <> countoddmembers'
R22962:22965 Poly <> list ind
R22967:22969 Coq.Init.Datatypes <> nat ind
R22974:22976 Coq.Init.Datatypes <> nat ind
R22983:22988 Poly <> length def
R22991:22996 Poly <> filter def
R23003:23003 Poly <> l var
R22998:23001 Basics <> oddb def
def 23016:23037 <> test_countoddmembers'1
R23072:23074 Coq.Init.Logic <> :type_scope:x_'='_x not
R23042:23057 Poly <> countoddmembers' def
R23059:23059 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23061:23061 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23063:23063 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23065:23065 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23067:23067 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23069:23069 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23071:23071 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23112:23133 <> test_countoddmembers'2
R23162:23164 Coq.Init.Logic <> :type_scope:x_'='_x not
R23138:23153 Poly <> countoddmembers' def
R23155:23155 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23157:23157 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23159:23159 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23161:23161 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23202:23223 <> test_countoddmembers'3
R23248:23250 Coq.Init.Logic <> :type_scope:x_'='_x not
R23228:23243 Poly <> countoddmembers' def
R23245:23247 Poly <> nil constr
def 24029:24042 <> test_anon_fun'
R24076:24078 Coq.Init.Logic <> :type_scope:x_'='_x not
R24047:24056 Poly <> doit3times def
R24069:24071 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R24068:24068 Poly <> n var
R24072:24072 Poly <> n var
def 24319:24331 <> test_filter2'
R24426:24430 Coq.Init.Logic <> :type_scope:x_'='_x not
R24338:24343 Poly <> filter def
R24388:24389 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24396:24397 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24401:24402 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24406:24407 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24415:24416 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24419:24420 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24424:24425 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24390:24390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24392:24393 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24395:24395 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24398:24398 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24400:24400 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24403:24403 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24405:24405 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24408:24408 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24410:24410 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24412:24412 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24414:24414 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24417:24418 Poly <> ::'['_']' not
R24421:24421 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24423:24423 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24355:24361 Basics <> beq_nat def
R24364:24369 Poly <> length def
R24371:24371 Poly <> l var
R24431:24432 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24436:24437 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24441:24442 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24446:24447 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24433:24433 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24435:24435 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24438:24438 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24440:24440 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24443:24443 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24445:24445 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24749:24763 <> filter_even_gt7
R24770:24773 Poly <> list ind
R24775:24777 Coq.Init.Datatypes <> nat ind
R24782:24785 Poly <> list ind
R24787:24789 Coq.Init.Datatypes <> nat ind
R24798:24803 Poly <> filter def
R24841:24841 Poly <> l var
R24815:24818 Basics <> andb def
R24831:24833 Basics <> leb def
R24837:24837 Poly <> n var
R24821:24825 Basics <> evenb def
R24827:24827 Poly <> n var
def 24853:24874 <> test_filter_even_gt7_1
R24915:24917 Coq.Init.Logic <> :type_scope:x_'='_x not
R24880:24894 Poly <> filter_even_gt7 def
R24896:24896 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24898:24898 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24900:24900 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24902:24902 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24904:24904 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24907:24907 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24909:24909 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24912:24912 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24914:24914 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24918:24918 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24921:24921 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24924:24924 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24926:24926 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24964:24985 <> test_filter_even_gt7_2
R25021:25023 Coq.Init.Logic <> :type_scope:x_'='_x not
R24991:25005 Poly <> filter_even_gt7 def
R25007:25007 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25009:25009 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25011:25011 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25013:25013 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25016:25016 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25020:25020 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25024:25025 Poly <> ::'['_']' not
def 25685:25693 <> partition
R25736:25739 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25740:25743 Basics <> bool ind
R25735:25735 Poly <> X var
R25772:25775 Poly <> list ind
R25777:25777 Poly <> X var
R25807:25809 Poly <> :type_scope:x_'*'_x not
R25801:25804 Poly <> list ind
R25806:25806 Poly <> X var
R25810:25813 Poly <> list ind
R25815:25815 Poly <> X var
R25820:25820 Poly <> ::'('_x_','_x_')' not
R25834:25835 Poly <> ::'('_x_','_x_')' not
R25869:25869 Poly <> ::'('_x_','_x_')' not
R25821:25826 Poly <> filter def
R25833:25833 Poly <> l var
R25828:25831 Poly <> test var
R25836:25841 Poly <> filter def
R25868:25868 Poly <> l var
R25853:25856 Basics <> negb def
R25859:25862 Poly <> test var
R25864:25864 Poly <> x var
def 26059:26073 <> test_partition1
R26102:26104 Coq.Init.Logic <> :type_scope:x_'='_x not
R26076:26084 Poly <> partition def
R26091:26091 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26093:26093 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26095:26095 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26097:26097 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26099:26099 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26101:26101 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26086:26089 Basics <> oddb def
R26105:26105 Poly <> ::'('_x_','_x_')' not
R26113:26114 Poly <> ::'('_x_','_x_')' not
R26120:26120 Poly <> ::'('_x_','_x_')' not
R26106:26106 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26108:26108 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26110:26110 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26112:26112 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26115:26115 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26117:26117 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26119:26119 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26156:26170 <> test_partition2
R26207:26209 Coq.Init.Logic <> :type_scope:x_'='_x not
R26173:26181 Poly <> partition def
R26200:26200 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26202:26202 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26204:26204 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26206:26206 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26193:26197 Basics <> false constr
R26210:26210 Poly <> ::'('_x_','_x_')' not
R26213:26214 Poly <> ::'('_x_','_x_')' not
R26222:26222 Poly <> ::'('_x_','_x_')' not
R26211:26212 Poly <> ::'['_']' not
R26215:26215 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26217:26217 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26219:26219 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26221:26221 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26418:26420 <> map
R26437:26438 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26439:26439 Poly <> Y var
R26436:26436 Poly <> X var
R26445:26448 Poly <> list ind
R26450:26450 Poly <> X var
R26456:26459 Poly <> list ind
R26461:26461 Poly <> Y var
R26475:26475 Poly <> l var
R26486:26487 Poly <> ::'['_']' not
R26496:26497 Poly <> ::'['_']' not
R26504:26507 Poly <> ::x_'::'_x not
R26513:26513 Poly <> ::x_'::'_x not
R26517:26522 Poly <> ::x_'::'_x not
R26530:26530 Poly <> ::x_'::'_x not
R26514:26514 Poly <> f var
R26523:26525 Poly <> map def
R26527:26527 Poly <> f var
def 26747:26755 <> test_map1
R26789:26791 Coq.Init.Logic <> :type_scope:x_'='_x not
R26758:26760 Poly <> map def
R26782:26782 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26784:26784 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26786:26786 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26788:26788 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26772:26775 Coq.Init.Peano <> plus syndef
R26779:26779 Poly <> x var
R26792:26792 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26794:26794 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26796:26796 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26798:26798 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27092:27100 <> test_map2
R27123:27125 Coq.Init.Logic <> :type_scope:x_'='_x not
R27105:27107 Poly <> map def
R27114:27114 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27116:27116 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27118:27118 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27120:27120 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27122:27122 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27109:27112 Basics <> oddb def
R27126:27126 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27132:27132 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27137:27137 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27143:27143 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27148:27148 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27127:27131 Basics <> false constr
R27133:27136 Basics <> true constr
R27138:27142 Basics <> false constr
R27144:27147 Basics <> true constr
def 27337:27345 <> test_map3
R27393:27397 Coq.Init.Logic <> :type_scope:x_'='_x not
R27352:27354 Poly <> map def
R27384:27384 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27386:27386 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27388:27388 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27390:27390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27392:27392 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27366:27366 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27374:27374 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27381:27381 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27367:27371 Basics <> evenb def
R27373:27373 Poly <> n var
R27375:27378 Basics <> oddb def
R27380:27380 Poly <> n var
R27398:27398 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27411:27411 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27424:27424 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27437:27437 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27450:27450 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27399:27399 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27404:27404 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27410:27410 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27400:27403 Basics <> true constr
R27405:27409 Basics <> false constr
R27412:27412 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27418:27418 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27423:27423 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27413:27417 Basics <> false constr
R27419:27422 Basics <> true constr
R27425:27425 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27430:27430 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27436:27436 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27426:27429 Basics <> true constr
R27431:27435 Basics <> false constr
R27438:27438 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27444:27444 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27449:27449 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27439:27443 Basics <> false constr
R27445:27448 Basics <> true constr
prf 27716:27728 <> map_app_distr
R27754:27757 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27758:27758 Poly <> Y var
R27753:27753 Poly <> X var
R27766:27769 Poly <> list ind
R27771:27771 Poly <> X var
R27791:27793 Coq.Init.Logic <> :type_scope:x_'='_x not
R27777:27779 Poly <> map def
R27785:27788 Poly <> ::x_'++'_x not
R27784:27784 Poly <> l var
R27789:27789 Poly <> r var
R27781:27781 Poly <> f var
R27794:27794 Poly <> ::x_'++'_x not
R27802:27807 Poly <> ::x_'++'_x not
R27815:27815 Poly <> ::x_'++'_x not
R27795:27797 Poly <> map def
R27801:27801 Poly <> l var
R27799:27799 Poly <> f var
R27808:27810 Poly <> map def
R27814:27814 Poly <> r var
R27812:27812 Poly <> f var
prf 27945:27951 <> map_rev
R27981:27984 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27985:27985 Poly <> Y var
R27980:27980 Poly <> X var
R27993:27996 Poly <> list ind
R27998:27998 Poly <> X var
R28017:28019 Coq.Init.Logic <> :type_scope:x_'='_x not
R28004:28006 Poly <> map def
R28011:28013 Poly <> rev def
R28015:28015 Poly <> l var
R28008:28008 Poly <> f var
R28020:28022 Poly <> rev def
R28025:28027 Poly <> map def
R28031:28031 Poly <> l var
R28029:28029 Poly <> f var
R28126:28128 Poly <> map def
R28139:28151 Poly <> map_app_distr thm
R28139:28151 Poly <> map_app_distr thm
R28139:28151 Poly <> map_app_distr thm
def 28664:28671 <> flat_map
R28688:28691 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28692:28695 Poly <> list ind
R28697:28697 Poly <> Y var
R28687:28687 Poly <> X var
R28703:28706 Poly <> list ind
R28708:28708 Poly <> X var
R28733:28736 Poly <> list ind
R28738:28738 Poly <> Y var
R28752:28752 Poly <> l var
R28764:28765 Poly <> ::'['_']' not
R28770:28771 Poly <> ::'['_']' not
R28779:28780 Poly <> ::x_'::'_x not
R28787:28789 Poly <> app def
R28798:28805 Poly <> flat_map def
R28807:28807 Poly <> f var
R28792:28792 Poly <> f var
def 28829:28842 <> test_flat_map1
R28882:28886 Coq.Init.Logic <> :type_scope:x_'='_x not
R28847:28854 Poly <> flat_map def
R28875:28875 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28877:28877 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28879:28879 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28881:28881 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28866:28866 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28868:28868 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28870:28870 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28872:28872 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28867:28867 Poly <> n var
R28869:28869 Poly <> n var
R28871:28871 Poly <> n var
R28887:28887 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28889:28890 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28892:28893 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28895:28896 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28898:28899 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28901:28902 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28904:28905 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28907:28908 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28910:28911 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28913:28913 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 29113:29122 <> option_map
R29143:29146 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29147:29147 Poly <> Y var
R29142:29142 Poly <> X var
R29156:29161 Poly <> option ind
R29163:29163 Poly <> X var
R29190:29195 Poly <> option ind
R29197:29197 Poly <> Y var
R29210:29211 Poly <> xo var
R29224:29227 Poly <> None constr
R29232:29235 Poly <> None constr
R29243:29246 Poly <> Some constr
R29253:29256 Poly <> Some constr
R29259:29259 Poly <> f var
def 30098:30101 <> fold
R30119:30120 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30122:30123 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30124:30124 Poly <> Y var
R30121:30121 Poly <> Y var
R30118:30118 Poly <> X var
R30130:30133 Poly <> list ind
R30135:30135 Poly <> X var
R30141:30141 Poly <> Y var
R30171:30171 Poly <> Y var
R30184:30184 Poly <> l var
R30195:30197 Poly <> nil constr
R30202:30202 Poly <> b var
R30209:30212 Poly <> ::x_'::'_x not
R30239:30239 Poly <> f var
R30244:30247 Poly <> fold def
R30253:30253 Poly <> b var
R30249:30249 Poly <> f var
R30728:30731 Poly <> fold def
R30733:30736 Basics <> andb def
def 30798:30810 <> fold_example1
R30837:30839 Coq.Init.Logic <> :type_scope:x_'='_x not
R30816:30819 Poly <> fold def
R30826:30826 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30828:30828 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30830:30830 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30832:30832 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30834:30834 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30821:30824 Coq.Init.Peano <> mult syndef
def 30878:30890 <> fold_example2
R30933:30935 Coq.Init.Logic <> :type_scope:x_'='_x not
R30896:30899 Poly <> fold def
R30929:30932 Basics <> true constr
R30906:30906 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30911:30911 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30916:30916 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30922:30922 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30927:30927 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30907:30910 Basics <> true constr
R30912:30915 Basics <> true constr
R30917:30921 Basics <> false constr
R30923:30926 Basics <> true constr
R30901:30904 Basics <> andb def
R30936:30940 Basics <> false constr
def 30977:30989 <> fold_example3
R31026:31028 Coq.Init.Logic <> :type_scope:x_'='_x not
R30995:30998 Poly <> fold def
R31024:31025 Poly <> ::'['_']' not
R31005:31005 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31009:31009 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31012:31012 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31018:31018 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31022:31022 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31006:31006 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31008:31008 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31010:31011 Poly <> ::'['_']' not
R31013:31013 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31015:31015 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31017:31017 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31019:31019 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31021:31021 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31000:31002 Poly <> app def
R31029:31029 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31031:31031 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31033:31033 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31035:31035 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31037:31037 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 31984:31991 <> constfun
R32007:32007 Poly <> X var
R32015:32016 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32017:32017 Poly <> X var
R32012:32014 Coq.Init.Datatypes <> nat ind
R32031:32033 Coq.Init.Datatypes <> nat ind
R32039:32039 Poly <> x var
def 32054:32058 <> ftrue
R32063:32070 Poly <> constfun def
R32072:32075 Basics <> true constr
def 32087:32103 <> constfun_example1
R32114:32116 Coq.Init.Logic <> :type_scope:x_'='_x not
R32107:32111 Poly <> ftrue def
R32117:32120 Basics <> true constr
def 32157:32173 <> constfun_example2
R32192:32194 Coq.Init.Logic <> :type_scope:x_'='_x not
R32178:32185 Poly <> constfun def
R32396:32399 Coq.Init.Peano <> plus syndef
def 33010:33014 <> plus3
R33019:33022 Coq.Init.Peano <> plus syndef
R33033:33037 Poly <> plus3 def
def 33049:33058 <> test_plus3
R33072:33074 Coq.Init.Logic <> :type_scope:x_'='_x not
R33065:33069 Poly <> plus3 def
def 33112:33122 <> test_plus3'
R33146:33148 Coq.Init.Logic <> :type_scope:x_'='_x not
R33128:33137 Poly <> doit3times def
R33139:33143 Poly <> plus3 def
def 33186:33197 <> test_plus3''
R33223:33225 Coq.Init.Logic <> :type_scope:x_'='_x not
R33202:33211 Poly <> doit3times def
R33214:33217 Coq.Init.Peano <> plus syndef
mod 33366:33374 <> Exercises
def 33577:33587 Exercises fold_length
R33605:33608 Poly <> list ind
R33610:33610 Poly <> X var
R33615:33617 Coq.Init.Datatypes <> nat ind
R33624:33627 Poly <> fold def
R33646:33646 Poly <> l var
R33641:33641 Coq.Init.Datatypes <> S constr
R33643:33643 Poly <> n var
def 33660:33676 Exercises test_fold_length1
R33699:33701 Coq.Init.Logic <> :type_scope:x_'='_x not
R33680:33690 Poly Exercises fold_length def
R33692:33692 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33694:33694 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33696:33696 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33698:33698 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 33787:33805 Exercises fold_length_correct
R33823:33826 Poly <> list ind
R33828:33828 Poly <> X var
R33847:33849 Coq.Init.Logic <> :type_scope:x_'='_x not
R33834:33844 Poly Exercises fold_length def
R33846:33846 Poly <> l var
R33850:33855 Poly <> length def
R33857:33857 Poly <> l var
R34117:34120 Poly <> fold def
def 34134:34141 Exercises fold_map
R34160:34163 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34164:34164 Poly <> Y var
R34159:34159 Poly <> X var
R34172:34175 Poly <> list ind
R34177:34177 Poly <> X var
R34182:34185 Poly <> list ind
R34187:34187 Poly <> Y var
R34194:34197 Poly <> fold def
R34223:34224 Poly <> ::'['_']' not
R34221:34221 Poly <> l var
R34211:34211 Poly <> ::x_'::'_x not
R34215:34217 Poly <> ::x_'::'_x not
R34212:34212 Poly <> f var
R34214:34214 Poly <> x var
R34218:34218 Poly <> y var
R34237:34244 Poly Exercises fold_map def
R34263:34263 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34265:34265 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34267:34267 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34269:34269 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34257:34259 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34256:34256 Poly <> x var
prf 34390:34403 Exercises fold_map_distr
R34429:34431 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34432:34432 Poly <> Y var
R34428:34428 Poly <> X var
R34440:34443 Poly <> list ind
R34445:34445 Poly <> X var
R34470:34472 Coq.Init.Logic <> :type_scope:x_'='_x not
R34451:34458 Poly Exercises fold_map def
R34464:34467 Poly <> ::x_'++'_x not
R34463:34463 Poly <> l var
R34468:34468 Poly <> r var
R34460:34460 Poly <> f var
R34473:34473 Poly <> ::x_'++'_x not
R34486:34491 Poly <> ::x_'++'_x not
R34504:34504 Poly <> ::x_'++'_x not
R34474:34481 Poly Exercises fold_map def
R34485:34485 Poly <> l var
R34483:34483 Poly <> f var
R34492:34499 Poly Exercises fold_map def
R34503:34503 Poly <> r var
R34501:34501 Poly <> f var
R34602:34604 Poly <> map def
R34614:34621 Poly Exercises fold_map def
R34639:34646 Poly Exercises fold_map def
prf 34710:34725 Exercises fold_map_correct
R34750:34753 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34754:34754 Poly <> Y var
R34749:34749 Poly <> X var
R34760:34763 Poly <> list ind
R34765:34765 Poly <> X var
R34783:34785 Coq.Init.Logic <> :type_scope:x_'='_x not
R34771:34778 Poly Exercises fold_map def
R34782:34782 Poly <> l var
R34780:34780 Poly <> f var
R34786:34788 Poly <> map def
R34792:34792 Poly <> l var
R34790:34790 Poly <> f var
R34887:34894 Poly Exercises fold_map def
R34911:34918 Poly Exercises fold_map def
def 35799:35808 Exercises prod_curry
R35837:35840 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35841:35841 Poly <> Z var
R35833:35835 Poly <> :type_scope:x_'*'_x not
R35832:35832 Poly <> X var
R35836:35836 Poly <> Y var
R35849:35849 Poly <> X var
R35857:35857 Poly <> Y var
R35862:35862 Poly <> Z var
R35867:35867 Poly <> f var
R35869:35869 Poly <> ::'('_x_','_x_')' not
R35871:35872 Poly <> ::'('_x_','_x_')' not
R35874:35874 Poly <> ::'('_x_','_x_')' not
R35870:35870 Poly <> x var
R35873:35873 Poly <> y var
def 36019:36030 Exercises prod_uncurry
R36055:36058 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36060:36063 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36064:36064 Poly <> Z var
R36059:36059 Poly <> Y var
R36054:36054 Poly <> X var
R36073:36075 Poly <> :type_scope:x_'*'_x not
R36072:36072 Poly <> X var
R36076:36076 Poly <> Y var
R36081:36081 Poly <> Z var
R36088:36088 Poly <> f var
R36099:36101 Poly <> snd def
R36103:36103 Poly <> p var
R36091:36093 Poly <> fst def
R36095:36095 Poly <> p var
def 36246:36255 Exercises test_map1'
R36278:36280 Coq.Init.Logic <> :type_scope:x_'='_x not
R36258:36260 Poly <> map def
R36271:36271 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36273:36273 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36275:36275 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36277:36277 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36263:36266 Coq.Init.Peano <> plus syndef
R36281:36281 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36283:36283 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36285:36285 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36287:36287 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36457:36466 Poly Exercises prod_curry def
R36476:36487 Poly Exercises prod_uncurry def
prf 36499:36511 Exercises uncurry_curry
R36567:36570 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36572:36575 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36576:36576 Poly <> Z var
R36571:36571 Poly <> Y var
R36566:36566 Poly <> X var
R36641:36643 Coq.Init.Logic <> :type_scope:x_'='_x not
R36610:36619 Poly Exercises prod_curry def
R36640:36640 Poly <> y var
R36638:36638 Poly <> x var
R36622:36633 Poly Exercises prod_uncurry def
R36635:36635 Poly <> f var
R36644:36644 Poly <> f var
R36648:36648 Poly <> y var
R36646:36646 Poly <> x var
R36689:36700 Poly Exercises prod_uncurry def
R36710:36719 Poly Exercises prod_curry def
prf 36749:36761 Exercises curry_uncurry
R36816:36816 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36822:36826 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36827:36827 Poly <> Z var
R36818:36820 Poly <> :type_scope:x_'*'_x not
R36817:36817 Poly <> X var
R36821:36821 Poly <> Y var
R36836:36838 Poly <> :type_scope:x_'*'_x not
R36835:36835 Poly <> X var
R36839:36839 Poly <> Y var
R36874:36876 Coq.Init.Logic <> :type_scope:x_'='_x not
R36845:36856 Poly Exercises prod_uncurry def
R36873:36873 Poly <> p var
R36859:36868 Poly Exercises prod_curry def
R36870:36870 Poly <> f var
R36877:36877 Poly <> f var
R36879:36879 Poly <> p var
R36918:36927 Poly Exercises prod_curry def
R36937:36948 Poly Exercises prod_uncurry def
mod 37816:37821 <> Exercises.Church
def 37835:37837 Exercises.Church nat
R37859:37859 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37866:37870 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37872:37875 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37876:37876 Poly <> X var
R37871:37871 Poly <> X var
R37861:37864 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37865:37865 Poly <> X var
R37860:37860 Poly <> X var
def 38032:38034 Exercises.Church one
R38038:38040 Poly Exercises.Church nat def
R38068:38071 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38072:38072 Poly <> X var
R38067:38067 Poly <> X var
R38080:38080 Poly <> X var
R38086:38086 Poly <> f var
R38088:38088 Poly <> x var
def 38168:38170 Exercises.Church two
R38174:38176 Poly Exercises.Church nat def
R38204:38207 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38208:38208 Poly <> X var
R38203:38203 Poly <> X var
R38216:38216 Poly <> X var
R38222:38222 Poly <> f var
R38225:38225 Poly <> f var
R38227:38227 Poly <> x var
def 38407:38410 Exercises.Church zero
R38414:38416 Poly Exercises.Church nat def
R38444:38447 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38448:38448 Poly <> X var
R38443:38443 Poly <> X var
R38456:38456 Poly <> X var
R38462:38462 Poly <> x var
def 38737:38741 Exercises.Church three
R38745:38747 Poly Exercises.Church nat def
R38753:38762 Poly <> doit3times def
def 38970:38973 Exercises.Church succ
R38980:38982 Poly Exercises.Church nat def
R38987:38989 Poly Exercises.Church nat def
R39016:39019 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39020:39020 Poly <> X var
R39015:39015 Poly <> X var
R39026:39026 Poly <> X var
R39032:39032 Poly <> f var
R39035:39035 Poly <> n var
R39041:39041 Poly <> x var
R39039:39039 Poly <> f var
R39037:39037 Poly <> X var
def 39054:39059 Exercises.Church succ_1
R39072:39074 Coq.Init.Logic <> :type_scope:x_'='_x not
R39063:39066 Poly Exercises.Church succ def
R39068:39071 Poly Exercises.Church zero def
R39075:39077 Poly Exercises.Church one def
def 39115:39120 Exercises.Church succ_2
R39132:39134 Coq.Init.Logic <> :type_scope:x_'='_x not
R39124:39127 Poly Exercises.Church succ def
R39129:39131 Poly Exercises.Church one def
R39135:39137 Poly Exercises.Church two def
def 39174:39179 Exercises.Church succ_3
R39191:39193 Coq.Init.Logic <> :type_scope:x_'='_x not
R39183:39186 Poly Exercises.Church succ def
R39188:39190 Poly Exercises.Church two def
R39194:39198 Poly Exercises.Church three def
def 39279:39282 Exercises.Church plus
R39291:39293 Poly Exercises.Church nat def
R39298:39300 Poly Exercises.Church nat def
R39324:39327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39328:39328 Poly <> X var
R39323:39323 Poly <> X var
R39333:39333 Poly <> X var
R39339:39339 Poly <> n var
R39346:39346 Poly <> m var
R39352:39352 Poly <> x var
R39350:39350 Poly <> f var
R39348:39348 Poly <> X var
R39343:39343 Poly <> f var
R39341:39341 Poly <> X var
def 39365:39370 Exercises.Church plus_1
R39387:39389 Coq.Init.Logic <> :type_scope:x_'='_x not
R39374:39377 Poly Exercises.Church plus def
R39384:39386 Poly Exercises.Church one def
R39379:39382 Poly Exercises.Church zero def
R39390:39392 Poly Exercises.Church one def
def 39429:39434 Exercises.Church plus_2
R39452:39454 Coq.Init.Logic <> :type_scope:x_'='_x not
R39438:39441 Poly Exercises.Church plus def
R39447:39451 Poly Exercises.Church three def
R39443:39445 Poly Exercises.Church two def
R39455:39458 Poly Exercises.Church plus def
R39466:39468 Poly Exercises.Church two def
R39460:39464 Poly Exercises.Church three def
def 39505:39510 Exercises.Church plus_3
R39541:39543 Coq.Init.Logic <> :type_scope:x_'='_x not
R39516:39519 Poly Exercises.Church plus def
R39536:39540 Poly Exercises.Church three def
R39522:39525 Poly Exercises.Church plus def
R39531:39533 Poly Exercises.Church two def
R39527:39529 Poly Exercises.Church two def
R39544:39547 Poly Exercises.Church plus def
R39554:39557 Poly Exercises.Church plus def
R39565:39569 Poly Exercises.Church three def
R39559:39563 Poly Exercises.Church three def
R39549:39551 Poly Exercises.Church one def
def 39634:39637 Exercises.Church mult
R39646:39648 Poly Exercises.Church nat def
R39653:39655 Poly Exercises.Church nat def
R39680:39683 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39684:39684 Poly <> X var
R39679:39679 Poly <> X var
R39690:39690 Poly <> X var
R39696:39696 Poly <> n var
R39708:39708 Poly <> x var
R39701:39701 Poly <> m var
R39705:39705 Poly <> f var
R39703:39703 Poly <> X var
R39698:39698 Poly <> X var
def 39720:39725 Exercises.Church mult_1
R39741:39743 Coq.Init.Logic <> :type_scope:x_'='_x not
R39729:39732 Poly Exercises.Church mult def
R39738:39740 Poly Exercises.Church one def
R39734:39736 Poly Exercises.Church one def
R39744:39746 Poly Exercises.Church one def
def 39784:39789 Exercises.Church mult_2
R39821:39823 Coq.Init.Logic <> :type_scope:x_'='_x not
R39793:39796 Poly Exercises.Church mult def
R39804:39807 Poly Exercises.Church plus def
R39815:39819 Poly Exercises.Church three def
R39809:39813 Poly Exercises.Church three def
R39798:39801 Poly Exercises.Church zero def
R39824:39827 Poly Exercises.Church zero def
def 39864:39869 Exercises.Church mult_3
R39887:39889 Coq.Init.Logic <> :type_scope:x_'='_x not
R39873:39876 Poly Exercises.Church mult def
R39882:39886 Poly Exercises.Church three def
R39878:39880 Poly Exercises.Church two def
R39890:39893 Poly Exercises.Church plus def
R39901:39905 Poly Exercises.Church three def
R39895:39899 Poly Exercises.Church three def
R40218:40220 Poly Exercises.Church nat def
def 40235:40237 Exercises.Church exp
R40246:40248 Poly Exercises.Church nat def
R40253:40255 Poly Exercises.Church nat def
R40277:40278 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40279:40279 Poly <> X var
R40276:40276 Poly <> X var
R40285:40285 Poly <> X var
R40292:40292 Poly <> m var
R40304:40304 Poly <> n var
R40306:40306 Poly <> X var
R40296:40299 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40300:40300 Poly <> X var
R40295:40295 Poly <> X var
R40312:40312 Poly <> x var
R40310:40310 Poly <> f var
def 40324:40328 Exercises.Church exp_1
R40343:40345 Coq.Init.Logic <> :type_scope:x_'='_x not
R40332:40334 Poly Exercises.Church exp def
R40340:40342 Poly Exercises.Church two def
R40336:40338 Poly Exercises.Church two def
R40346:40349 Poly Exercises.Church plus def
R40355:40357 Poly Exercises.Church two def
R40351:40353 Poly Exercises.Church two def
def 40394:40398 Exercises.Church exp_2
R40415:40417 Coq.Init.Logic <> :type_scope:x_'='_x not
R40402:40404 Poly Exercises.Church exp def
R40412:40414 Poly Exercises.Church two def
R40406:40410 Poly Exercises.Church three def
R40418:40421 Poly Exercises.Church plus def
R40449:40451 Poly Exercises.Church one def
R40424:40427 Poly Exercises.Church mult def
R40434:40437 Poly Exercises.Church mult def
R40443:40445 Poly Exercises.Church two def
R40439:40441 Poly Exercises.Church two def
R40429:40431 Poly Exercises.Church two def
R40490:40493 Poly Exercises.Church plus def
R40521:40523 Poly Exercises.Church one def
R40496:40499 Poly Exercises.Church mult def
R40506:40509 Poly Exercises.Church mult def
R40515:40517 Poly Exercises.Church two def
R40511:40513 Poly Exercises.Church two def
R40501:40503 Poly Exercises.Church two def
R40536:40538 Poly Exercises.Church exp def
R40546:40548 Poly Exercises.Church two def
R40540:40544 Poly Exercises.Church three def
def 40561:40565 Exercises.Church exp_3
R40583:40585 Coq.Init.Logic <> :type_scope:x_'='_x not
R40569:40571 Poly Exercises.Church exp def
R40579:40582 Poly Exercises.Church zero def
R40573:40577 Poly Exercises.Church three def
R40586:40588 Poly Exercises.Church one def
R40622:40627 Poly Exercises.Church <> mod
R40645:40653 Poly Exercises <> mod
