DIGEST 1ec3fc24df36e0b88ae997503c8024aa
FPoly
R280:284 Lists <> <> lib
ind 1168:1175 <> boollist
constr 1191:1198 <> bool_nil
constr 1215:1223 <> bool_cons
R1202:1209 Poly <> boollist ind
R1231:1234 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1243:1246 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1247:1254 Poly <> boollist ind
R1235:1242 Poly <> boollist ind
R1227:1230 Basics <> bool ind
ind 1728:1731 <> list
constr 1756:1758 <> nil
constr 1773:1776 <> cons
R1762:1765 Poly <> list ind
R1767:1767 Poly <> X var
R1781:1784 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1791:1794 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1795:1798 Poly <> list ind
R1800:1800 Poly <> X var
R1785:1788 Poly <> list ind
R1790:1790 Poly <> X var
R1780:1780 Poly <> X var
R2691:2694 Poly <> list ind
R3062:3064 Poly <> nil constr
R3066:3068 Coq.Init.Datatypes <> nat ind
R3282:3285 Poly <> cons constr
R3294:3296 Poly <> nil constr
R3298:3300 Coq.Init.Datatypes <> nat ind
R3287:3289 Coq.Init.Datatypes <> nat ind
R3691:3693 Poly <> nil constr
R3961:3964 Poly <> cons constr
R4030:4033 Poly <> cons constr
R4035:4037 Coq.Init.Datatypes <> nat ind
R4660:4663 Poly <> cons constr
R4672:4675 Poly <> cons constr
R4684:4686 Poly <> nil constr
R4688:4690 Coq.Init.Datatypes <> nat ind
R4677:4679 Coq.Init.Datatypes <> nat ind
R4665:4667 Coq.Init.Datatypes <> nat ind
def 5043:5048 <> repeat
R5066:5066 Poly <> X var
R5078:5080 Coq.Init.Datatypes <> nat ind
R5085:5088 Poly <> list ind
R5090:5090 Poly <> X var
R5103:5107 Poly <> count var
R5123:5125 Poly <> nil constr
R5127:5127 Poly <> X var
R5133:5133 Coq.Init.Datatypes <> S constr
R5145:5148 Poly <> cons constr
R5155:5160 Poly <> repeat def
R5164:5164 Poly <> x var
R5162:5162 Poly <> X var
R5152:5152 Poly <> x var
R5150:5150 Poly <> X var
def 5331:5342 <> test_repeat1
R5362:5364 Coq.Init.Logic <> :type_scope:x_'='_x not
R5348:5353 Poly <> repeat def
R5355:5357 Coq.Init.Datatypes <> nat ind
R5365:5368 Poly <> cons constr
R5377:5380 Poly <> cons constr
R5389:5391 Poly <> nil constr
R5393:5395 Coq.Init.Datatypes <> nat ind
R5382:5384 Coq.Init.Datatypes <> nat ind
R5370:5372 Coq.Init.Datatypes <> nat ind
def 5555:5566 <> test_repeat2
R5591:5593 Coq.Init.Logic <> :type_scope:x_'='_x not
R5572:5577 Poly <> repeat def
R5584:5588 Basics <> false constr
R5579:5582 Basics <> bool ind
R5594:5597 Poly <> cons constr
R5611:5613 Poly <> nil constr
R5615:5618 Basics <> bool ind
R5604:5608 Basics <> false constr
R5599:5602 Basics <> bool ind
mod 5657:5669 <> MumbleGrumble
ind 5793:5798 MumbleGrumble mumble
constr 5814:5814 MumbleGrumble a
constr 5829:5829 MumbleGrumble b
constr 5861:5861 MumbleGrumble c
R5818:5823 Poly <> mumble ind
R5839:5842 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5846:5849 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5850:5855 Poly <> mumble ind
R5843:5845 Coq.Init.Datatypes <> nat ind
R5833:5838 Poly <> mumble ind
R5865:5870 Poly <> mumble ind
ind 5884:5890 MumbleGrumble grumble
constr 5915:5915 MumbleGrumble d
constr 5943:5943 MumbleGrumble e
R5925:5928 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5929:5935 Poly <> grumble ind
R5937:5937 Poly <> X var
R5919:5924 Poly MumbleGrumble mumble ind
R5948:5951 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5952:5958 Poly <> grumble ind
R5960:5960 Poly <> X var
R5947:5947 Poly <> X var
R6256:6256 Poly MumbleGrumble d constr
R6266:6266 Poly MumbleGrumble b constr
R6268:6268 Poly MumbleGrumble a constr
R6258:6263 Poly MumbleGrumble mumble ind
R6282:6282 Poly MumbleGrumble e constr
R6292:6292 Poly MumbleGrumble b constr
R6294:6294 Poly MumbleGrumble c constr
R6284:6289 Poly MumbleGrumble mumble ind
R6316:6328 Poly MumbleGrumble <> mod
def 6606:6612 <> repeat'
R6626:6629 Poly <> list ind
R6631:6631 Poly <> X var
R6644:6648 Poly <> count var
R6671:6673 Poly <> nil constr
R6675:6675 Poly <> X var
R6681:6681 Coq.Init.Datatypes <> S constr
R6693:6696 Poly <> cons constr
R6703:6709 Poly <> repeat' def
R6713:6713 Poly <> x var
R6711:6711 Poly <> X var
R6700:6700 Poly <> x var
R6698:6698 Poly <> X var
R6813:6819 Poly <> repeat' def
R6875:6880 Poly <> repeat def
def 9422:9429 <> repeat''
R9443:9446 Poly <> list ind
R9448:9448 Poly <> X var
R9461:9465 Poly <> count var
R9488:9490 Poly <> nil constr
R9498:9498 Coq.Init.Datatypes <> S constr
R9510:9513 Poly <> cons constr
R9520:9527 Poly <> repeat'' def
R9531:9531 Poly <> x var
R9517:9517 Poly <> x var
def 9857:9863 <> list123
R9870:9873 Poly <> cons constr
R9882:9885 Poly <> cons constr
R9894:9897 Poly <> cons constr
R9906:9908 Poly <> nil constr
R9910:9912 Coq.Init.Datatypes <> nat ind
R9899:9901 Coq.Init.Datatypes <> nat ind
R9887:9889 Coq.Init.Datatypes <> nat ind
R9875:9877 Coq.Init.Datatypes <> nat ind
def 9986:9993 <> list123'
R10000:10003 Poly <> cons constr
R10010:10013 Poly <> cons constr
R10020:10023 Poly <> cons constr
R10030:10032 Poly <> nil constr
R10653:10655 Poly <> nil constr
R10653:10655 Poly <> nil constr
R10672:10675 Poly <> cons constr
R10672:10675 Poly <> cons constr
R10696:10701 Poly <> repeat def
R10696:10701 Poly <> repeat def
def 10788:10796 <> list123''
R10801:10804 Poly <> cons constr
R10809:10812 Poly <> cons constr
R10817:10820 Poly <> cons constr
R10824:10826 Poly <> nil constr
def 11016:11024 <> repeat'''
R11042:11042 Poly <> X var
R11054:11056 Coq.Init.Datatypes <> nat ind
R11061:11064 Poly <> list ind
R11066:11066 Poly <> X var
R11079:11083 Poly <> count var
R11106:11108 Poly <> nil constr
R11114:11114 Coq.Init.Datatypes <> S constr
R11126:11129 Poly <> cons constr
R11134:11142 Poly <> repeat''' def
R11144:11144 Poly <> x var
R11131:11131 Poly <> x var
ind 11743:11747 <> list'
constr 11772:11775 <> nil'
constr 11789:11793 <> cons'
R11779:11783 Poly <> list' ind
R11779:11783 Poly <> X var
R11798:11801 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11807:11810 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11811:11815 Poly <> list' ind
R11811:11815 Poly <> X var
R11802:11806 Poly <> list' ind
R11802:11806 Poly <> X var
R11797:11797 Poly <> X var
def 12251:12253 <> app
R12275:12278 Poly <> list ind
R12280:12280 Poly <> X var
R12299:12302 Poly <> list ind
R12304:12304 Poly <> X var
R12318:12319 Poly <> l1 var
R12330:12332 Poly <> nil constr
R12342:12343 Poly <> l2 var
R12349:12352 Poly <> cons constr
R12361:12364 Poly <> cons constr
R12369:12371 Poly <> app def
R12375:12376 Poly <> l2 var
def 12396:12398 <> rev
R12412:12415 Poly <> list ind
R12417:12417 Poly <> X var
R12422:12425 Poly <> list ind
R12427:12427 Poly <> X var
R12440:12440 Poly <> l var
R12451:12453 Poly <> nil constr
R12463:12465 Poly <> nil constr
R12471:12474 Poly <> cons constr
R12483:12485 Poly <> app def
R12496:12499 Poly <> cons constr
R12503:12505 Poly <> nil constr
R12488:12490 Poly <> rev def
def 12525:12530 <> length
R12548:12551 Poly <> list ind
R12553:12553 Poly <> X var
R12558:12560 Coq.Init.Datatypes <> nat ind
R12573:12573 Poly <> l var
R12584:12586 Poly <> nil constr
R12597:12600 Poly <> cons constr
R12610:12610 Coq.Init.Datatypes <> S constr
R12613:12618 Poly <> length def
def 12640:12648 <> test_rev1
R12679:12682 Coq.Init.Logic <> :type_scope:x_'='_x not
R12702:12702 Coq.Init.Logic <> :type_scope:x_'='_x not
R12654:12656 Poly <> rev def
R12659:12662 Poly <> cons constr
R12667:12670 Poly <> cons constr
R12674:12676 Poly <> nil constr
R12683:12686 Poly <> cons constr
R12691:12694 Poly <> cons constr
R12698:12700 Poly <> nil constr
def 12740:12748 <> test_rev2
R12772:12774 Coq.Init.Logic <> :type_scope:x_'='_x not
R12753:12755 Poly <> rev def
R12758:12761 Poly <> cons constr
R12768:12770 Poly <> nil constr
R12763:12766 Basics <> true constr
R12775:12778 Poly <> cons constr
R12785:12787 Poly <> nil constr
R12780:12783 Basics <> true constr
def 12825:12836 <> test_length1
R12876:12878 Coq.Init.Logic <> :type_scope:x_'='_x not
R12839:12844 Poly <> length def
R12847:12850 Poly <> cons constr
R12855:12858 Poly <> cons constr
R12863:12866 Poly <> cons constr
R12870:12872 Poly <> nil constr
def 13352:13356 <> mynil
R13361:13363 Poly <> nil constr
def 13930:13934 <> mynil
R13938:13941 Poly <> list ind
R13943:13945 Coq.Init.Datatypes <> nat ind
R13950:13952 Poly <> nil constr
R14081:14083 Poly <> nil constr
def 14098:14103 <> mynil'
R14109:14111 Poly <> nil constr
R14113:14115 Coq.Init.Datatypes <> nat ind
R14397:14400 Poly <> cons constr
not 14384:14384 <> ::x_'::'_x
R14482:14484 Poly <> nil constr
not 14473:14473 <> ::'['_']'
R14517:14520 Poly <> cons constr
R14528:14531 Poly <> cons constr
R14535:14536 Poly <> ::'['_']' not
not 14496:14496 <> ::'['_x_';'_'..'_';'_x_']'
R14566:14568 Poly <> app def
not 14553:14553 <> ::x_'++'_x
def 14701:14710 <> list123'''
R14715:14715 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14717:14718 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14720:14721 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14723:14723 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 15031:15039 <> app_nil_r
R15069:15072 Poly <> list ind
R15074:15074 Poly <> X var
R15086:15088 Coq.Init.Logic <> :type_scope:x_'='_x not
R15080:15083 Poly <> ::x_'++'_x not
R15079:15079 Poly <> l var
R15084:15085 Poly <> ::'['_']' not
R15089:15089 Poly <> l var
prf 15214:15222 <> app_assoc
R15242:15245 Poly <> list ind
R15247:15247 Poly <> A var
R15264:15266 Coq.Init.Logic <> :type_scope:x_'='_x not
R15254:15257 Poly <> ::x_'++'_x not
R15253:15253 Poly <> l var
R15259:15262 Poly <> ::x_'++'_x not
R15258:15258 Poly <> m var
R15263:15263 Poly <> n var
R15267:15267 Poly <> ::x_'++'_x not
R15274:15278 Poly <> ::x_'++'_x not
R15269:15272 Poly <> ::x_'++'_x not
R15268:15268 Poly <> l var
R15273:15273 Poly <> m var
R15279:15279 Poly <> n var
prf 15406:15415 <> app_length
R15444:15447 Poly <> list ind
R15449:15449 Poly <> X var
R15472:15474 Coq.Init.Logic <> :type_scope:x_'='_x not
R15455:15460 Poly <> length def
R15465:15468 Poly <> ::x_'++'_x not
R15463:15464 Poly <> l1 var
R15469:15470 Poly <> l2 var
R15484:15486 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15475:15480 Poly <> length def
R15482:15483 Poly <> l1 var
R15487:15492 Poly <> length def
R15494:15495 Poly <> l2 var
prf 15754:15766 <> rev_app_distr
R15787:15790 Poly <> list ind
R15792:15792 Poly <> X var
R15812:15814 Coq.Init.Logic <> :type_scope:x_'='_x not
R15798:15800 Poly <> rev def
R15805:15808 Poly <> ::x_'++'_x not
R15803:15804 Poly <> l1 var
R15809:15810 Poly <> l2 var
R15821:15824 Poly <> ::x_'++'_x not
R15815:15817 Poly <> rev def
R15819:15820 Poly <> l2 var
R15825:15827 Poly <> rev def
R15829:15830 Poly <> l1 var
R15913:15921 Poly <> app_nil_r thm
R15913:15921 Poly <> app_nil_r thm
R15913:15921 Poly <> app_nil_r thm
R15971:15979 Poly <> app_assoc thm
R15971:15979 Poly <> app_assoc thm
R15971:15979 Poly <> app_assoc thm
prf 16009:16022 <> rev_involutive
R16054:16057 Poly <> list ind
R16059:16059 Poly <> X var
R16075:16077 Coq.Init.Logic <> :type_scope:x_'='_x not
R16064:16066 Poly <> rev def
R16069:16071 Poly <> rev def
R16073:16073 Poly <> l var
R16078:16078 Poly <> l var
R16169:16181 Poly <> rev_app_distr thm
R16169:16181 Poly <> rev_app_distr thm
R16169:16181 Poly <> rev_app_distr thm
ind 16526:16529 <> prod
constr 16556:16559 <> pair
R16564:16567 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16569:16572 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16573:16576 Poly <> prod ind
R16580:16580 Poly <> Y var
R16578:16578 Poly <> X var
R16568:16568 Poly <> Y var
R16563:16563 Poly <> X var
R16594:16597 Poly <> pair constr
R16594:16597 Poly <> pair constr
R16744:16747 Poly <> pair constr
not 16728:16728 <> ::'('_x_','_x_')'
R16883:16886 Poly <> prod ind
not 16871:16871 <> :type_scope:x_'*'_x
def 17485:17487 <> fst
R17508:17510 Poly <> :type_scope:x_'*'_x not
R17507:17507 Poly <> X var
R17511:17511 Poly <> Y var
R17516:17516 Poly <> X var
R17529:17529 Poly <> p var
R17540:17540 Poly <> ::'('_x_','_x_')' not
R17542:17543 Poly <> ::'('_x_','_x_')' not
R17545:17545 Poly <> ::'('_x_','_x_')' not
def 17571:17573 <> snd
R17594:17596 Poly <> :type_scope:x_'*'_x not
R17593:17593 Poly <> X var
R17597:17597 Poly <> Y var
R17602:17602 Poly <> Y var
R17615:17615 Poly <> p var
R17626:17626 Poly <> ::'('_x_','_x_')' not
R17628:17629 Poly <> ::'('_x_','_x_')' not
R17631:17631 Poly <> ::'('_x_','_x_')' not
def 17878:17884 <> combine
R17905:17908 Poly <> list ind
R17910:17910 Poly <> X var
R17919:17922 Poly <> list ind
R17924:17924 Poly <> Y var
R17940:17943 Poly <> list ind
R17947:17947 Poly <> :type_scope:x_'*'_x not
R17946:17946 Poly <> X var
R17948:17948 Poly <> Y var
R17966:17967 Poly <> ly var
R17962:17963 Poly <> lx var
R17978:17979 Poly <> ::'['_']' not
R17987:17988 Poly <> ::'['_']' not
R17997:17998 Poly <> ::'['_']' not
R18003:18004 Poly <> ::'['_']' not
R18011:18014 Poly <> ::x_'::'_x not
R18020:18023 Poly <> ::x_'::'_x not
R18036:18040 Poly <> ::x_'::'_x not
R18054:18054 Poly <> ::x_'::'_x not
R18030:18030 Poly <> ::'('_x_','_x_')' not
R18032:18033 Poly <> ::'('_x_','_x_')' not
R18035:18035 Poly <> ::'('_x_','_x_')' not
R18041:18047 Poly <> combine def
def 18784:18788 <> split
R18808:18811 Poly <> list ind
R18815:18815 Poly <> :type_scope:x_'*'_x not
R18814:18814 Poly <> X var
R18816:18816 Poly <> Y var
R18837:18837 Poly <> :type_scope:x_'*'_x not
R18844:18848 Poly <> :type_scope:x_'*'_x not
R18855:18855 Poly <> :type_scope:x_'*'_x not
R18838:18841 Poly <> list ind
R18843:18843 Poly <> X var
R18849:18852 Poly <> list ind
R18854:18854 Poly <> Y var
R18870:18870 Poly <> l var
R18885:18887 Poly <> nil constr
R18892:18892 Poly <> ::'('_x_','_x_')' not
R18896:18897 Poly <> ::'('_x_','_x_')' not
R18901:18901 Poly <> ::'('_x_','_x_')' not
R18893:18895 Poly <> nil constr
R18898:18900 Poly <> nil constr
R18916:18917 Poly <> ::x_'::'_x not
R18911:18911 Poly <> ::'('_x_','_x_')' not
R18913:18913 Poly <> ::'('_x_','_x_')' not
R18915:18915 Poly <> ::'('_x_','_x_')' not
R18939:18943 Poly <> split def
R18974:18974 Poly <> ::'('_x_','_x_')' not
R18980:18980 Poly <> ::'('_x_','_x_')' not
R18986:18986 Poly <> ::'('_x_','_x_')' not
R18976:18977 Poly <> ::x_'::'_x not
R18978:18979 Poly <> lx var
R18982:18983 Poly <> ::x_'::'_x not
R18984:18985 Poly <> ly var
def 19006:19015 <> test_split
R19047:19049 Coq.Init.Logic <> :type_scope:x_'='_x not
R19020:19024 Poly <> split def
R19026:19026 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19036:19036 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19046:19046 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19027:19027 Poly <> ::'('_x_','_x_')' not
R19029:19029 Poly <> ::'('_x_','_x_')' not
R19035:19035 Poly <> ::'('_x_','_x_')' not
R19030:19034 Basics <> false constr
R19037:19037 Poly <> ::'('_x_','_x_')' not
R19039:19039 Poly <> ::'('_x_','_x_')' not
R19045:19045 Poly <> ::'('_x_','_x_')' not
R19040:19044 Basics <> false constr
R19050:19050 Poly <> ::'('_x_','_x_')' not
R19056:19056 Poly <> ::'('_x_','_x_')' not
R19070:19070 Poly <> ::'('_x_','_x_')' not
R19051:19051 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19053:19053 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19055:19055 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19057:19057 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19063:19063 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19069:19069 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19058:19062 Basics <> false constr
R19064:19068 Basics <> false constr
ind 19351:19356 <> option
constr 19381:19384 <> Some
constr 19406:19409 <> None
R19389:19392 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19393:19398 Poly <> option ind
R19400:19400 Poly <> X var
R19388:19388 Poly <> X var
R19413:19418 Poly <> option ind
R19420:19420 Poly <> X var
R19434:19437 Poly <> Some constr
R19434:19437 Poly <> Some constr
R19456:19459 Poly <> None constr
R19456:19459 Poly <> None constr
def 19573:19581 <> nth_error
R19599:19602 Poly <> list ind
R19604:19604 Poly <> X var
R19612:19614 Coq.Init.Datatypes <> nat ind
R19638:19643 Poly <> option ind
R19645:19645 Poly <> X var
R19658:19658 Poly <> l var
R19669:19670 Poly <> ::'['_']' not
R19675:19678 Poly <> None constr
R19685:19688 Poly <> ::x_'::'_x not
R19698:19704 Basics <> beq_nat def
R19708:19708 Coq.Init.Datatypes <> O constr
R19706:19706 Poly <> n var
R19727:19735 Poly <> nth_error def
R19741:19744 Coq.Init.Peano <> pred syndef
R19746:19746 Poly <> n var
R19715:19718 Poly <> Some constr
def 19765:19779 <> test_nth_error1
R19804:19806 Coq.Init.Logic <> :type_scope:x_'='_x not
R19783:19791 Poly <> nth_error def
R19793:19793 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19795:19795 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19797:19797 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19799:19799 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19801:19801 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19807:19810 Poly <> Some constr
def 19848:19862 <> test_nth_error2
R19887:19889 Coq.Init.Logic <> :type_scope:x_'='_x not
R19866:19874 Poly <> nth_error def
R19876:19876 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19880:19880 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19884:19884 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19877:19877 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19879:19879 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19881:19881 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19883:19883 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19890:19893 Poly <> Some constr
R19895:19895 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19897:19897 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19933:19947 <> test_nth_error3
R19969:19971 Coq.Init.Logic <> :type_scope:x_'='_x not
R19951:19959 Poly <> nth_error def
R19961:19961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19966:19966 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19962:19965 Basics <> true constr
R19972:19975 Poly <> None constr
def 20231:20238 <> hd_error
R20256:20259 Poly <> list ind
R20261:20261 Poly <> X var
R20266:20271 Poly <> option ind
R20273:20273 Poly <> X var
R20286:20286 Poly <> l var
R20299:20301 Poly <> nil constr
R20306:20309 Poly <> None constr
R20318:20319 Poly <> ::x_'::'_x not
R20326:20329 Poly <> Some constr
R20468:20475 Poly <> hd_error def
def 20487:20500 <> test_hd_error1
R20518:20520 Coq.Init.Logic <> :type_scope:x_'='_x not
R20504:20511 Poly <> hd_error def
R20513:20513 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20515:20515 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20517:20517 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20521:20524 Poly <> Some constr
def 20562:20575 <> test_hd_error2
R20598:20601 Coq.Init.Logic <> :type_scope:x_'='_x not
R20579:20586 Poly <> hd_error def
R20589:20589 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20593:20593 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20597:20597 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20590:20590 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20592:20592 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20594:20594 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20596:20596 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20602:20605 Poly <> Some constr
R20607:20607 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20609:20609 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21296:21305 <> doit3times
R21320:21321 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21322:21322 Poly <> X var
R21319:21319 Poly <> X var
R21328:21328 Poly <> X var
R21333:21333 Poly <> X var
R21340:21340 Poly <> f var
R21343:21343 Poly <> f var
R21346:21346 Poly <> f var
R21348:21348 Poly <> n var
R21507:21516 Poly <> doit3times def
def 21588:21602 <> test_doit3times
R21626:21628 Coq.Init.Logic <> :type_scope:x_'='_x not
R21605:21614 Poly <> doit3times def
R21616:21623 Basics <> minustwo def
def 21667:21682 <> test_doit3times'
R21705:21707 Coq.Init.Logic <> :type_scope:x_'='_x not
R21685:21694 Poly <> doit3times def
R21701:21704 Basics <> true constr
R21696:21699 Basics <> negb def
R21708:21712 Basics <> false constr
def 22103:22108 <> filter
R22127:22128 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22129:22132 Basics <> bool ind
R22126:22126 Poly <> X var
R22138:22141 Poly <> list ind
R22143:22143 Poly <> X var
R22165:22168 Poly <> list ind
R22170:22170 Poly <> X var
R22184:22184 Poly <> l var
R22195:22196 Poly <> ::'['_']' not
R22205:22206 Poly <> ::'['_']' not
R22213:22216 Poly <> ::x_'::'_x not
R22225:22228 Poly <> test var
R22293:22298 Poly <> filter def
R22300:22303 Poly <> test var
R22238:22242 Poly <> ::x_'::'_x not
R22256:22256 Poly <> ::x_'::'_x not
R22243:22248 Poly <> filter def
R22250:22253 Poly <> test var
def 22484:22495 <> test_filter1
R22520:22522 Coq.Init.Logic <> :type_scope:x_'='_x not
R22498:22503 Poly <> filter def
R22511:22511 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22513:22513 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22515:22515 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22517:22517 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22519:22519 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22505:22509 Basics <> evenb def
R22523:22523 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22525:22525 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22527:22527 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22568:22578 <> length_is_1
R22596:22599 Poly <> list ind
R22601:22601 Poly <> X var
R22606:22609 Basics <> bool ind
R22616:22622 Basics <> beq_nat def
R22625:22630 Poly <> length def
R22632:22632 Poly <> l var
def 22647:22658 <> test_filter2
R22733:22737 Coq.Init.Logic <> :type_scope:x_'='_x not
R22665:22670 Poly <> filter def
R22695:22696 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22703:22704 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22708:22709 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22713:22714 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22722:22723 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22726:22727 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22731:22732 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22697:22697 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22699:22700 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22702:22702 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22705:22705 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22707:22707 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22710:22710 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22712:22712 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22715:22715 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22717:22717 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22719:22719 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22721:22721 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22724:22725 Poly <> ::'['_']' not
R22728:22728 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22730:22730 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22672:22682 Poly <> length_is_1 def
R22738:22739 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22743:22744 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22748:22749 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22753:22754 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22740:22740 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22742:22742 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22745:22745 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22747:22747 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22750:22750 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22752:22752 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22913:22928 <> countoddmembers'
R22933:22936 Poly <> list ind
R22938:22940 Coq.Init.Datatypes <> nat ind
R22945:22947 Coq.Init.Datatypes <> nat ind
R22954:22959 Poly <> length def
R22962:22967 Poly <> filter def
R22974:22974 Poly <> l var
R22969:22972 Basics <> oddb def
def 22987:23008 <> test_countoddmembers'1
R23043:23045 Coq.Init.Logic <> :type_scope:x_'='_x not
R23013:23028 Poly <> countoddmembers' def
R23030:23030 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23032:23032 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23034:23034 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23036:23036 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23038:23038 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23040:23040 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23042:23042 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23083:23104 <> test_countoddmembers'2
R23133:23135 Coq.Init.Logic <> :type_scope:x_'='_x not
R23109:23124 Poly <> countoddmembers' def
R23126:23126 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23128:23128 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23130:23130 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23132:23132 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23173:23194 <> test_countoddmembers'3
R23219:23221 Coq.Init.Logic <> :type_scope:x_'='_x not
R23199:23214 Poly <> countoddmembers' def
R23216:23218 Poly <> nil constr
def 24000:24013 <> test_anon_fun'
R24047:24049 Coq.Init.Logic <> :type_scope:x_'='_x not
R24018:24027 Poly <> doit3times def
R24040:24042 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R24039:24039 Poly <> n var
R24043:24043 Poly <> n var
def 24290:24302 <> test_filter2'
R24397:24401 Coq.Init.Logic <> :type_scope:x_'='_x not
R24309:24314 Poly <> filter def
R24359:24360 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24367:24368 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24372:24373 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24377:24378 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24386:24387 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24390:24391 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24395:24396 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24361:24361 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24363:24364 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24366:24366 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24369:24369 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24371:24371 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24374:24374 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24376:24376 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24379:24379 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24381:24381 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24383:24383 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24385:24385 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24388:24389 Poly <> ::'['_']' not
R24392:24392 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24394:24394 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24326:24332 Basics <> beq_nat def
R24335:24340 Poly <> length def
R24342:24342 Poly <> l var
R24402:24403 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24407:24408 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24412:24413 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24417:24418 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24404:24404 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24406:24406 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24409:24409 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24411:24411 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24414:24414 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24416:24416 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24720:24734 <> filter_even_gt7
R24741:24744 Poly <> list ind
R24746:24748 Coq.Init.Datatypes <> nat ind
R24753:24756 Poly <> list ind
R24758:24760 Coq.Init.Datatypes <> nat ind
R24769:24774 Poly <> filter def
R24812:24812 Poly <> l var
R24786:24789 Basics <> andb def
R24802:24804 Basics <> leb def
R24808:24808 Poly <> n var
R24792:24796 Basics <> evenb def
R24798:24798 Poly <> n var
def 24824:24845 <> test_filter_even_gt7_1
R24886:24888 Coq.Init.Logic <> :type_scope:x_'='_x not
R24851:24865 Poly <> filter_even_gt7 def
R24867:24867 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24869:24869 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24871:24871 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24873:24873 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24875:24875 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24878:24878 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24880:24880 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24883:24883 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24885:24885 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24889:24889 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24892:24892 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24895:24895 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24897:24897 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24935:24956 <> test_filter_even_gt7_2
R24992:24994 Coq.Init.Logic <> :type_scope:x_'='_x not
R24962:24976 Poly <> filter_even_gt7 def
R24978:24978 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24980:24980 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24982:24982 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24984:24984 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24987:24987 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24991:24991 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24995:24996 Poly <> ::'['_']' not
def 25656:25664 <> partition
R25707:25710 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25711:25714 Basics <> bool ind
R25706:25706 Poly <> X var
R25743:25746 Poly <> list ind
R25748:25748 Poly <> X var
R25778:25780 Poly <> :type_scope:x_'*'_x not
R25772:25775 Poly <> list ind
R25777:25777 Poly <> X var
R25781:25784 Poly <> list ind
R25786:25786 Poly <> X var
R25791:25791 Poly <> ::'('_x_','_x_')' not
R25805:25806 Poly <> ::'('_x_','_x_')' not
R25840:25840 Poly <> ::'('_x_','_x_')' not
R25792:25797 Poly <> filter def
R25804:25804 Poly <> l var
R25799:25802 Poly <> test var
R25807:25812 Poly <> filter def
R25839:25839 Poly <> l var
R25824:25827 Basics <> negb def
R25830:25833 Poly <> test var
R25835:25835 Poly <> x var
def 26030:26044 <> test_partition1
R26073:26075 Coq.Init.Logic <> :type_scope:x_'='_x not
R26047:26055 Poly <> partition def
R26062:26062 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26064:26064 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26066:26066 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26068:26068 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26070:26070 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26072:26072 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26057:26060 Basics <> oddb def
R26076:26076 Poly <> ::'('_x_','_x_')' not
R26084:26085 Poly <> ::'('_x_','_x_')' not
R26091:26091 Poly <> ::'('_x_','_x_')' not
R26077:26077 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26079:26079 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26081:26081 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26083:26083 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26086:26086 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26088:26088 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26090:26090 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26127:26141 <> test_partition2
R26178:26180 Coq.Init.Logic <> :type_scope:x_'='_x not
R26144:26152 Poly <> partition def
R26171:26171 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26173:26173 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26175:26175 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26177:26177 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26164:26168 Basics <> false constr
R26181:26181 Poly <> ::'('_x_','_x_')' not
R26184:26185 Poly <> ::'('_x_','_x_')' not
R26193:26193 Poly <> ::'('_x_','_x_')' not
R26182:26183 Poly <> ::'['_']' not
R26186:26186 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26188:26188 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26190:26190 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26192:26192 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26389:26391 <> map
R26408:26409 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26410:26410 Poly <> Y var
R26407:26407 Poly <> X var
R26416:26419 Poly <> list ind
R26421:26421 Poly <> X var
R26427:26430 Poly <> list ind
R26432:26432 Poly <> Y var
R26446:26446 Poly <> l var
R26457:26458 Poly <> ::'['_']' not
R26467:26468 Poly <> ::'['_']' not
R26475:26478 Poly <> ::x_'::'_x not
R26484:26484 Poly <> ::x_'::'_x not
R26488:26493 Poly <> ::x_'::'_x not
R26501:26501 Poly <> ::x_'::'_x not
R26485:26485 Poly <> f var
R26494:26496 Poly <> map def
R26498:26498 Poly <> f var
def 26718:26726 <> test_map1
R26760:26762 Coq.Init.Logic <> :type_scope:x_'='_x not
R26729:26731 Poly <> map def
R26753:26753 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26755:26755 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26757:26757 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26759:26759 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26743:26746 Coq.Init.Peano <> plus syndef
R26750:26750 Poly <> x var
R26763:26763 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26765:26765 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26767:26767 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26769:26769 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27063:27071 <> test_map2
R27094:27096 Coq.Init.Logic <> :type_scope:x_'='_x not
R27076:27078 Poly <> map def
R27085:27085 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27087:27087 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27089:27089 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27091:27091 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27093:27093 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27080:27083 Basics <> oddb def
R27097:27097 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27103:27103 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27108:27108 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27114:27114 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27119:27119 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27098:27102 Basics <> false constr
R27104:27107 Basics <> true constr
R27109:27113 Basics <> false constr
R27115:27118 Basics <> true constr
def 27308:27316 <> test_map3
R27364:27368 Coq.Init.Logic <> :type_scope:x_'='_x not
R27323:27325 Poly <> map def
R27355:27355 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27357:27357 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27359:27359 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27361:27361 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27363:27363 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27337:27337 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27345:27345 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27352:27352 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27338:27342 Basics <> evenb def
R27344:27344 Poly <> n var
R27346:27349 Basics <> oddb def
R27351:27351 Poly <> n var
R27369:27369 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27382:27382 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27395:27395 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27408:27408 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27421:27421 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27370:27370 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27375:27375 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27381:27381 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27371:27374 Basics <> true constr
R27376:27380 Basics <> false constr
R27383:27383 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27389:27389 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27394:27394 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27384:27388 Basics <> false constr
R27390:27393 Basics <> true constr
R27396:27396 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27401:27401 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27407:27407 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27397:27400 Basics <> true constr
R27402:27406 Basics <> false constr
R27409:27409 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27415:27415 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27420:27420 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27410:27414 Basics <> false constr
R27416:27419 Basics <> true constr
prf 27687:27699 <> map_app_distr
R27725:27728 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27729:27729 Poly <> Y var
R27724:27724 Poly <> X var
R27737:27740 Poly <> list ind
R27742:27742 Poly <> X var
R27762:27764 Coq.Init.Logic <> :type_scope:x_'='_x not
R27748:27750 Poly <> map def
R27756:27759 Poly <> ::x_'++'_x not
R27755:27755 Poly <> l var
R27760:27760 Poly <> r var
R27752:27752 Poly <> f var
R27765:27765 Poly <> ::x_'++'_x not
R27773:27778 Poly <> ::x_'++'_x not
R27786:27786 Poly <> ::x_'++'_x not
R27766:27768 Poly <> map def
R27772:27772 Poly <> l var
R27770:27770 Poly <> f var
R27779:27781 Poly <> map def
R27785:27785 Poly <> r var
R27783:27783 Poly <> f var
prf 27916:27922 <> map_rev
R27952:27955 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27956:27956 Poly <> Y var
R27951:27951 Poly <> X var
R27964:27967 Poly <> list ind
R27969:27969 Poly <> X var
R27988:27990 Coq.Init.Logic <> :type_scope:x_'='_x not
R27975:27977 Poly <> map def
R27982:27984 Poly <> rev def
R27986:27986 Poly <> l var
R27979:27979 Poly <> f var
R27991:27993 Poly <> rev def
R27996:27998 Poly <> map def
R28002:28002 Poly <> l var
R28000:28000 Poly <> f var
R28097:28099 Poly <> map def
R28110:28122 Poly <> map_app_distr thm
R28110:28122 Poly <> map_app_distr thm
R28110:28122 Poly <> map_app_distr thm
def 28635:28642 <> flat_map
R28659:28662 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28663:28666 Poly <> list ind
R28668:28668 Poly <> Y var
R28658:28658 Poly <> X var
R28674:28677 Poly <> list ind
R28679:28679 Poly <> X var
R28704:28707 Poly <> list ind
R28709:28709 Poly <> Y var
R28723:28723 Poly <> l var
R28735:28736 Poly <> ::'['_']' not
R28741:28742 Poly <> ::'['_']' not
R28750:28751 Poly <> ::x_'::'_x not
R28758:28760 Poly <> app def
R28769:28776 Poly <> flat_map def
R28778:28778 Poly <> f var
R28763:28763 Poly <> f var
def 28800:28813 <> test_flat_map1
R28853:28857 Coq.Init.Logic <> :type_scope:x_'='_x not
R28818:28825 Poly <> flat_map def
R28846:28846 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28848:28848 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28850:28850 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28852:28852 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28837:28837 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28839:28839 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28841:28841 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28843:28843 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28838:28838 Poly <> n var
R28840:28840 Poly <> n var
R28842:28842 Poly <> n var
R28858:28858 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28860:28861 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28863:28864 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28866:28867 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28869:28870 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28872:28873 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28875:28876 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28878:28879 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28881:28882 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28884:28884 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 29084:29093 <> option_map
R29114:29117 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29118:29118 Poly <> Y var
R29113:29113 Poly <> X var
R29127:29132 Poly <> option ind
R29134:29134 Poly <> X var
R29161:29166 Poly <> option ind
R29168:29168 Poly <> Y var
R29181:29182 Poly <> xo var
R29195:29198 Poly <> None constr
R29203:29206 Poly <> None constr
R29214:29217 Poly <> Some constr
R29224:29227 Poly <> Some constr
R29230:29230 Poly <> f var
def 30069:30072 <> fold
R30090:30091 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30093:30094 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30095:30095 Poly <> Y var
R30092:30092 Poly <> Y var
R30089:30089 Poly <> X var
R30101:30104 Poly <> list ind
R30106:30106 Poly <> X var
R30112:30112 Poly <> Y var
R30142:30142 Poly <> Y var
R30155:30155 Poly <> l var
R30166:30168 Poly <> nil constr
R30173:30173 Poly <> b var
R30180:30183 Poly <> ::x_'::'_x not
R30210:30210 Poly <> f var
R30215:30218 Poly <> fold def
R30224:30224 Poly <> b var
R30220:30220 Poly <> f var
R30699:30702 Poly <> fold def
R30704:30707 Basics <> andb def
def 30769:30781 <> fold_example1
R30808:30810 Coq.Init.Logic <> :type_scope:x_'='_x not
R30787:30790 Poly <> fold def
R30797:30797 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30799:30799 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30801:30801 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30803:30803 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30805:30805 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30792:30795 Coq.Init.Peano <> mult syndef
def 30849:30861 <> fold_example2
R30904:30906 Coq.Init.Logic <> :type_scope:x_'='_x not
R30867:30870 Poly <> fold def
R30900:30903 Basics <> true constr
R30877:30877 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30882:30882 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30887:30887 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30893:30893 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30898:30898 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30878:30881 Basics <> true constr
R30883:30886 Basics <> true constr
R30888:30892 Basics <> false constr
R30894:30897 Basics <> true constr
R30872:30875 Basics <> andb def
R30907:30911 Basics <> false constr
def 30948:30960 <> fold_example3
R30997:30999 Coq.Init.Logic <> :type_scope:x_'='_x not
R30966:30969 Poly <> fold def
R30995:30996 Poly <> ::'['_']' not
R30976:30976 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30980:30980 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30983:30983 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30989:30989 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30993:30993 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30977:30977 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30979:30979 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30981:30982 Poly <> ::'['_']' not
R30984:30984 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30986:30986 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30988:30988 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30990:30990 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30992:30992 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30971:30973 Poly <> app def
R31000:31000 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31002:31002 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31004:31004 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31006:31006 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31008:31008 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 31955:31962 <> constfun
R31978:31978 Poly <> X var
R31986:31987 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31988:31988 Poly <> X var
R31983:31985 Coq.Init.Datatypes <> nat ind
R32002:32004 Coq.Init.Datatypes <> nat ind
R32010:32010 Poly <> x var
def 32025:32029 <> ftrue
R32034:32041 Poly <> constfun def
R32043:32046 Basics <> true constr
def 32058:32074 <> constfun_example1
R32085:32087 Coq.Init.Logic <> :type_scope:x_'='_x not
R32078:32082 Poly <> ftrue def
R32088:32091 Basics <> true constr
def 32128:32144 <> constfun_example2
R32163:32165 Coq.Init.Logic <> :type_scope:x_'='_x not
R32149:32156 Poly <> constfun def
R32367:32370 Coq.Init.Peano <> plus syndef
def 32981:32985 <> plus3
R32990:32993 Coq.Init.Peano <> plus syndef
R33004:33008 Poly <> plus3 def
def 33020:33029 <> test_plus3
R33043:33045 Coq.Init.Logic <> :type_scope:x_'='_x not
R33036:33040 Poly <> plus3 def
def 33083:33093 <> test_plus3'
R33117:33119 Coq.Init.Logic <> :type_scope:x_'='_x not
R33099:33108 Poly <> doit3times def
R33110:33114 Poly <> plus3 def
def 33157:33168 <> test_plus3''
R33194:33196 Coq.Init.Logic <> :type_scope:x_'='_x not
R33173:33182 Poly <> doit3times def
R33185:33188 Coq.Init.Peano <> plus syndef
mod 33337:33345 <> Exercises
def 33548:33558 Exercises fold_length
R33576:33579 Poly <> list ind
R33581:33581 Poly <> X var
R33586:33588 Coq.Init.Datatypes <> nat ind
R33595:33598 Poly <> fold def
R33617:33617 Poly <> l var
R33612:33612 Coq.Init.Datatypes <> S constr
R33614:33614 Poly <> n var
def 33631:33647 Exercises test_fold_length1
R33670:33672 Coq.Init.Logic <> :type_scope:x_'='_x not
R33651:33661 Poly Exercises fold_length def
R33663:33663 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33665:33665 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33667:33667 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33669:33669 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 33758:33776 Exercises fold_length_correct
R33794:33797 Poly <> list ind
R33799:33799 Poly <> X var
R33818:33820 Coq.Init.Logic <> :type_scope:x_'='_x not
R33805:33815 Poly Exercises fold_length def
R33817:33817 Poly <> l var
R33821:33826 Poly <> length def
R33828:33828 Poly <> l var
R34088:34091 Poly <> fold def
def 34105:34112 Exercises fold_map
R34131:34134 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34135:34135 Poly <> Y var
R34130:34130 Poly <> X var
R34143:34146 Poly <> list ind
R34148:34148 Poly <> X var
R34153:34156 Poly <> list ind
R34158:34158 Poly <> Y var
R34165:34168 Poly <> fold def
R34194:34195 Poly <> ::'['_']' not
R34192:34192 Poly <> l var
R34182:34182 Poly <> ::x_'::'_x not
R34186:34188 Poly <> ::x_'::'_x not
R34183:34183 Poly <> f var
R34185:34185 Poly <> x var
R34189:34189 Poly <> y var
R34208:34215 Poly Exercises fold_map def
R34234:34234 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34236:34236 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34238:34238 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34240:34240 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34228:34230 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34227:34227 Poly <> x var
prf 34361:34374 Exercises fold_map_distr
R34400:34402 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34403:34403 Poly <> Y var
R34399:34399 Poly <> X var
R34411:34414 Poly <> list ind
R34416:34416 Poly <> X var
R34441:34443 Coq.Init.Logic <> :type_scope:x_'='_x not
R34422:34429 Poly Exercises fold_map def
R34435:34438 Poly <> ::x_'++'_x not
R34434:34434 Poly <> l var
R34439:34439 Poly <> r var
R34431:34431 Poly <> f var
R34444:34444 Poly <> ::x_'++'_x not
R34457:34462 Poly <> ::x_'++'_x not
R34475:34475 Poly <> ::x_'++'_x not
R34445:34452 Poly Exercises fold_map def
R34456:34456 Poly <> l var
R34454:34454 Poly <> f var
R34463:34470 Poly Exercises fold_map def
R34474:34474 Poly <> r var
R34472:34472 Poly <> f var
R34573:34575 Poly <> map def
R34585:34592 Poly Exercises fold_map def
R34610:34617 Poly Exercises fold_map def
prf 34681:34696 Exercises fold_map_correct
R34721:34724 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34725:34725 Poly <> Y var
R34720:34720 Poly <> X var
R34731:34734 Poly <> list ind
R34736:34736 Poly <> X var
R34754:34756 Coq.Init.Logic <> :type_scope:x_'='_x not
R34742:34749 Poly Exercises fold_map def
R34753:34753 Poly <> l var
R34751:34751 Poly <> f var
R34757:34759 Poly <> map def
R34763:34763 Poly <> l var
R34761:34761 Poly <> f var
R34858:34865 Poly Exercises fold_map def
R34882:34889 Poly Exercises fold_map def
def 35770:35779 Exercises prod_curry
R35808:35811 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35812:35812 Poly <> Z var
R35804:35806 Poly <> :type_scope:x_'*'_x not
R35803:35803 Poly <> X var
R35807:35807 Poly <> Y var
R35820:35820 Poly <> X var
R35828:35828 Poly <> Y var
R35833:35833 Poly <> Z var
R35838:35838 Poly <> f var
R35840:35840 Poly <> ::'('_x_','_x_')' not
R35842:35843 Poly <> ::'('_x_','_x_')' not
R35845:35845 Poly <> ::'('_x_','_x_')' not
R35841:35841 Poly <> x var
R35844:35844 Poly <> y var
def 35990:36001 Exercises prod_uncurry
R36026:36029 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36031:36034 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36035:36035 Poly <> Z var
R36030:36030 Poly <> Y var
R36025:36025 Poly <> X var
R36044:36046 Poly <> :type_scope:x_'*'_x not
R36043:36043 Poly <> X var
R36047:36047 Poly <> Y var
R36052:36052 Poly <> Z var
R36059:36059 Poly <> f var
R36070:36072 Poly <> snd def
R36074:36074 Poly <> p var
R36062:36064 Poly <> fst def
R36066:36066 Poly <> p var
def 36217:36226 Exercises test_map1'
R36249:36251 Coq.Init.Logic <> :type_scope:x_'='_x not
R36229:36231 Poly <> map def
R36242:36242 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36244:36244 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36246:36246 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36248:36248 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36234:36237 Coq.Init.Peano <> plus syndef
R36252:36252 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36254:36254 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36256:36256 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36258:36258 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36428:36437 Poly Exercises prod_curry def
R36447:36458 Poly Exercises prod_uncurry def
prf 36470:36482 Exercises uncurry_curry
R36538:36541 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36543:36546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36547:36547 Poly <> Z var
R36542:36542 Poly <> Y var
R36537:36537 Poly <> X var
R36612:36614 Coq.Init.Logic <> :type_scope:x_'='_x not
R36581:36590 Poly Exercises prod_curry def
R36611:36611 Poly <> y var
R36609:36609 Poly <> x var
R36593:36604 Poly Exercises prod_uncurry def
R36606:36606 Poly <> f var
R36615:36615 Poly <> f var
R36619:36619 Poly <> y var
R36617:36617 Poly <> x var
R36660:36671 Poly Exercises prod_uncurry def
R36681:36690 Poly Exercises prod_curry def
prf 36720:36732 Exercises curry_uncurry
R36787:36787 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36793:36797 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36798:36798 Poly <> Z var
R36789:36791 Poly <> :type_scope:x_'*'_x not
R36788:36788 Poly <> X var
R36792:36792 Poly <> Y var
R36807:36809 Poly <> :type_scope:x_'*'_x not
R36806:36806 Poly <> X var
R36810:36810 Poly <> Y var
R36845:36847 Coq.Init.Logic <> :type_scope:x_'='_x not
R36816:36827 Poly Exercises prod_uncurry def
R36844:36844 Poly <> p var
R36830:36839 Poly Exercises prod_curry def
R36841:36841 Poly <> f var
R36848:36848 Poly <> f var
R36850:36850 Poly <> p var
R36889:36898 Poly Exercises prod_curry def
R36908:36919 Poly Exercises prod_uncurry def
mod 37787:37792 <> Exercises.Church
def 37806:37808 Exercises.Church nat
R37830:37830 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37837:37841 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37843:37846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37847:37847 Poly <> X var
R37842:37842 Poly <> X var
R37832:37835 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37836:37836 Poly <> X var
R37831:37831 Poly <> X var
def 38003:38005 Exercises.Church one
R38009:38011 Poly Exercises.Church nat def
R38039:38042 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38043:38043 Poly <> X var
R38038:38038 Poly <> X var
R38051:38051 Poly <> X var
R38057:38057 Poly <> f var
R38059:38059 Poly <> x var
def 38139:38141 Exercises.Church two
R38145:38147 Poly Exercises.Church nat def
R38175:38178 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38179:38179 Poly <> X var
R38174:38174 Poly <> X var
R38187:38187 Poly <> X var
R38193:38193 Poly <> f var
R38196:38196 Poly <> f var
R38198:38198 Poly <> x var
def 38378:38381 Exercises.Church zero
R38385:38387 Poly Exercises.Church nat def
R38415:38418 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38419:38419 Poly <> X var
R38414:38414 Poly <> X var
R38427:38427 Poly <> X var
R38433:38433 Poly <> x var
def 38708:38712 Exercises.Church three
R38716:38718 Poly Exercises.Church nat def
R38724:38733 Poly <> doit3times def
def 38941:38944 Exercises.Church succ
R38951:38953 Poly Exercises.Church nat def
R38958:38960 Poly Exercises.Church nat def
R38987:38990 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38991:38991 Poly <> X var
R38986:38986 Poly <> X var
R38997:38997 Poly <> X var
R39003:39003 Poly <> f var
R39006:39006 Poly <> n var
R39012:39012 Poly <> x var
R39010:39010 Poly <> f var
R39008:39008 Poly <> X var
def 39025:39030 Exercises.Church succ_1
R39043:39045 Coq.Init.Logic <> :type_scope:x_'='_x not
R39034:39037 Poly Exercises.Church succ def
R39039:39042 Poly Exercises.Church zero def
R39046:39048 Poly Exercises.Church one def
def 39086:39091 Exercises.Church succ_2
R39103:39105 Coq.Init.Logic <> :type_scope:x_'='_x not
R39095:39098 Poly Exercises.Church succ def
R39100:39102 Poly Exercises.Church one def
R39106:39108 Poly Exercises.Church two def
def 39145:39150 Exercises.Church succ_3
R39162:39164 Coq.Init.Logic <> :type_scope:x_'='_x not
R39154:39157 Poly Exercises.Church succ def
R39159:39161 Poly Exercises.Church two def
R39165:39169 Poly Exercises.Church three def
def 39250:39253 Exercises.Church plus
R39262:39264 Poly Exercises.Church nat def
R39269:39271 Poly Exercises.Church nat def
R39295:39298 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39299:39299 Poly <> X var
R39294:39294 Poly <> X var
R39304:39304 Poly <> X var
R39310:39310 Poly <> n var
R39317:39317 Poly <> m var
R39323:39323 Poly <> x var
R39321:39321 Poly <> f var
R39319:39319 Poly <> X var
R39314:39314 Poly <> f var
R39312:39312 Poly <> X var
def 39336:39341 Exercises.Church plus_1
R39358:39360 Coq.Init.Logic <> :type_scope:x_'='_x not
R39345:39348 Poly Exercises.Church plus def
R39355:39357 Poly Exercises.Church one def
R39350:39353 Poly Exercises.Church zero def
R39361:39363 Poly Exercises.Church one def
def 39400:39405 Exercises.Church plus_2
R39423:39425 Coq.Init.Logic <> :type_scope:x_'='_x not
R39409:39412 Poly Exercises.Church plus def
R39418:39422 Poly Exercises.Church three def
R39414:39416 Poly Exercises.Church two def
R39426:39429 Poly Exercises.Church plus def
R39437:39439 Poly Exercises.Church two def
R39431:39435 Poly Exercises.Church three def
def 39476:39481 Exercises.Church plus_3
R39512:39514 Coq.Init.Logic <> :type_scope:x_'='_x not
R39487:39490 Poly Exercises.Church plus def
R39507:39511 Poly Exercises.Church three def
R39493:39496 Poly Exercises.Church plus def
R39502:39504 Poly Exercises.Church two def
R39498:39500 Poly Exercises.Church two def
R39515:39518 Poly Exercises.Church plus def
R39525:39528 Poly Exercises.Church plus def
R39536:39540 Poly Exercises.Church three def
R39530:39534 Poly Exercises.Church three def
R39520:39522 Poly Exercises.Church one def
def 39605:39608 Exercises.Church mult
R39617:39619 Poly Exercises.Church nat def
R39624:39626 Poly Exercises.Church nat def
R39651:39654 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39655:39655 Poly <> X var
R39650:39650 Poly <> X var
R39661:39661 Poly <> X var
R39667:39667 Poly <> n var
R39679:39679 Poly <> x var
R39672:39672 Poly <> m var
R39676:39676 Poly <> f var
R39674:39674 Poly <> X var
R39669:39669 Poly <> X var
def 39691:39696 Exercises.Church mult_1
R39712:39714 Coq.Init.Logic <> :type_scope:x_'='_x not
R39700:39703 Poly Exercises.Church mult def
R39709:39711 Poly Exercises.Church one def
R39705:39707 Poly Exercises.Church one def
R39715:39717 Poly Exercises.Church one def
def 39755:39760 Exercises.Church mult_2
R39792:39794 Coq.Init.Logic <> :type_scope:x_'='_x not
R39764:39767 Poly Exercises.Church mult def
R39775:39778 Poly Exercises.Church plus def
R39786:39790 Poly Exercises.Church three def
R39780:39784 Poly Exercises.Church three def
R39769:39772 Poly Exercises.Church zero def
R39795:39798 Poly Exercises.Church zero def
def 39835:39840 Exercises.Church mult_3
R39858:39860 Coq.Init.Logic <> :type_scope:x_'='_x not
R39844:39847 Poly Exercises.Church mult def
R39853:39857 Poly Exercises.Church three def
R39849:39851 Poly Exercises.Church two def
R39861:39864 Poly Exercises.Church plus def
R39872:39876 Poly Exercises.Church three def
R39866:39870 Poly Exercises.Church three def
R40189:40191 Poly Exercises.Church nat def
def 40206:40208 Exercises.Church exp
R40217:40219 Poly Exercises.Church nat def
R40224:40226 Poly Exercises.Church nat def
R40248:40249 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40250:40250 Poly <> X var
R40247:40247 Poly <> X var
R40256:40256 Poly <> X var
R40263:40263 Poly <> m var
R40275:40275 Poly <> n var
R40277:40277 Poly <> X var
R40267:40270 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40271:40271 Poly <> X var
R40266:40266 Poly <> X var
R40283:40283 Poly <> x var
R40281:40281 Poly <> f var
def 40295:40299 Exercises.Church exp_1
R40314:40316 Coq.Init.Logic <> :type_scope:x_'='_x not
R40303:40305 Poly Exercises.Church exp def
R40311:40313 Poly Exercises.Church two def
R40307:40309 Poly Exercises.Church two def
R40317:40320 Poly Exercises.Church plus def
R40326:40328 Poly Exercises.Church two def
R40322:40324 Poly Exercises.Church two def
def 40365:40369 Exercises.Church exp_2
R40386:40388 Coq.Init.Logic <> :type_scope:x_'='_x not
R40373:40375 Poly Exercises.Church exp def
R40383:40385 Poly Exercises.Church two def
R40377:40381 Poly Exercises.Church three def
R40389:40392 Poly Exercises.Church plus def
R40420:40422 Poly Exercises.Church one def
R40395:40398 Poly Exercises.Church mult def
R40405:40408 Poly Exercises.Church mult def
R40414:40416 Poly Exercises.Church two def
R40410:40412 Poly Exercises.Church two def
R40400:40402 Poly Exercises.Church two def
R40461:40464 Poly Exercises.Church plus def
R40492:40494 Poly Exercises.Church one def
R40467:40470 Poly Exercises.Church mult def
R40477:40480 Poly Exercises.Church mult def
R40486:40488 Poly Exercises.Church two def
R40482:40484 Poly Exercises.Church two def
R40472:40474 Poly Exercises.Church two def
R40507:40509 Poly Exercises.Church exp def
R40517:40519 Poly Exercises.Church two def
R40511:40515 Poly Exercises.Church three def
def 40532:40536 Exercises.Church exp_3
R40554:40556 Coq.Init.Logic <> :type_scope:x_'='_x not
R40540:40542 Poly Exercises.Church exp def
R40550:40553 Poly Exercises.Church zero def
R40544:40548 Poly Exercises.Church three def
R40557:40559 Poly Exercises.Church one def
R40593:40598 Poly Exercises.Church <> mod
R40616:40624 Poly Exercises <> mod
